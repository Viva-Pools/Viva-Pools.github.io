{"version":3,"sources":["clients/vite.client.ts","util/task.ts","common/constants.ts","util/types.ts","util/logger.ts","util/file.util.ts","bg2.svg","util/coin.util.ts","clients/coingecko.client.ts","clients/vitex.client.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","common/network.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header-loading/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","features/layout/components/header/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","features/pool/components/dialog-deposit/component.tsx","services/account.service.ts","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/netrewards/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/list-item/component.tsx","features/pool/components/list/component.tsx","features/pool/components/hero/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/dialog-warning/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts"],"names":["WS_RPC","require","logger","getLogger","providerOptions","retryTimes","retryInterval","client","_isConnected","_connector","_provider","_client","_emitter","_walletManager","_connectorFactory","initAsync","network","a","Promise","resolve","reject","create","rpcUrl","isResolved","on","err","error","ViteAPI","info","path","this","getEmitter","getWalletManager","WalletConnectorFactory","disconnect","method","args","request","account","methodName","abi","params","tokenId","amount","toAddress","block","accountBlock","createAccountBlock","address","WebWalletAccount","setProvider","setPrivateKey","privateKey","autoSetPreviousAccountBlock","sign","send","result","SessionWalletAccount","connector","emitConfirmTransactionDialog","sendTransactionAsync","Error","contractAddress","offchaincode","data","abiutils","encodeFunctionCall","dataBase64","Buffer","from","toString","requestAsync","selfAddr","offChainCode","resultBytes","outputs","i","length","push","type","offchainDecodeResult","decodeParameters","resultList","name","value","vmLog","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","event","payload","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","JSON","stringify","replace","subscribe","parse","unsubscribe","height","undefined","Task","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","status","resolveAccountBlockData","statusTxt","blockType","bytes","getViteClient","task","interval","_taskTimer","_taskInterval","_task","_callback","setTimeout","_onStop","_run","callback","window","clearTimeout","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","POOLS_CONTRACT_ADDRESS_v03","POOLS_CONTRACT_ADDRESS_v02","POOLS_CONTRACT_ADDRESS_v01","POOLS_CONTRACT_ADDRESS_TESTNET","VITE_TOKEN_ID","REWARD_FACTOR","Networks","id","networkId","connectorUrl","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","iconUrl","url","CustomDefinedTokens","Map","PoolSortTypes","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","PoolSortType","DEFAULT","search","PoolDialogType","GlobalEvent","VmLogEvent","LogEventModel","init","banner","Object","assign","noop","Boolean","process","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","message","toJsonString","timestamp","map","Array","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","console","debug","warn","FileUtilType","util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","existing","get","toLowerCase","getCoinUtil","_coinUtil","CoinGecko","mappedName","mapCoingeckoName","ids","simple","price","BigNumber","usd","_baseUrl_v1","_baseUrl_v2","axios","getTokenPriceAsync","usdRate","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_coingeckoClient","_vitexClient","_tokens","_moment","initAsyncProtected","clear","disposeProtected","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","decimalFactor","pow","stakingToken","rewardToken","getTokenPriceUSDAsync","stakingTokenPrice","rewardTokenPrice","totalTime","minus","startBlock","secondsInYear","toPercent","apr","times","totalRewards","dividedBy","totalStaked","isFinite","isNaN","token","toNumber","Number","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","add","customToken","getTokenDetailAsync","tokenDecimals","urlIcon","links","website","set","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","fetchTimestamp","u","poolId","stakingBalance","rewardDebt","FileUtil","BrowserFileUtil","fetch","response","text","ds","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","div","_tokenId","_amount","_updatePoolAsync","getAccount","gt","pendingAmount","emitPoolDeposit","emitPoolWithdraw","getMockDataSource","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","manager","_networkHeight","_network","_setNetworkCallback","cb","split","filter","includes","getNetworkManager","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","handleResponseAsync","waitForAccountBlockAsync","then","objectFromEntries","entries","fromEntries","entry","networkManager","currentNetwork","getNetwork","contract","contractName","createAddressListenerAsync","results","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","getAsync","callOffChainMethodAsync","getOffchainMethodAbi","offChain","getTotalPoolsAsync","callContractAsync","has","Deposit","addr","pid","Withdraw","context","_vite","_datasource","initViteClientAsync","dispose","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","BootstrapTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","Footer","maxWidth","typography","pxToRem","border","useState","setNetworkBlockHeight","rotated","setRotated","emitter","useEffect","handleEvent","heightString","heightRef","substr","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","Grid","container","direction","justifyContent","alignItems","spacing","item","title","placement","Typography","variant","verticalAlign","display","mr","transform","Chip","label","size","Root","TitleTypography","HeaderLoading","AppBar","position","Toolbar","MainScrollStyled","MainScrollInner","MainScroll","children","restProps","Container","MainWrapperStyled","MainWrapper","Web3Context","React","createContext","Web3Provider","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","initWallet","logout","useCallback","removeWallet","location","reload","active","FormatUtil","defaultMessage","log","graphQLErrors","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","background","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","Dialog","DialogTitle","DialogContent","DialogContentText","mt","textAlign","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","InputLabel","Select","labelId","onChange","selectedNetwork","target","MenuItem","Header","loginOpen","setLoginOpen","href","src","alt","width","icon","truncateStringInTheMiddle","Button","onClick","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","mb","xs","md","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","service","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","getPoolService","ViteUtil","gte","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","getDuration","days","hours","minutes","ml","Skeleton","animation","PoolDepositDialog","setAmount","setDisabled","poolService","changeAmount","state","handleClose","setState","handleConfirmAsync","enqueueError","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","PoolWithdrawDialog","getStakedAmount","formatBigNumber","accountService","getBalanceAsync","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","NetRewards","calculateNetRewardTokens","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","tempnetwork","handleClickClaimAsync","Accordion","defaultExpanded","AccordionSummary","expandIcon","severity","AccordionDetails","pt","Link","underline","cursor","lg","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","HeroContent","borderRadius","Hero","align","paragraph","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","style","zIndex","Network","refetch","emitNetworkBlockHeightChanged","WarningDialog","reason","aria-labelledby","aria-describedby","Main","useSnackbar","Background","BackgroundSVG","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","fontFamily","join","h6","primary","main","secondary","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","String","defaultValue","ms","blob","min","max","Math","floor","lh","rh","truncateString","str","strPositionStart","strPositionEnd","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","session","WalletAccount","baseInit","WalletConnector","walletManager","opts","meta","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","r","updateSession","catch","Connector","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","localStorage","removeItem","sessionStorage","getItem","fromJS","saveData","setItem","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics"],"mappings":"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","file":"static/js/main.424df14e.chunk.js","sourcesContent":["import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Task } from \"../util/task\";\nimport { Network, VmLog } from \"../util/types\";\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\nconst { WS_RPC } = require('@vite/vitejs-ws');\n\nconst logger = getLogger();\n\nconst providerTimeout = 60000;\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\n\nexport class ViteClient {\n  private _isConnected: boolean;\n  private _connector?: IWalletConnector;\n  private _provider?: any;\n  private _client?: any;\n  private readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _connectorFactory: WalletConnectorFactory;\n\n  constructor() {\n    this._isConnected = false;\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\n  }\n\n  get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  get connector(): Maybe<IWalletConnector> {\n    return this._connector;\n  }\n\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\n    this._connector = this._connectorFactory.create(network)\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\n    let isResolved = false;\n    this._provider.on('error', (err: any) => {\n      logger.error(err)();\n      if (isResolved) return;\n      reject(err);\n      this._isConnected = false;\n    });\n    this._client = new ViteAPI(this._provider, () => {\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\n      isResolved = true;\n      resolve();\n      this._isConnected = true;\n    });\n  });\n\n  dispose(): void {\n    logger.info(\"Disposing ViteClient\")();\n    this._provider?.disconnect();\n    this._isConnected = false;\n  }\n\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\n    if (this._isConnected && this._client) {\n      return this._client.request(method, ...args);\n    } else {\n      return Promise.reject('Vite client is not ready to make requests.');\n    }\n  }\n\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\n    let block = accountBlock\n      .createAccountBlock(\"callContract\", {\n        address: account.address,\n        abi,\n        methodName,\n        tokenId,\n        amount,\n        toAddress,\n        params,\n      })\n\n    if (account instanceof WebWalletAccount) {\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\n      await block.autoSetPreviousAccountBlock();\n      const result = await block.sign().send();\n      return result;\n    } else if (account instanceof SessionWalletAccount) {\n      if (this.connector) {\n        this._emitter.emitConfirmTransactionDialog(true);\n        try {\n          const result = await this.connector.sendTransactionAsync({\n            block: block.accountBlock\n          });\n          this._emitter.emitConfirmTransactionDialog(false);\n          return result;\n        } catch (error) {\n          this._emitter.emitConfirmTransactionDialog(false);\n          throw error\n        }\n      } else {\n        throw new Error(\"Connector is not defined\");\n      }\n    } else {\n      throw new Error(\"Account not supported\");\n    }\n  }\n\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\n      selfAddr: contractAddress,\n      offChainCode: offchaincode,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\n    let topics = vmLog.topics;\n    for (let j = 0; j < abi.length; j++) {\n      let abiItem = abi[j];\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\n        if (vmLog.data) {\n          let log: VmLog = {\n            topic: topics[0],\n            args: abiutils.decodeLog(\n              abiItem.inputs,\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\n              topics.slice(1)\n            ),\n            event: abiItem.name,\n          };\n          return log;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async createAddressListenerAsync(address: string): Promise<any> {\n    const payload = {\n      addressHeightRange: {\n        placeholder: {\n          fromHeight: \"0\",\n          toHeight: \"0\",\n        },\n      },\n    };\n    let tempPayload = JSON.stringify(payload);\n    tempPayload = tempPayload.replace(\"placeholder\", address);\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\n    return result;\n  }\n\n  removeListener(event: any): void {\n    this._client?.unsubscribe(event);\n  }\n\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      let result: any = undefined;\n      let error: any = undefined;\n      const task = new Task(async () => {\n        try {\n          let blockByHeight = await this.requestAsync(\n            'ledger_getAccountBlockByHeight',\n            address,\n            height\n          );\n\n          if (!blockByHeight) {\n            return true;\n          }\n\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\n          if (!receiveBlockHash) {\n            return true;\n          }\n\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\n          if (!blockByHash) {\n            return true;\n          }\n\n          result = {\n            ...this.getAccountBlockStatus(blockByHash),\n            accountBlock: blockByHash\n          }\n\n          return false;\n        } catch (err) {\n          error = err\n          return false;\n        }\n      }, 500);\n      task.start(() => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  private getAccountBlockStatus(accountBlock: any) {\n    let status = this.resolveAccountBlockData(accountBlock);\n    let statusTxt = '';\n    switch (status) {\n      case 0:\n        statusTxt = '0, Execution succeed';\n        break;\n      case 1:\n        statusTxt = '1, Execution reverted';\n        break;\n      case 2:\n        statusTxt = '2, Max call depth exceeded';\n        break;\n    }\n    return {\n      status,\n      statusTxt\n    };\n  }\n\n  private resolveAccountBlockData(accountBlock: any) {\n    if (\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\n      !accountBlock.data\n    ) {\n      return 0;\n    }\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\n\n    if (bytes.length !== 33) {\n      return 0;\n    }\n    return bytes[32];\n  }\n}\n\nconst client = new ViteClient();\n\nexport const getViteClient = () => {\n  return client;\n}","export class Task {\n  private _taskTimer: NodeJS.Timeout | undefined\n  private _taskInterval: number\n  private _task: () => Promise<boolean>\n  private _callback?: () => any\n\n  constructor(task: () => Promise<boolean>, interval: number) {\n    this._task = task;\n    this._taskInterval = interval;\n\n    return this;\n  }\n\n  _run(): void {\n    this._taskTimer = setTimeout(async () => {\n      if (!this._task) {\n        this._onStop();\n        return;\n      }\n      if (!(await this._task())) {\n        this._onStop();\n        return;\n      }\n      this._run();\n    }, this._taskInterval);\n  }\n\n  _onStop() {\n    this._callback && this._callback();\n  }\n\n  start(callback?: () => any): void {\n    this._callback = callback;\n    if (this._taskTimer) {\n      return;\n    }\n\n    this._run();\n  }\n\n\n  stop(): void {\n    this._onStop();\n    if (!this._taskTimer) {\n      return;\n    }\n    window.clearTimeout(this._taskTimer);\n    this._taskTimer = undefined;\n  }\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'Staking Pools',\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\n  POOLS_CONTRACT_ADDRESS_v03: 'vite_6217fbda565d83ea03d23034054fb036a0d7a540993354e1e6',\n  POOLS_CONTRACT_ADDRESS_v02: 'vite_6b97e21d57909a881db29385b2339725ebbdf708b9eb487985',\n  POOLS_CONTRACT_ADDRESS_v01: 'vite_65ea4fbb8fc4a0f5cac745e0a97844ff2e9e4287aa0c35a28f',\n  POOLS_CONTRACT_ADDRESS_TESTNET: 'vite_bf52ded4994c8bf69628db1ef359dd9123dfe378048803f61c',\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\n  REWARD_FACTOR: 1e36 // 10^36 = new BigNumber(10).pow(36)\n}\n\n\nexport const Networks: Network[] = [\n  {\n    id: 1,\n    networkId: 1,\n    name: 'MAINNET v0.3',\n    rpcUrl: 'wss://node.vite.net/gvite/ws',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 2,\n    networkId: 2,\n    name: 'TESTNET',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 3,\n    networkId: 2,\n    name: 'TESTNET+MOCK',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 4,\n    networkId: 5,\n    name: 'DEBUG',\n    rpcUrl: 'ws://localhost:23457',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 5,\n    networkId: 1,\n    name: 'MAINNET v0.2',\n    rpcUrl: 'wss://node.vite.net/gvite/ws',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 6,\n    networkId: 1,\n    name: 'MAINNET v0.1',\n    rpcUrl: 'wss://node.vite.net/gvite/ws',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n]\n\nexport const TypeNames = {\n  Pool: \"Pool\",\n  PoolUserInfo: \"PoolUserInfo\",\n  Token: \"Token\"\n}\n\nexport const UnknownToken: Token = {\n  __typename: TypeNames.Token,\n  id: \"-1\",\n  name: \"UNKNOWN\",\n  symbol: \"UNKNOWN\",\n  originalSymbol: \"UNKNOWN\",\n  decimals: 0,\n  iconUrl: undefined,\n  url: undefined\n}\n\nexport const CustomDefinedTokens = new Map<string, Token>([\n  ['tti_11ab030f38ab5ebf9379e931',\n    {\n      __typename: TypeNames.Token,\n      id: \"tti_11ab030f38ab5ebf9379e931\",\n      name: \"VXX\",\n      symbol: \"VXX-000\",\n      originalSymbol: \"VXX\",\n      decimals: 18,\n      iconUrl: \"localvx.png\",\n      url: \"https://coinmarketcap.com/currencies/vitex-coin/\"\n    }\n  ],\n  ['tti_2511d9c93e4f98318eef6f56',\n    {\n      __typename: TypeNames.Token,\n      id: \"tti_2511d9c93e4f98318eef6f56\",\n      name: \"Viva\",\n      symbol: \"VIVA-001\",\n      originalSymbol: \"VIVA\",\n      decimals: 18,\n      iconUrl: \"localviva.png\",\n      url: \"https://vivafi.org\"\n    }\n  ],\n\n]);\n\n\nexport const PoolSortTypes: GenericType[] = [\n  {\n    name: \"\",\n    type: \"DEFAULT\"\n  },\n  {\n    name: \"APR\",\n    type: \"APR\"\n  },\n  {\n    name: \"Total staked\",\n    type: \"TOTAL_STAKED\"\n  }\n]\n\nexport const DefaultPoolFilterValues: PoolFilterValues = {\n  stakedOnly: false,\n  showLive: true,\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\n  search: \"\"\n}","import BigNumber from \"bignumber.js\"\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type Contract = {\n  address: string\n  contractName: string\n  binary: string\n  offChain: string\n  abi: any[]\n}\n\nexport type Network = {\n  id: number\n  networkId: number\n  name: string\n  rpcUrl: string\n  connectorUrl: string\n}\n\nexport type Token = {\n  __typename: string\n  id: string\n  name: string\n  symbol: string\n  originalSymbol: string\n  decimals: number\n  iconUrl: Maybe<string>\n  url: Maybe<string>\n}\n\nexport type Pool = {\n  __typename: string\n  id: number\n  stakingToken: Token\n  rewardToken: Token\n  apr?: Maybe<BigNumber>\n  totalStaked: BigNumber\n  totalRewards: BigNumber\n  startBlock: BigNumber\n  endBlock: BigNumber\n  endTimestamp: number\n  latestRewardBlock: BigNumber\n  rewardPerPeriod: BigNumber\n  rewardPerToken: BigNumber\n  paidOut: BigNumber\n  userInfo?: Maybe<PoolUserInfo>\n  fetchTimestamp: number\n}\n\nexport type ContractPool = {\n  stakingTokenId: string\n  rewardTokenId: string\n  totalStakingBalance: string\n  totalRewardBalance: string\n  startBlock: string\n  endBlock: string\n  latestRewardBlock: string\n  rewardPerPeriod: string\n  rewardPerToken: string\n  paidOut: string\n}\n\nexport type PoolUserInfo = {\n  __typename: string\n  id: string\n  poolId: number\n  account: string\n  stakingBalance: BigNumber\n  rewardDebt: BigNumber\n}\n\nexport type ContractPoolUserInfo = {\n  poolId: number\n  address: string\n  stakingBalance: string\n  rewardDebt: string\n}\n\nexport type PoolFilterValues = {\n  stakedOnly: boolean\n  showLive: boolean\n  sortBy: string\n  search: string\n}\n\nexport enum PoolSortType {\n  DEFAULT = 0,\n  APR = 1,\n  TOTAL_STAKED = 2\n}\n\nexport type PoolDialogState = {\n  type: PoolDialogType\n  open: boolean\n}\n\nexport enum PoolDialogType {\n  DEPOSIT = 0,\n  WITHDRAW = 1,\n  CLAIM = 2\n}\n\nexport enum GlobalEvent {\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\n  ConnectWalletDialog = 'ConnectWalletDialog',\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\n  PoolDeposit = 'PoolDeposit',\n  PoolWithdraw = 'PoolWithdraw',\n  PoolUpdate = 'PoolUpdate'\n}\n\nexport type VmLog = {\n  event: string\n  topic: string\n  args: any\n}\n\nexport enum VmLogEvent {\n  PoolCreated = 'PoolCreated',\n  Deposit = 'Deposit',\n  Withdraw = 'Withdraw'\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","export default __webpack_public_path__ + \"static/media/bg2.36ac1f86.svg\";","export class CoinUtil {\n  private readonly _iconUrlMap: Map<string, string>;\n  private readonly _coinMarketCapMap: Map<string, string>;\n  private readonly _coingeckoMap: Map<string, string>;\n\n  constructor() {\n    this._iconUrlMap = new Map<string, string>([\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"],\n      [\"localdai.png\", \"./assets/coins/dai.png\"],\n      [\"localvx.png\", \"./assets/coins/vx.png\"],\n      [\"localviva.png\", \"./assets/coins/viva.png\"]\n    ]);\n    this._coinMarketCapMap = new Map<string, string>();\n    this._coingeckoMap = new Map<string, string>([\n      [\"PancakeSwap\",\"pancakeswap-token\"]\n    ]);\n  }\n\n  mapIconUrl(iconUrl?: Maybe<string>): string {\n    if (!iconUrl) {\n      return \"\";\n    }\n    const existing = this._iconUrlMap.get(iconUrl);\n    return existing ?? iconUrl;\n  }\n\n  mapCoinMarketCapName(name: string): string {\n    const existing = this._coinMarketCapMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n\n  mapCoingeckoName(name: string): string {\n    const existing = this._coingeckoMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n}\n\nconst util = new CoinUtil();\n\nexport const getCoinUtil = (): CoinUtil => {\n  return util;\n}","import BigNumber from \"bignumber.js\";\nimport CoinGecko from \"coingecko-api\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CoingeckoClient {\n  private readonly _client: any;\n  private readonly _coinUtil: CoinUtil;\n\n  constructor() {\n    this._client = new CoinGecko();\n    this._coinUtil = getCoinUtil();\n  }\n\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\n    try {\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\n      const params = { ids: mappedName };\n      const result = await this._client.simple.price(params);\n      return new BigNumber(result.data[mappedName].usd);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst client = new CoingeckoClient();\n\nexport const getCoingeckoClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\";\nimport axios from 'axios';\n\ntype BaseResult<T> = {\n  code: number,\n  data: T\n}\n\nexport type TokenLinks = {\n  website: string\n}\n\nexport type TokenDetailResult = {\n  name: string\n  symbol: string\n  originalSymbol: string\n  tokenDecimals: number\n  urlIcon: string\n  links: TokenLinks\n}\n\nexport type TokenPriceResult = Array<TokenPriceEntry>;\n\nexport type TokenPriceEntry = {\n  tokenId: string\n  tokenSymbol: string\n  usdRate: number\n  cnyRate: number\n  rubRate: number\n  krwRate: number\n  tryRate: number\n  vndRate: number\n  eurRate: number\n  gbpRate: number\n  inrRate: number\n  btcRate: number\n}\n\n\nexport class VitexClient {\n  private readonly _baseUrl_v1: string;\n  private readonly _baseUrl_v2: string;\n\n\n  constructor() {\n    this._baseUrl_v1 = \"https://vitex.vite.net\"\n    this._baseUrl_v2 = \"https://api.vitex.net\"\n  }\n\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\n    const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl_v1 + \"/api/v1/token/detail?tokenId=\" + tokenId);\n    return result.data.data;\n  }\n\n  async getTokenPriceAsync(tokenId: string): Promise<TokenPriceResult> {\n    const result = await axios.get<BaseResult<TokenPriceResult>>(this._baseUrl_v2 + \"/api/v2/exchange-rate?tokenIds=\" + tokenId);\n    return result.data.data\n  }\n\n  async getTokenPriceUSDAsync(tokenId: string): Promise<BigNumber> {\n    try {\n      const result = await this.getTokenPriceAsync(tokenId)\n      return new BigNumber(result[0].usdRate);\n    } catch (error) {\n//      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }  \n\n}\n\nconst client = new VitexClient();\n\nexport const getVitexClient = () => {\n  return client;\n}\n","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import moment from 'moment';\n\nexport class MomentUtil {\n  private readonly _locale: string;\n\n  constructor(locale?: Maybe<string>) {\n    if (locale) {\n      this._locale = locale;\n    } else {\n      this._locale = navigator.language;\n    }\n    moment.locale(this._locale);\n  }\n\n  public getLocale(): string {\n    return this._locale;\n  }\n\n  public get(): moment.Moment {\n    return moment();\n  }\n\n  public getDuration(seconds: number): moment.Duration {\n    return moment.duration(seconds, 'seconds');\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: number): boolean {\n    try {\n      if (timestamp >= 0) {\n        return moment.utc().unix() >= timestamp;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\nimport { getVitexClient, VitexClient } from \"../clients/vitex.client\";\nimport { CustomDefinedTokens, TypeNames, UnknownToken } from \"../common/constants\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { Ensure } from \"../util/ensure\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, Token } from \"../util/types\";\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(): Promise<void>;\n  dispose(): void;\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n  getTokenAsync(_id: string): Promise<Token>;\n  getTotalPoolsAsync(): Promise<number>;\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _coingeckoClient: CoingeckoClient;\n  private readonly _vitexClient: VitexClient;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _tokens: Map<string, Token>;\n  private _moment: MomentUtil = new MomentUtil();\n\n  constructor() {\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._coingeckoClient = getCoingeckoClient();\n    this._vitexClient = getVitexClient();\n    this._coinUtil = getCoinUtil();\n    this._tokens = new Map<string, Token>();\n  }\n\n  async initAsync(): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this._tokens.clear();\n    this.disposeProtected();\n  }\n\n  getAccount(): WalletAccount {\n    const account = this._walletManager.getActiveAccount();\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\n    return account as WalletAccount;\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    try {\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\n        // pool is closed, should not display numeric APR.\n        return undefined;\n      }\n\n      // FIXME : decimal factor will likely break if power separation is too great.\n      const decimalFactor = new BigNumber(10).pow( pool.stakingToken.decimals - pool.rewardToken.decimals );\n      //const stakingTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.stakingToken.name);\n      //const rewardTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.rewardToken.name);\n\n      const stakingTokenPrice = await this.getTokenPriceUSDAsync(pool.stakingToken);\n      const rewardTokenPrice = await this.getTokenPriceUSDAsync(pool.rewardToken);\n\n      const totalTime = pool.endBlock.minus(pool.startBlock);\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\n      const toPercent = new BigNumber(100);\n\n      const apr = rewardTokenPrice.times(decimalFactor).times(pool.totalRewards).dividedBy(stakingTokenPrice.times(pool.totalStaked).times(totalTime)).times(secondsInYear).times(toPercent);\n      \n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\n    } catch (error) {\n      logger.error(error)();\n      return undefined;\n    }\n  }\n\n  async getTokenPriceUSDAsync(token : Token) : Promise<BigNumber>{\n\n    try {\n      const price = await this._coingeckoClient.getTokenPriceUSDAsync(token.name);\n      if ( price.toNumber() === Number(0)) {\n        throw(new Error(\"Coingecko price lookup failed. Trying ViteX\"));\n      }\n      return price;\n    } catch {\n      try {\n        return await this._vitexClient.getTokenPriceUSDAsync(token.id);\n      } catch {\n        return new BigNumber(0)\n      }\n    }\n  }\n\n\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\n    try {\n      if (!endBlock || endBlock.lte(0)) {\n        return -1;\n      }\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\n      if (remainingSeconds.lte(0)) {\n        return 0;\n      }\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\n    } catch (error) {\n      logger.error(error)();\n    }\n    return 0;\n  }\n\n  async getTokenAsync(id: string): Promise<Token> {\n    try {\n      const existing = this._tokens.get(id);\n      if (existing) {\n        return existing;\n      }\n\n      const customToken = CustomDefinedTokens.get(id);\n      if (customToken) {\n        return customToken;\n      }\n\n      const result = await this._vitexClient.getTokenDetailAsync(id);\n      if (result) {\n        const token = {\n          __typename: \"Token\",\n          id,\n          name: result.name,\n          symbol: result.symbol,\n          originalSymbol: result.originalSymbol,\n          decimals: result.tokenDecimals,\n          iconUrl: result.urlIcon,\n          url: result.links.website\n          //url: \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\n        }\n        this._tokens.set(id, token);\n        return token;\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n    const unknownToken = {\n      ...UnknownToken,\n      id\n    }\n    this._tokens.set(id, unknownToken);\n    return unknownToken;\n  }\n\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\n    const stakingToken = await this.getTokenAsync(p.stakingTokenId);\n    const rewardToken = await this.getTokenAsync(p.rewardTokenId);\n    const endTimestamp = await this.getEndTimestampAsync(new BigNumber(p.endBlock));\n    const pool: Pool = {\n      __typename: TypeNames.Pool,\n      id,\n      stakingToken,\n      rewardToken,\n      totalStaked: new BigNumber(p.totalStakingBalance),\n      totalRewards: new BigNumber(p.totalRewardBalance),\n      startBlock: new BigNumber(p.startBlock),\n      endBlock: new BigNumber(p.endBlock),\n      endTimestamp,\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\n      rewardPerToken: new BigNumber(p.rewardPerToken),\n      paidOut: new BigNumber(p.paidOut),\n      fetchTimestamp: this._moment.get().unix()\n    };\n    return pool;\n  }\n\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\n    return {\n      __typename: TypeNames.PoolUserInfo,\n      id: `${u.address}_${u.poolId}`,\n      poolId: u.poolId,\n      account: u.address,\n      stakingBalance: new BigNumber(u.stakingBalance),\n      rewardDebt: new BigNumber(u.rewardDebt)\n    }\n  }\n\n  protected abstract initAsyncProtected(): Promise<void>;\n\n  protected abstract disposeProtected(): void;\n\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\n\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n\n  abstract getTotalPoolsAsync(): Promise<number>;\n\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private _pools: Pool[];\n  private _users: PoolUserInfo[];\n  private _networkBlockHeight: BigNumber;\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._pools = [];\n    this._users = [];\n    this._networkBlockHeight = new BigNumber(0);\n    logger.info(\"MockDataSource loaded\")();\n  }\n\n  private initNetworkBlockHeight() {\n    this._networkBlockHeight = new BigNumber(0);\n    this._networkBlockHeightInterval = setInterval(() => {\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\n      // console.log(this._networkBlockHeight.toString())\n    }, 1000);\n  }\n\n  private async initPoolsAsync(): Promise<void> {\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\n    pools = JSON.parse(pools);\n    this._pools = [];\n    for (let index = 0; index < pools.length; index++) {\n      const p: ContractPool = pools[index];\n      const pool = await this.toPoolAsync(index, p);\n      pool.apr = await this.getAprAsync(pool);\n      this._pools.push(pool);\n    }\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    switch (pool.id) {\n      case 0:\n        return new BigNumber(2.12345678)\n      case 1:\n        return new BigNumber(3.55555555)\n      default:\n        return super.getAprAsync(pool)\n    };\n  }\n\n  private async initPoolUsersAsync(): Promise<void> {\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\n    users = JSON.parse(users);\n    this._users = [];\n    for (let index = 0; index < users.length; index++) {\n      const u: ContractPoolUserInfo = users[index];\n      const info = await this.toPoolUserInfoAsync(u);\n      this._users.push(info);\n    }\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    logger.info(\"MockDataSource initAsyncProtected\")();\n    this.initNetworkBlockHeight();\n    await this.initPoolsAsync();\n    await this.initPoolUsersAsync();\n  }\n\n  protected disposeProtected(): void {\n    if (this._networkBlockHeightInterval) {\n      clearInterval(this._networkBlockHeightInterval);\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    return new BigNumber(0);\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    return this._networkBlockHeight;\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\n    const pool = this._pools[_id];\n    if (!_account) {\n      return pool;\n    }\n    return {\n      ...pool,\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\n    }\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    await CommonUtil.timeout(1000);\n    if (!_account) {\n      return this._pools;\n    }\n    const pools = [];\n    for (const p of this._pools) {\n      pools.push(await this.getPoolAsync(p.id, _account))\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    return this._pools.length;\n  }\n\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\n    const blockNumber = await this.getNetworkBlockHeightAsync();\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock <= pool.latestRewardBlock) {\n      return;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(0)) {\n      pool.latestRewardBlock = latestBlock;\n      return;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (userInfo) {\n      // dispense rewards\n      if (userInfo.stakingBalance.gt(0)) {\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\n      }\n      // update balances & recompute rewardDebt\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n    } else {\n      userInfo = await this.toPoolUserInfoAsync({\n        poolId: _id,\n        address: account,\n        stakingBalance: amount.toString(),\n        rewardDebt: \"0\"\n      });\n      this._users.push(userInfo);\n    }\n    pool.totalStaked = pool.totalStaked.plus(amount);\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (!userInfo) {\n      throw new Error(\"Withdraw not possible\")\n    }\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\n      throw new Error(\"Insufficient balance\")\n    }\n\n    // dispense rewards\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\n\n    // update balances & recompute rewardDebt\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\n    pool.totalStaked = pool.totalStaked.minus(amount);\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\n    return true;\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","export class CachedFunctionCall<T> {\n  private readonly _duration: number;\n  private readonly _callbackFn: () => Promise<T>;\n  private _currentValue?: Maybe<T>;\n  private _lastExecution: number;\n\n  constructor(duration: number, callbackFn: () => Promise<T>) {\n    this._duration = duration;\n    this._callbackFn = callbackFn;\n    this._lastExecution = new Date(0).getTime();\n  }\n\n  private isExpired(): boolean {\n    return new Date().getTime() >= this._lastExecution + this._duration;\n  }\n\n  async getAsync(): Promise<T> {\n    if (!this._currentValue || this.isExpired()) {\n      this._currentValue = await this._callbackFn();\n      this._lastExecution = new Date().getTime();\n    }\n    return this._currentValue;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\nimport { Networks } from \"./constants\";\n\nconst logger = getLogger();\n\nexport class NetworkManager {\n  private _networkHeight: BigNumber;\n  private _network?: Maybe<Network>;\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\n\n  constructor() {\n    this._networkHeight = new BigNumber(0);\n  }\n\n  set networkHeight(height: BigNumber) {\n    this._networkHeight = height;\n  }\n\n  get networkHeight(): BigNumber {\n    return this._networkHeight;\n  }\n\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\n    this._setNetworkCallback = cb;\n  }\n\n  getNetwork(): Maybe<Network> {\n    return this._network;\n  }\n\n  setNetwork(network?: Maybe<Network>): void {\n    this._network = network;\n    if (this._setNetworkCallback) {\n      this._setNetworkCallback(this._network);\n    }\n  }\n\n  getNetworks(): Network[] {\n    try {\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\n      return Networks.filter(e => ids?.includes(e.id))\n    } catch (error) {\n      logger.error(error)\n    }\n    return Networks;\n  }\n}\n\nconst manager = new NetworkManager();\n\nexport const getNetworkManager = () => {\n  return manager;\n}","import BigNumber from \"bignumber.js\";\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { CommonConstants, Networks } from \"../common/constants\";\nimport { CachedFunctionCall } from \"../util/cache\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contract, ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\nimport { getNetworkManager } from \"../common/network\";\n\n\nconst logger = getLogger();\n\nexport class ViteDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private readonly _client: ViteClient;\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\n  private _contract?: Contract;\n  private _listener: any;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._client = getViteClient();\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\n      // prevent function from being called more than once every 500 milliseconds\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\n    });\n    logger.info(\"ViteDataSource loaded\")();\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    \n\n    const networkManager = getNetworkManager();\n    const currentNetwork = networkManager.getNetwork();\n    // to allow for different mainnet and testnet address/contracts \n    if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.3') ){\n      logger.info('MAINNET v0.3 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v03.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v03;\n    } else if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.2') ){\n      logger.info('MAINNET v0.2 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v02.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v02;\n    } else if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.1') ){\n      logger.info('MAINNET v0.1 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v01.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v01;\n    } else if( currentNetwork === Networks.find(network => network.name === 'TESTNET') ){\n      logger.info('TESTNET ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_old.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_TESTNET;\n    } else {\n      // dumb hack to add contract here to avoid not defined TS errors.\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_old.json');\n      this._contract = JSON.parse(contract) as Contract;\n      logger.info('Could not set contract address.')()\n    }\n\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\n    this._listener.on((results: any[]) => {\n      if (!this._contract?.abi) {\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\n      } else {\n        for (let index = 0; index < results.length; index++) {\n          const result = results[index];\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\n          logger.info(vmLog ?? result)();\n          if (vmLog) {\n            this.handleVmLogAsync(vmLog);\n          }\n        }\n      }\n    });\n  }\n\n  protected disposeProtected(): void {\n    this.removeAddressListener();\n    this._offchainMethods.clear();\n  }\n\n  private removeAddressListener(): void {\n    if (this._listener) {\n      this._client.removeListener(this._listener);\n    }\n  }\n\n  private get contract(): Contract {\n    if (this._contract?.address === undefined) {\n      throw new Error(\"Contract is not defined.\");\n    } else {\n      return this._contract;\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    try {\n      if (CommonUtil.isNullOrWhitespace(_account)) {\n        return new BigNumber(0);\n      }\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\n      if (!result?.balanceInfoMap) {\n        return new BigNumber(0);\n      }\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    try {\n      const result = await this._cachedNetworkBlockHeight.getAsync();\n      return new BigNumber(result);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);\n    const p = this.objectFromEntries(result) as ContractPool;\n    const pool = await this.toPoolAsync(_id, p);\n    pool.apr = await this.getAprAsync(pool);\n    pool.userInfo = await this.getPoolUserInfoAsync(_id, _account);\n    return pool;\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    const amount = await this.getTotalPoolsAsync();\n    const pools = [];\n    for (let index = 0; index < amount; index++) {\n      try {\n        const pool = await this.getPoolAsync(index, _account);\n        pools.push(pool)\n      } catch (error) {\n        logger.error(error)();\n      }\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\n    const info = await this.toPoolUserInfoAsync(u);\n    return info;\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    const result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\n    return Number(result[0].value);\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  private getOffchainMethodAbi(name: string): any {\n    let result: Maybe<any>\n    if (this._offchainMethods.has(name)) {\n      result = this._offchainMethods.get(name)\n    } else {\n      result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\n      if (result) {\n        this._offchainMethods.set(name, result)\n      }\n    }\n    if (result) {\n      return result\n    } else {\n      throw new Error(`The offchain method '${name}' does not exist.'`)\n    }\n  }\n\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\n      if (result?.status === 0) {\n        resolve()\n      } else {\n        reject(result?.statusTxt ?? \"Something went wrong.\")\n      }\n    })\n  })\n\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\n    try {\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else {\n        logger.info('Unknown vmlog event.', vmlog)();\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  private objectFromEntries = (entries: any) => {\n    return Object.fromEntries(\n      entries.map((entry: any) => {\n        return [entry.name, entry.value];\n      })\n    );\n  }\n}\n\nconst ds = new ViteDataSource();\n\nexport const getViteDataSource = () => {\n  return ds;\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private readonly _vite: ViteClient;\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._vite = getViteClient();\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    await this.initViteClientAsync(network);\n    switch (network.id) {\n      case 3:\n        this._datasource = getMockDataSource();\n        break;\n      default:\n        this._datasource = getViteDataSource();\n        break;\n    }\n    await this._datasource.initAsync();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n    this._vite.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n\n  private async initViteClientAsync(network: Network): Promise<void> {\n    try {\n      await this._vite.initAsync(network);\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}","import { gql } from \"@apollo/client\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const DEPOSIT_MUTATION = gql`\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\n}\n`;\n\nexport const WITHDRAW_MUTATION = gql`\nmutation Withdraw($id: ID!, $amount: String!) {\n  withdraw(id: $id, amount: $amount) @client\n}\n`;\n\nexport const PoolMutations = {\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\n  },\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.withdrawAsync(Number(id), amount);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\n  query GetAccountBalance($account: String) {\n    accountBalance(account: $account) @client\n  }\n`;\n\nexport const AccountQueries = {\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getAccountBalanceAsync(account);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\n  query GetNetworkBlockHeight {\n    networkBlockHeight @client\n  }\n`;\n\nexport const NetworkQueries = {\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getNetworkBlockHeightAsync();\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Token } from '../util/types';\n\nexport const TOKEN_FIELDS = gql`\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    originalSymbol\n    decimals\n    iconUrl\n    url\n  }\n`;\n\nexport const GET_TOKEN_QUERY = gql`\n  ${TOKEN_FIELDS}\n  query GetToken($id: ID!) {\n    token(id: $id) @client {\n      ...TokenFields\n    }\n  }\n`;\n\nexport const TokenQueries = {\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\n    return context.client.datasource.getTokenAsync(id);\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Pool, PoolUserInfo } from '../util/types';\nimport { TOKEN_FIELDS } from './token';\n\nexport const POOL_FIELDS = gql`\n  fragment PoolFields on Pool {\n    id\n    stakingToken {\n      ...TokenFields\n    }\n    rewardToken {\n      ...TokenFields\n    }\n    apr\n    totalStaked\n    totalRewards\n    startBlock\n    endBlock\n    endTimestamp\n    latestRewardBlock\n    rewardPerPeriod\n    rewardPerToken\n    paidOut\n    userInfo {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const POOL_USER_INFO_FIELDS = gql`\n  fragment PoolUserInfoFields on PoolUserInfo {\n    id\n    poolId\n    account\n    stakingBalance\n    rewardDebt\n  }\n`;\n\nexport const GET_POOL_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPool($id: ID!, $account: String) {\n    pool(id: $id, account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_POOLS_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPools($account: String) {\n    pools(account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_TOTAL_POOLS_QUERY = gql`\n  query GetTotalPools {\n    totalPools @client\n  }\n`;\n\nexport const GET_POOL_USER_INFO_QUERY = gql`\n  ${POOL_USER_INFO_FIELDS}\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\n    poolUserInfo(poolId: $poolId, account: $account) @client {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const PoolQueries = {\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\n    return context.client.datasource.getPoolAsync(Number(id), account);\n  },\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\n    return context.client.datasource.getPoolsAsync(account);\n  },\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\n    return await context.client.datasource.getTotalPoolsAsync();\n  },\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { GraphQLScalarType } from 'graphql';\nimport { getCommonContext } from '../contexts/common';\nimport { IDataSource } from '../datasources';\nimport { PoolMutations } from '../mutations';\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\nimport { AccountQueries } from '../queries/account';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst bigNumberScalar = new GraphQLScalarType({\n  name: 'BigNumber',\n  description: 'BigNumber custom scalar type',\n  serialize(value: BigNumber) {\n    return value.toString();\n  },\n  parseValue(value: string) {\n    return new BigNumber(value);\n  }\n});\n\nconst resolvers: any = {\n  BigNumber: bigNumberScalar,\n  Query: {\n    ...AccountQueries,\n    ...NetworkQueries,\n    ...PoolQueries,\n    ...TokenQueries\n  },\n  Mutation: {\n    ...PoolMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}));\n\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\nimport { Box, Chip, Grid, Typography } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\n\nexport const Footer: React.FC = () => {\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\n  const [rotated, setRotated] = useState(false)\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (height: BigNumber) => {\n      const heightString = height.toString();\n      let heightRef = height;\n      if (heightString.length > 1) {\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\n      }\n      setRotated(heightRef.mod(2).eq(0));\n      setNetworkBlockHeight(height);\n    }\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    };\n  }, [emitter]);\n\n  return (\n    <Box sx={{ py: \"10px\", px: \"24px\" }}>\n      <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\n            <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\n              <CropSquareIcon sx={{\n                color: \"gray\",\n                mr: \"2px\",\n                transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\n                fontSize: \"17px\"\n              }} />\n              {networkBlockHeight.toString()}\n            </Typography>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\n            <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" />\n          </BootstrapTooltip>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import React from 'react';\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\nimport { CommonConstants } from '../../../../common/constants';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`,\n);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`,\n);\n\nexport const HeaderLoading: React.FC = (props: any) => {\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import React, { useState } from 'react';\nimport { getNetworkManager } from '../common/network';\nimport { Network } from '../util/types';\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\n\nexport interface IWeb3Context {\n  setError: (error: Error) => void,\n  error?: Maybe<Error>,\n  wallet?: Maybe<WebWallet | SessionWallet>\n  network?: Maybe<Network>\n}\n\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\n\nexport const useWeb3Context = () => {\n  const context = React.useContext(Web3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\n  const [error, setError] = useState<Maybe<Error>>(null)\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\n\n  const walletManager = getWalletManager()\n  walletManager.onSetWalletCallback = setWallet\n\n  const networkManager = getNetworkManager()\n  networkManager.onSetNetworkCallback = setNetwork\n\n  const context: IWeb3Context = {\n    setError,\n    error,\n    wallet,\n    network\n  }\n\n  return (\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Networks } from '../common/constants';\nimport { getNetworkManager } from '../common/network';\nimport { MainLoading } from '../features/main/components/loading';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\nimport { getWalletManager } from '../wallet';\nimport { getCommonContext } from './common';\nimport { useWeb3Context } from './web3';\n\nconst logger = getLogger()\n\nexport interface IConnectedWeb3Context {\n  account?: string\n  network?: Maybe<Network>\n  logout: () => void\n}\n\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\n\n/**\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\n */\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n/**\n * Component used to render components that depend on Web3 being available. These components can then\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\n */\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\n  const web3Context = useWeb3Context()\n  const commonContext = getCommonContext()\n\n  const { wallet, network } = web3Context\n\n  useEffect(() => {\n    if (!wallet) {\n      const walletManager = getWalletManager()\n      walletManager.initWallet()\n    }\n  }, [wallet])\n\n  useEffect(() => {\n    if (!network) {\n      const networkManager = getNetworkManager()\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"2\");\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\n      logger.info(\"Network:\", networkManager.getNetwork())()\n    }\n  }, [network])\n\n  const logout = useCallback(() => {\n    const walletManager = getWalletManager()\n    walletManager.removeWallet()\n    window.location.reload()\n  }, [])\n\n  useEffect(() => {\n    const value = {\n      account: wallet?.active?.address,\n      network,\n      logout\n    }\n\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\n\n    const initAsync = async () => {\n      if (network) {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync(network)\n          setConnection(value)\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n    }\n    initAsync()\n    return () => {\n      commonContext.dispose()\n    }\n  }, [wallet, network, logout, commonContext])\n\n  if (!connection) {\n    return MainLoading()\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return (\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n  )\n}","\nimport { Typography } from '@mui/material';\nimport { Footer } from '../../../layout/components/footer';\nimport { HeaderLoading } from '../../../layout/components/header-loading';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\n\nexport const MainLoading = () => {\n\n  return (\n    <MainWrapper>\n      <HeaderLoading />\n      <MainScroll>\n        <Typography>Loading...</Typography>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\n\ninterface Props {\n  text?: string\n}\n\nexport const QrCode: React.FC<Props> = (props: Props) => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const defaultOpt = {\n      size: 240,\n      ecLevel: ecLevel.HIGH,\n      minVersion: 4,\n      background: '#fff',\n      mode: modes.DRAW_WITH_IMAGE_BOX,\n      radius: 0,\n      image: process.env.PUBLIC_URL + '/icon.png',\n      mSize: 0.3\n    };\n\n    if (props.text && elementRef.current) {\n      elementRef.current.innerHTML = ''\n      const q = new qrcode(elementRef.current);\n      q.generate(props.text, defaultOpt).then(() => {\n        console.log('QR code generated')\n      });\n    }\n  }, [props.text])\n\n  return (\n    <div ref={elementRef}></div>\n  );\n}\n","import { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect } from 'react';\nimport { getViteClient } from '../../../../clients/vite.client';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { QrCode } from '../qrcode';\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open, setOpen } = props;\n  const viteClient = getViteClient();\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\n    };\n  }, [emitter, setOpen]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  if (!viteClient.connector) {\n    return (\n      <>\n      </>\n    )\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Scan the QR code via Vite Wallet App\n        </DialogContentText>\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\n          <QrCode text={viteClient.connector?.uri}></QrCode>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\nimport React, { useState } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { Network } from '../../../../util/types';\n\nconst NetworksFormControl = styled(FormControl)(\n  ({ theme }) => ({\n    margin: theme.spacing(1),\n    '& .MuiSelect-root': {\n      color: theme.palette.common.white\n    },\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.common.white\n    }\n  }));\n\nexport const NetworkList: React.FC = () => {\n  const networkManager = getNetworkManager()\n  const networks = networkManager.getNetworks()\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\n    if (selectedNetwork) {\n      setNetwork(selectedNetwork)\n      networkManager.setNetwork(selectedNetwork)\n    }\n  }\n\n  return (\n    networks.length > 0 ? (\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\n        <InputLabel id=\"select-network-label\"></InputLabel>\n        <Select\n          labelId=\"select-network-label\"\n          id=\"select-network-label\"\n          value={network?.id.toString()}\n          onChange={handleChange}\n        >\n          {networks.map(e => {\n            return (\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </NetworksFormControl>\n    ) : (\n      <></>\n    )\n  );\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { AppBar, Button, Chip, styled, Toolbar, tooltipClasses, Typography } from '@mui/material';\nimport React from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport { LoginDialog } from '../../../main/components/login';\nimport { NetworkList } from '../../../main/components/network-list';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n\n  const handleClickLogout = () => {\n    context.logout();\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <a href=\"https://vivafi.org\"><img src={\"./vivalogo_white.svg\"} alt=\"logo\" width=\"64\" /></a>\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n          <NetworkList></NetworkList>\n          {context.account ? (\n            <>\n              <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\n                <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n              </BootstrapTooltip >\n              <Button color=\"inherit\" onClick={handleClickLogout}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={handleClickLogin}>\n                Login\n              </Button>\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Root >\n  )\n}","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { PoolFilterValues } from \"../../../../util/types\";\n\nexport const PoolFilter: React.FC = () => {\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\n  const emitter = getEmitter();\n\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\n  }\n\n  const handleSortByChange = (event: SelectChangeEvent) => {\n    const newValues = { ...values, sortBy: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.checked };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\n      <Grid item xs={12} md={10}>\n        <Grid container>\n          <Grid item xs sx={{ mr: 2 }}>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControlLabel control={<Checkbox\n                  checked={values.stakedOnly}\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\n                <Stack direction=\"row\" alignItems=\"center\" >\n                  <Typography>Ended</Typography>\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\n                  <Typography>Live</Typography>\n                </Stack>\n              </Stack>\n            </FormGroup>\n          </Grid>\n          <Grid item>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\n                  <Select\n                    labelId=\"sortby-select-label\"\n                    id=\"sortby-select\"\n                    value={values.sortBy}\n                    label=\"Sort by\"\n                    onChange={handleSortByChange}\n                  >\n                    {PoolSortTypes.map(e => (\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  id=\"search\"\n                  value={values.search}\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('search')}\n                />\n              </Stack>\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { MomentUtil } from \"../util/moment.util\";\n\nexport class MomentFactory {\n  private readonly _map: Map<string, MomentUtil>\n\n  constructor() {\n    this._map = new Map<string, MomentUtil>();\n  }\n\n  create(locale?: Maybe<string>): MomentUtil {\n    const _locale = locale ?? navigator.language;\n    let util = this._map.get(_locale);\n    if (!util) {\n      util = new MomentUtil(_locale);\n      this._map.set(_locale, util);\n    }\n    return util;\n  }\n}\n\nconst factory = new MomentFactory();\n\nexport const getMomentFactory = (): MomentFactory => {\n  return factory;\n}","import { orderBy, partition } from \"lodash\";\nimport { PoolSortTypes } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories/moment.factory\";\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\n\nexport abstract class FilterUtil {\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools) {\n      return pools;\n    }\n    const moment = getMomentFactory().create();\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\n    let filtered: Pool[] = openPools;\n    if (filter.showLive) {\n      if (filter.stakedOnly) {\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = openPools;\n      }\n    } else {\n      if (filter.stakedOnly) {\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = closedPools;\n      }\n    }\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\n    return FilterUtil.searchPools(filter.search, sorted);\n  }\n\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !sortBy) {\n      return pools;\n    }\n    switch (sortBy) {\n      case PoolSortTypes[PoolSortType.APR].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.totalStaked.toNumber(),\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\n      default:\n        return pools;\n    }\n  }\n\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !term) {\n      return pools;\n    }\n    const lowerCaseTerm = term.toLowerCase();\n    return pools.filter((pool: Pool) =>\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\n    );\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories\";\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Pool } from \"../util/types\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class PoolService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n  private readonly _moment: MomentUtil;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n    this._moment = getMomentFactory().create();\n  }\n\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\n    try {\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\n        query: GET_POOL_QUERY,\n        variables: {\n          id: _id.toString()\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\n        query: GET_POOL_USER_INFO_QUERY,\n        variables: {\n          poolId: _id,\n          account: this._walletManager.getActiveAccount()?.address\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const pool = poolQuery.data.pool as unknown as Pool;\n      return {\n        ...pool,\n        userInfo: userInfoQuery.data.poolUserInfo,\n        fetchTimestamp: this._moment.get().unix()\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\n      mutation: DEPOSIT_MUTATION,\n      variables: {\n        id: _id.toString(),\n        tokenId: _tokenId,\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.deposit ?? false);\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\n      mutation: WITHDRAW_MUTATION,\n      variables: {\n        id: _id.toString(),\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.withdraw ?? false);\n  }\n\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\n    if (!pool?.userInfo) {\n      return false;\n    }\n\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock.lte(pool.latestRewardBlock)) {\n      return false;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(new BigNumber(0))) {\n      pool.latestRewardBlock = latestBlock;\n      return true;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n    return true;\n  }\n}\n\nconst service = new PoolService();\n\nexport const getPoolService = () => {\n  return service;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Pool } from \"./types\";\n\nexport abstract class ViteUtil {\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\n    if (!pool?.userInfo) {\n      return new BigNumber(0);\n    }\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\n  }\n\n  // need converty if statement and return statement to use bignumber syntax probably\n  static calculateNetRewardTokens(pool: Maybe<Pool>, height: BigNumber): BigNumber {\n    if(!pool || height.lt(pool.startBlock)) {\n      return new BigNumber(0);\n    }\n    if( height.gte(pool.endBlock)){\n      return new BigNumber(pool.totalRewards);\n    }\n    return height.minus(pool.startBlock).div(pool.endBlock.minus(pool.startBlock)).times(pool.totalRewards);\n  }\n\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\n    return bn.div(new BigNumber(10).pow(tokenDecimals)).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\n  }\n}","import { LoadingButton } from '@mui/lab';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  disabled?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import { Skeleton, Typography, Tooltip } from \"@mui/material\";\nimport HelpIcon from '@mui/icons-material/Help';\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Maybe<Pool>\n}\n\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\n  const [countdown, setCountdown] = useState<string>(\"\");\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (props.pool?.endBlock) {\n        let remainingBlocks = new BigNumber(0);\n        if (height.lte(props.pool.startBlock)) {\n          setHasStarted(false);\n          remainingBlocks = props.pool.startBlock.minus(height);\n        } else {\n          setHasStarted(true);\n          remainingBlocks = props.pool.endBlock.minus(height);\n        }\n        if (remainingBlocks.gte(0)) {\n          setRemainingBlocks(remainingBlocks);\n          const duration = moment.getDuration(remainingBlocks.toNumber());\n          if (duration.days() > 0) {\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\n          } else if (duration.hours() > 0) {\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\n          } else if (duration.minutes() > 0) {\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\n          } else {\n            setCountdown(duration.seconds() + \" seconds\")\n          }\n        } else {\n          setRemainingBlocks(new BigNumber(0));\n          setCountdown(\"\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, moment, networkManager]);\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {hasStarted ? 'Ends in' : 'Starts in'} &nbsp;<Tooltip title=\"Based on current funds. The pool creator may extend the duration by depositing additional rewards\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n      </Typography>\n      {!props.pool ? (\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n      ) : (\n        <>\n          {remainingBlocks.gt(0) ? (\n            <Typography variant=\"subtitle1\">\n              {remainingBlocks.toString()} Blocks\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\n                {countdown}\n              </Typography>\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">-</Typography>\n          )}\n        </>\n      )}\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\n  const [amount, setAmount] = useState<string>(\"\");\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(\"\")\n    }\n  }, [props.state])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Stake</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n        <DialogContentText>\n        <br/>  \n        Note: Pending rewards will be automatically claimed.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class AccountService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n  }\n\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    try {\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\n        return new BigNumber(0);\n      }\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\n        query: GET_ACCOUNT_BALANCE_QUERY,\n        variables: {\n          account\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\n      return balance;\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst service = new AccountService();\n\nexport const getAccountService = () => {\n  return service;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ViteUtil } from '../../../../util/vite.util';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\n  const getStakedAmount = useCallback(() => {\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18).replace(',', '')\n    }\n    return \"\"\n  }, [props.pool])\n\n  const [amount, setAmount] = useState<string>(getStakedAmount());\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const accountService = getAccountService();\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(getStakedAmount())\n    }\n  }, [props.state, getStakedAmount])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n        <DialogContentText>\n        <br/>  \n        Note: Pending rewards will be automatically claimed.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import * as React from 'react';\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\nimport { PoolDepositDialog } from '../dialog-deposit';\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\n  switch (props.state.type) {\n    case PoolDialogType.WITHDRAW:\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\n    case PoolDialogType.DEPOSIT:\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\n    default:\n      return <></>\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Rewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (pool) {\n        const updated = poolService.updateRewardPerToken(pool, height);\n        if (updated) {\n          const newPool: Pool = {\n            ...pool\n          }\n          setPool(newPool);\n        }\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, poolService, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\n//import { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n}\n\nexport const NetRewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  //const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const height = networkManager.networkHeight;\n      const newRewardTokens = ViteUtil.calculateNetRewardTokens(pool, height);\n      setRewardTokens(newRewardTokens);\n    } else {\n      setRewardTokens(new BigNumber(0));\n    }\n  }, [pool, networkManager, props]);\n\n  /*\n  useEffect(() => {\n    if (pool) {\n      const height = networkManager.networkHeight;\n      const newRewardTokens = ViteUtil.calculateNetRewardTokens(pool, height);\n      setRewardTokens(newRewardTokens);\n\n    } else {\n      setRewardTokens(new BigNumber(0));\n\n    }\n  }, [pool, networkManager, props]);\n*/\n  \n  useEffect(() => {\n    let interval = setInterval(() => {\n\n      if (pool) {\n        const height = networkManager.networkHeight;\n        const newRewardTokens = ViteUtil.calculateNetRewardTokens(pool, height);\n        setRewardTokens(newRewardTokens);\n      } else {\n        setRewardTokens(new BigNumber(0));\n      }\n\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { getCoinUtil } from \"../../../../util/coin.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  loading: boolean\n  pool: Maybe<Pool>\n}\n\nexport const Tokens: React.FC<Props> = (props: Props) => {\n  const BigCoin = styled(Avatar)(({ theme }) => ({\n    width: 50,\n    height: 50,\n    backgroundColor: \"white\",\n    border: \"1px solid black\"\n  }));\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    border: `1px solid ${theme.palette.grey[600]}`\n  }));\n  const coinUtil = getCoinUtil();\n\n  return (\n    <Grid container alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <Badge\n          overlap=\"circular\"\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          badgeContent={\n            <SmallCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\n          }\n        >\n          <BigCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\n        </Badge>\n      </Grid>\n      <Grid item>\n        {props.loading ? (\n          <>\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n          </>\n        ) : (\n          <>\n            <Typography variant=\"subtitle1\">\n              Earn {props.pool?.rewardToken.originalSymbol}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Stake {props.pool?.stakingToken.originalSymbol}\n            </Typography>\n          </>\n        )}\n      </Grid>\n    </Grid >\n  );\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport HelpIcon from '@mui/icons-material/Help';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Tooltip, Typography, Alert } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from '../../../../common/network';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { getLogger } from \"../../../../util/logger\";\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { PoolCountdown } from \"../countdown\";\nimport { PoolDialog } from \"../dialog\";\nimport { Rewards } from '../rewards';\nimport { NetRewards } from '../netrewards';\nimport { Tokens } from \"../tokens\";\nimport BigNumber from 'bignumber.js';\n\nconst logger = getLogger()\n\nconst TransparentPaper = styled(Paper)(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    backgroundColor: \"transparent\"\n  }));\n\ninterface Props {\n  account?: Maybe<string>\n  pool?: Maybe<Pool>\n}\n\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\n    type: PoolDialogType.DEPOSIT,\n    open: false\n  });\n  const [canStake, setCanStake] = useState<boolean>(false);\n  const [canClaim, setCanClaim] = useState<boolean>(false);\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\n  const emitter = getEmitter();\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n  const network = networkManager.getNetwork();\n\n  useEffect(() => {\n    if (props.pool) {\n      logger.info(`Pool loaded: ${props.pool?.id}`)();\n      setCanWithdraw(!!props.pool && !!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false));\n    } else {\n      setCanWithdraw(false);\n    }\n  }, [props.pool, props.account]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      //setCanStake(false); // quick fix to prevent more staking.\n      const tempnetwork = networkManager.getNetwork();\n      setCanStake(!!props.pool && !!props.account && !!tempnetwork && tempnetwork.name !== \"MAINNET v0.2\" );\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, props.account, networkManager]);\n\n  const showApr = (): Maybe<string> => {\n    if (!props.pool || !props.pool.apr) {\n      return \"-\";\n    }\n    if (props.pool.apr.eq(new BigNumber(0))){\n      return \"-\";\n    }\n    return props.pool.apr.toFormat(2) + '%';\n  }\n\n  const showTotalStaked = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\n  }\n\n  const showStaked = (decimals: number): string => {\n    if (!props.pool?.userInfo) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\n  }\n\n  const handleConnectWallet = () => {\n    emitter.emitConnectWalletDialog(true);\n  }\n\n  const handleClickDeposit = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.DEPOSIT,\n      open: true\n    })\n  }\n\n  const handleClickWithdraw = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.WITHDRAW,\n      open: true\n    })\n  }\n\n  const handleClickClaimAsync = async () => {\n    try {\n      if (props.pool) {\n        await poolService.withdrawAsync(props.pool.id, \"0\");\n      }\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Accordion defaultExpanded>\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item xs container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item>\n                  {!props.pool ? (\n                    <>\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n                    </>\n                  ) : (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Total {props.pool?.rewardToken.originalSymbol} earned&nbsp;<Tooltip title=\"Total earned by all users since pool start\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n                      </Typography>\n                      <Typography variant=\"subtitle1\">\n                        <NetRewards pool={props.pool} decimals={4}></NetRewards>\n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    APR&nbsp;<Tooltip title=\"Annual Percentage Rate - APR is only shown for coins with a known value\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {props.pool.apr ? (\n                        <>\n                          {showApr()}\n                        </>\n                      ) : (\n                        <>\n                          -\n                        </>\n                      )}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total {props.pool?.stakingToken.originalSymbol} staked&nbsp;<Tooltip title=\"Total staked by all users\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {showTotalStaked()}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <PoolCountdown pool={props.pool} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        { network?.name === \"MAINNET v0.2\" ? (<Alert severity=\"error\">For the safety of your assets, unstake from these pools and use v0.3 pools.</Alert>) : null\n        /* { props?.pool?.id === 0 ? (<Alert severity=\"warning\">Don't use this pool, it's not worth it! Please unstake and use the VIVA pools below!</Alert>) : null } */}\n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item sx={{ mr: 4 }}>\n              <Link underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n              <Link underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                  <TransparentPaper variant=\"outlined\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {props.pool?.rewardToken.originalSymbol} earned since last claim\n                    </Typography>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      {!props.pool ? (\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                      ) : (\n                        <Typography sx={{ width: \"100%\" }} noWrap>\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\n                        </Typography>\n                      )}\n                      <Box sx={{ ml: 2 }} >\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\n                          Claim\n                        </ClickOnceButton>\n                      </Box>\n                    </Box>\n                  </TransparentPaper>\n                </Grid>\n                {!props.account ? (\n                  <Grid item xs={12} md={6} lg={5}>\n                    <TransparentPaper variant=\"outlined\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Start staking\n                      </Typography>\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\n                    </TransparentPaper>\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                      <TransparentPaper variant=\"outlined\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                        {props.pool?.stakingToken.originalSymbol} Staked\n                        </Typography>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                          {!props.pool ? (\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                          ) : (\n                            <Typography sx={{ width: \"100%\" }} noWrap>\n                              {showStaked(18)}\n                            </Typography>\n                          )}\n                          <Tooltip\n                          title=\"+ automatically claim pending rewards\"\n                          placement=\"bottom\">\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\n                            Withdraw\n                          </Button>\n                          </Tooltip>\n                        </Box>\n                      </TransparentPaper>\n                    </Grid>\n                    <Grid item xs={12} md sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Tooltip\n                          title=\"+ automatically claim pending rewards\"\n                          placement=\"bottom\">\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\n                        Stake\n                      </Button>\n                      </Tooltip>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n      {props.pool && (\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\n      )}\n    </>\n  );\n}","import { Grid } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\nimport { getCommonContext } from \"../../../../contexts/common\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { FilterUtil } from \"../../../../util/filter.util\";\nimport { getLogger } from \"../../../../util/logger\";\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\nimport { Alert } from \"../../../common/components/alert\";\nimport { PoolListItem } from \"../list-item\";\n\nconst logger = getLogger()\n\ninterface Props {\n  account?: Maybe<string>\n  pools?: Maybe<Pool[]>\n}\n\nexport const PoolList: React.FC<Props> = (props: Props) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\n  const emitter = getEmitter()\n  const commonContext = getCommonContext()\n\n  useEffect(() => {\n    if (props.pools) {\n      setIsLoading(false)\n    } else {\n      setIsLoading(true)\n    }\n    setAllPools(props.pools)\n  }, [props.pools])\n\n  useEffect(() => {\n    setPools(FilterUtil.filterPools(filter, allPools))\n  }, [allPools, filter])\n\n  useEffect(() => {\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n      setFilter(newValues)\n    }\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    };\n  }, [emitter])\n\n  useEffect(() => {\n    const replacePool = (pool: Pool) => {\n      if (allPools && pool) {\n        const index = allPools.findIndex(e => e.id === pool.id)\n        if (index >= 0) {\n          // Replace existing\n          const updatedPools = [...allPools]\n          updatedPools[index] = {\n            ...pool\n          }\n          setAllPools(updatedPools)\n        } else {\n          // Prepend to existing pools\n          setAllPools([pool, ...allPools])\n        }\n      }\n    }\n    const handlePoolEvent = async (id: number, amount: BigNumber, account: string) => {\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\n      replacePool(pool)\n    }\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    };\n  }, [emitter, allPools, commonContext, props.account])\n\n  if (!isLoading && pools && pools.length <= 0) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n      {isLoading ? (\n        <>\n          {[0, 1, 2].map((index: number) => (\n            <Grid item key={index} xs={12} md={10}>\n              <PoolListItem></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      ) : (\n        <>\n          {pools?.map((p: Pool) => (\n            <Grid item key={p.id} xs={12} md={10}>\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      )}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport {Button, styled, Typography, Alert } from '@mui/material';\n\nconst HeroContent = styled('div')({\n  background: 'url(\"./watermelon.jpeg\") left center',\n  boxShadow: '0px 0px 20px #AAA',\n  borderRadius: '4px',\n  height: 240,\n  width: '100%',\n  padding: 40,\n  margin: 0\n});\n\nexport const Hero = () => {\n  return (\n    <>\n      {/* <Alert severity=\"error\">Withdrawals now work on v0.2, but for <b>safety</b> please withdraw from v0.2 and migrate your funds to the v0.3 pools. <br/>To encourage migration, for two weeks our v0.3 pools provide <b>DOUBLE</b> the normal rewards.</Alert> */}\n      <HeroContent>\n          <Typography variant=\"h4\" align=\"left\" color=\"textSecondary\" paragraph>\n            Juicy Rewards!\n          </Typography>\n          <Typography align=\"left\" fontSize=\"large\" color=\"textSecondary\" maxWidth=\"sm\" paragraph>\n            Stake in Viva pools to earn rewards! No fees, no time locks. <br/>\n            A healthy way to earn with your crypto.\n          </Typography>\n        <Button variant=\"contained\" color=\"primary\" href=\"https://docs.vivafi.org/mainnet-tutorial\">\n          Tutorial\n        </Button>\n      </HeroContent>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_POOLS_QUERY } from '../../../../queries';\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\nimport { Pool } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { PoolFilter } from '../filter';\nimport { PoolList } from '../list';\nimport { Hero } from '../hero'\n\nexport const Pools: React.FC = () => {\n  const context = useConnectedWeb3Context();\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\n    variables: {\n      account: context.account\n    },\n    fetchPolicy: 'network-only'\n  });\n\n  const error = poolQuery.error\n\n  if (error) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message={error.message} type=\"warning\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n    <Hero></Hero>\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n      \n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        \n        <PoolFilter></PoolFilter>\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\n      </Grid>\n    </Container>\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmTransactionDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    };\n  }, [emitter, setOpen])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      style={{ zIndex: 9999 }}\n    >\n      <DialogTitle>ViteConnect</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm transaction on VITE Wallet App\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\nimport { getEmitter } from '../../../../util/emitter.util';\n\nexport const Network: React.FC = () => {\n  const networkManager = getNetworkManager();\n  const emitter = getEmitter();\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n\n  useEffect(() => {\n    let interval = setInterval(async () => {\n      await query.refetch();\n      if (query.data?.networkBlockHeight) {\n        const height = query.data.networkBlockHeight;\n        emitter.emitNetworkBlockHeightChanged(height);\n        networkManager.networkHeight = height;\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  return (\n    <>\n    </>\n  )\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Alert from '@mui/material/Alert';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport const WarningDialog: React.FC = () => {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(false);\n  }\n\n  const handleClose = (event:Object, reason:String) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n\n  \n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Disclaimer\"}\n        </DialogTitle>\n        <DialogContent>\n          <Alert severity=\"info\">Welcome to Viva! Please read the following before using Viva.</Alert>\n          <br/>\n          <DialogContentText id=\"alert-dialog-description\">\n          Viva is an open source decentralized application operating on the Vite blockchain. As with all early-stage products there are risks associated with using the protocol and users assume the full responsibility for these risks. You should not deposit any money you are not comfortable losing.\n          <br/><br/>\n          THE VIVA PROTOCOL AND ACCESS TO THE PROTOCOL IS PROVIDED \"AS IS\", AT YOUR OWN RISK, AND WITHOUT WARRANTIES OF ANY KIND.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button href=\"https://vivafi.org\">Disagree</Button>\n          <Button onClick={handleClick} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { Pools } from '../../../pool/components/main';\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\nimport { Network } from '../network';\nimport { WarningDialog } from '../dialog-warning';\n\nexport const Main: React.FC = (props: any) => {\n  SnackbarUtil.snackbar = useSnackbar();\n  return (\n    <MainWrapper>\n      <WarningDialog />\n      <Header />\n      <Network />\n      <MainScroll>\n        <Pools></Pools>\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { ApolloProvider } from '@apollo/client';\nimport { styled } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport BackgroundSVG from './bg2.svg';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst Background = styled('div')(`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url('${BackgroundSVG}');\n`\n);\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n    <Background>\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main />\n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider>\n      </SnackbarProvider>\n    </Background>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n\n\n\n// A custom theme for this app\n// https://github.com/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript\nconst theme = createTheme({\n\n  typography: {\n    fontFamily: ['Lato', 'Arial'].join(','),\n    h6: { fontFamily: ['Montserrat'].join(',') }\n  },\n  palette: {\n    primary: {\n      main: '#248C66',\n    },\n    secondary: {\n      main: '#4BD1A0',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\n\n\nexport default theme;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static equals(lh: any, rh: any): boolean {\n    // The ORDER of the properties IS IMPORTANT\n    return JSON.stringify(lh) === JSON.stringify(rh);\n  }\n}","import BigNumber from 'bignumber.js';\nimport EventEmitter from 'events';\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\n\nexport interface IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void\n  emitConnectWalletDialog(open: boolean): void\n  emitNetworkBlockHeightChanged(height: BigNumber): void\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\n  emitPoolUpdate(pool: Pool): void\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\n  }\n  emitConnectWalletDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\n  }\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\n  }\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\n  }\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\n  }\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\n  }\n  emitPoolUpdate(pool: Pool): void {\n    this.emit(GlobalEvent.PoolUpdate, pool)\n  }\n}\n\nconst emitter = new GlobalEmitter();\n\nexport const getEmitter = (): IGlobalEmitter => {\n  return emitter;\n}\n","export enum WalletType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class Wallet<T> {\n  private readonly _type: WalletType\n\n  active?: T\n  accounts: T[] = []\n\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\n    this._type = type\n    this.baseInitinit(init)\n  }\n\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWallet(data)\n      case WalletType.Session:\n        return new SessionWallet(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletType {\n    return this._type\n  }\n\n  protected abstract createAccount(data: any): T\n\n  private baseInitinit(data?: any): void {\n    if (data) {\n      this.active = data.active ? this.createAccount(data.active) : undefined\n      if (data.accounts && Array.isArray(data.accounts)) {\n        data.accounts.forEach((account: any) => {\n          this.accounts.push(this.createAccount(account))\n        })\n      }\n    }\n    if (!this.accounts) {\n      this.accounts = []\n    }\n  }\n}\n\nexport class WebWallet extends Wallet<WebWalletAccount> {\n  mnemonic!: string\n\n  constructor(init?: Partial<WebWallet>) {\n    super(WalletType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.mnemonic = data.mnemonic\n    }\n  }\n\n  protected createAccount(data: any): WebWalletAccount {\n    return new WebWalletAccount(data)\n  }\n}\n\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\n  session!: string\n  timestamp!: number\n\n  constructor(init?: Partial<SessionWallet>) {\n    super(WalletType.Session, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.session = data.session\n      this.timestamp = data.timestamp\n    }\n  }\n\n  protected createAccount(data: any): SessionWalletAccount {\n    return new SessionWalletAccount(data)\n  }\n}\n\nexport enum WalletAccountType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class WalletAccount {\n  private readonly _type: WalletAccountType\n\n  id!: string\n  address!: string\n\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\n    this._type = type\n    this.baseInit(init)\n  }\n\n  static fromJS(data: any): Maybe<WalletAccount> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWalletAccount(data)\n      case WalletType.Session:\n        return new SessionWalletAccount(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletAccountType {\n    return this._type\n  }\n\n  private baseInit(data?: any): void {\n    if (data) {\n      this.id = data.id\n      this.address = data.address\n    }\n  }\n}\n\nexport class WebWalletAccount extends WalletAccount {\n  privateKey!: string\n\n  constructor(init?: Partial<WebWalletAccount>) {\n    super(WalletAccountType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.privateKey = data.privateKey\n    }\n  }\n}\n\nexport class SessionWalletAccount extends WalletAccount {\n  constructor(init?: Partial<SessionWalletAccount>) {\n    super(WalletAccountType.Session, init)\n  }\n}","import Connector from '@vite/connector';\nimport { WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { SessionWallet, SessionWalletAccount } from './types';\n\nconst logger = getLogger()\n\nexport interface IWalletConnector {\n  readonly uri: string\n  sendTransactionAsync(...args: any): Promise<any>\n  signMessageAsync(...args: any): Promise<any>\n  killSessionAsync(): Promise<void>\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class WalletConnector extends Connector implements IWalletConnector {\n  private readonly _walletManager: WalletManager;\n\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\n    super(opts, meta);\n    this._walletManager = walletManager;\n    this.on('connect', (err: any, payload: any) => {\n      logger.info('WalletConnector.connect', err, payload)()\n      const { accounts } = payload.params[0];\n      this.saveSession(accounts);\n    });\n    this.on('disconnect', (err: any, payload: any) => {\n      logger.info('WalletConnector.disconnect', err, payload)()\n      this.stopBizHeartBeat()\n      this._walletManager.removeWallet()\n    });\n    this.on('session_update', (err: any, payload: any) => {\n      logger.info('WalletConnector.session_update', err, payload)()\n      const session = payload[0];\n      if (session && session.accounts) {\n        this.saveSession(session.accounts);\n      }\n    });\n  }\n\n  get uri(): string {\n    return super.uri\n  }\n\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener)\n  }\n\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.off(event, listener)\n  }\n\n  saveSession(accounts: string[]): void {\n    if (!accounts || !accounts[0]) {\n      throw new Error('address is null');\n    }\n    const sessionAccounts: SessionWalletAccount[] = []\n    for (let index = 0; index < accounts.length; index++) {\n      const address = accounts[index];\n      sessionAccounts.push(new SessionWalletAccount({\n        id: index.toString(),\n        address: address\n      }))\n    }\n    const wallet = new SessionWallet({\n      active: sessionAccounts[0],\n      accounts: sessionAccounts,\n      session: this.session,\n      timestamp: new Date().getTime()\n    })\n    this._walletManager.setWallet(wallet)\n  }\n\n  updateSession(): void {\n    const existing = this._walletManager.getWallet()\n    if (existing && existing instanceof SessionWallet) {\n      existing.timestamp = new Date().getTime()\n      this._walletManager.updateWalletStore(existing)\n    }\n  }\n\n  async createSession(): Promise<string> {\n    await super.createSession();\n    return this.uri;\n  }\n\n  async sendTransactionAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async signMessageAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async killSessionAsync(): Promise<any> {\n    await super.killSession();\n  }\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\n\nconst logger = getLogger()\n\nexport class WalletConnectorFactory {\n  private readonly _walletManager: WalletManager\n\n  constructor(walletManager: WalletManager) {\n    this._walletManager = walletManager\n  }\n\n  create(network: Network): IWalletConnector {\n    const session = this._walletManager.getValidSession()\n    const account = this._walletManager.getActiveAccount()\n    const opts = {\n      bridge: network.connectorUrl,\n      session\n    }\n    const meta = account ? { lastAccount: account.address } : undefined\n    const connector = new WalletConnector(this._walletManager, opts, meta)\n\n    if (!session) {\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\n    }\n\n    return connector\n  }\n}","import { SessionWallet, Wallet, WebWallet } from '.';\nimport { CommonConstants } from '../common/constants';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from './types';\n\nconst logger = getLogger()\n\nexport class WalletStore {\n\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\n\n  clear(): void {\n    localStorage.removeItem(this._webWalletKey);\n    sessionStorage.removeItem(this._sessionWalletKey);\n  }\n\n  getItem(): Maybe<WebWallet | SessionWallet> {\n    let data;\n\n    try {\n      data = localStorage.getItem(this._webWalletKey);\n      if (!data) {\n        data = sessionStorage.getItem(this._sessionWalletKey);\n      }\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n\n    if (!data) {\n      return undefined;\n    }\n\n    try {\n      return Wallet.fromJS(JSON.parse(data));\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n  }\n\n  setItem(data: WebWallet | SessionWallet): void {\n    const saveData = JSON.stringify(data);\n\n    try {\n      switch (data.type) {\n        case WalletType.Web:\n          localStorage.setItem(this._webWalletKey, saveData);\n          break;\n        case WalletType.Session:\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\n          break;\n        default:\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\n      }\n    } catch (err) {\n      logger.error(err)();\n    }\n  }\n}","import { wallet } from '@vite/vitejs';\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\nimport { getLogger } from '../util/logger';\nimport { WalletStore } from './store';\n\nconst logger = getLogger()\n\nexport class WalletManager {\n  private readonly _store: WalletStore;\n  private _wallet?: WebWallet | SessionWallet;\n  private _mnemonicDeriveIndex = 0;\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\n\n  constructor() {\n    this._store = new WalletStore();\n  }\n\n  initWallet(): void {\n    const wallet = this._store.getItem();\n    if (wallet) {\n      this._wallet = wallet;\n      this._mnemonicDeriveIndex = wallet.accounts.length;\n      this.updateWallet();\n    }\n  }\n\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\n    this._setWalletCallback = cb;\n  }\n\n  getWallet(): Maybe<WebWallet | SessionWallet> {\n    return this._wallet;\n  }\n\n  setWallet(wallet?: WebWallet | SessionWallet): void {\n    this._wallet = wallet;\n    this.updateWalletStore(wallet)\n    this.updateWallet()\n  }\n\n  updateWallet(): void {\n    if (this._setWalletCallback) {\n      this._setWalletCallback(this._wallet);\n    }\n  }\n\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\n    if (wallet) {\n      this._store.setItem(wallet);\n    }\n  }\n\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\n    if (!this.validateMnemonic(mnemonic)) {\n      return undefined;\n    }\n    this.resetWallet();\n    const account = this.createWebWalletAccount(mnemonic, 0);\n    const wallet = new WebWallet({\n      active: account,\n      mnemonic,\n      accounts: [\n        account\n      ]\n    });\n    this.setWallet(wallet);\n    return wallet;\n  }\n\n  removeWallet(): void {\n    this.resetWallet();\n    this.updateWallet();\n  }\n\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\n    return this._wallet?.accounts?.find(e => e.address === address)\n  }\n\n  addAccount(): Maybe<WalletAccount> {\n    if (this._wallet instanceof WebWallet) {\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\n      this._wallet.accounts.push(account);\n      this.setActiveAccount(account);\n      return account;\n    }\n    return undefined\n  }\n\n  getActiveAccount(): Maybe<WalletAccount> {\n    return this._wallet?.active\n  }\n\n  setActiveAccount(account: WalletAccount): boolean {\n    if (this._wallet) {\n      this._wallet.active = account;\n      this._store.setItem(this._wallet);\n      this.updateWallet();\n      return true;\n    }\n    return false;\n  }\n\n  getAccounts(): WalletAccount[] {\n    if (this._wallet) {\n      return this._wallet.accounts;\n    }\n    return [];\n  }\n\n  getValidSession(): Maybe<string> {\n    const wallet = this._store.getItem();\n    if (wallet && wallet instanceof SessionWallet) {\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\n        return wallet.session;\n      } else {\n        logger.info('Found expired session.', wallet)();\n      }\n    }\n    return undefined;\n  }\n\n  private resetWallet(): void {\n    this._wallet = undefined;\n    this._mnemonicDeriveIndex = 0;\n    this._store.clear();\n  }\n\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\n    const { privateKey } = wallet.deriveAddress({\n      mnemonics: mnemonic,\n      index\n    });\n    let account = new WebWalletAccount({\n      id: index.toString(),\n      privateKey,\n      address: wallet.createAddressByPrivateKey(privateKey).address\n    });\n    this._mnemonicDeriveIndex = index + 1;\n    return account;\n  }\n\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\n    if (mnemonic) {\n      return wallet.validateMnemonics(mnemonic);\n    }\n    return false;\n  }\n}\n\nconst manager = new WalletManager();\n\nexport const getWalletManager = () => {\n  return manager;\n}"],"sourceRoot":""}
{"version":3,"sources":["clients/vite.client.ts","util/task.ts","common/constants.ts","util/types.ts","util/logger.ts","util/file.util.ts","bg2.svg","util/coin.util.ts","clients/coingecko.client.ts","clients/vitex.client.ts","util/ensure.ts","util/moment.util.ts","datasources/base.datasource.ts","datasources/mock.datasource.ts","util/cache.ts","common/network.ts","datasources/vite.datasource.ts","contexts/common.ts","mutations/pool.ts","queries/account.ts","queries/network.ts","queries/token.ts","queries/pool.ts","clients/apollo.client.ts","features/common/components/tooltip/component.tsx","features/layout/components/footer/component.tsx","features/layout/components/header-loading/component.tsx","features/layout/components/main-scroll/component.tsx","features/layout/components/main-wrapper/component.tsx","contexts/web3.tsx","contexts/connectedWeb3.tsx","features/main/components/loading/component.tsx","util/format.util.ts","util/snackbar.util.ts","features/main/components/qrcode/component.tsx","features/main/components/login/component.tsx","features/main/components/network-list/component.tsx","features/layout/components/header/component.tsx","features/common/components/alert/component.tsx","features/pool/components/filter/component.tsx","factories/moment.factory.ts","util/filter.util.ts","services/pool.service.ts","util/vite.util.ts","features/common/components/click-once-button/component.tsx","features/pool/components/countdown/component.tsx","features/pool/components/dialog-deposit/component.tsx","services/account.service.ts","features/pool/components/dialog-withdraw/component.tsx","features/pool/components/dialog/component.tsx","features/pool/components/rewards/component.tsx","features/pool/components/tokens/component.tsx","features/pool/components/list-item/component.tsx","features/pool/components/list/component.tsx","features/pool/components/hero/component.tsx","features/pool/components/main/component.tsx","features/main/components/dialog-transaction/component.tsx","features/main/components/network/component.tsx","features/main/components/dialog-warning/component.tsx","features/main/components/main/component.tsx","App.tsx","reportWebVitals.ts","theme.tsx","index.tsx","util/common.util.ts","util/emitter.util.ts","wallet/types.ts","wallet/connector.ts","wallet/factory.ts","wallet/store.ts","wallet/manager.ts"],"names":["WS_RPC","require","logger","getLogger","providerOptions","retryTimes","retryInterval","ViteClient","_isConnected","_connector","_provider","_client","_emitter","_walletManager","_connectorFactory","initAsync","network","a","Promise","resolve","reject","create","rpcUrl","isResolved","on","err","error","ViteAPI","info","path","this","getEmitter","getWalletManager","WalletConnectorFactory","disconnect","method","args","request","account","methodName","abi","params","tokenId","amount","toAddress","block","accountBlock","createAccountBlock","address","WebWalletAccount","setProvider","setPrivateKey","privateKey","autoSetPreviousAccountBlock","sign","send","result","SessionWalletAccount","connector","emitConfirmTransactionDialog","sendTransactionAsync","Error","contractAddress","data","abiutils","encodeFunctionCall","dataBase64","Buffer","from","toString","requestAsync","resultBytes","outputs","i","length","push","type","offchainDecodeResult","decodeParameters","resultList","name","value","offchaincode","selfAddr","offChainCode","vmLog","topics","j","abiItem","encodeLogSignature","topic","decodeLog","inputs","utils","_Buffer","slice","event","payload","addressHeightRange","placeholder","fromHeight","toHeight","tempPayload","JSON","stringify","replace","subscribe","parse","unsubscribe","height","undefined","Task","blockByHeight","receiveBlockHash","blockByHash","getAccountBlockStatus","start","status","resolveAccountBlockData","statusTxt","blockType","bytes","client","getViteClient","task","interval","_taskTimer","_taskInterval","_task","_callback","setTimeout","_onStop","_run","callback","window","clearTimeout","CommonConstants","APP_NAME","WEB_WALLET_STORAGE_SPACE","SESSION_WALLET_STORAGE_SPACE","POOLS_CONTRACT_ADDRESS_v05","POOLS_CONTRACT_ADDRESS_v04","POOLS_CONTRACT_ADDRESS_v03","POOLS_CONTRACT_ADDRESS_v02","POOLS_CONTRACT_ADDRESS_v01","POOLS_CONTRACT_ADDRESS_TESTNET","VITE_TOKEN_ID","REWARD_FACTOR","RPC_URL","Networks","id","networkId","connectorUrl","TypeNames","Pool","PoolUserInfo","Token","UnknownToken","__typename","symbol","originalSymbol","decimals","iconUrl","url","CustomDefinedTokens","Map","PoolSortTypes","DefaultPoolFilterValues","stakedOnly","showLive","sortBy","PoolSortType","DEFAULT","search","PoolDialogType","GlobalEvent","VmLogEvent","LogEventModel","init","banner","Object","assign","noop","ExtendedConsoleLogger","Boolean","process","Date","toLocaleTimeString","mapFn","e","CommonUtil","isString","message","toJsonString","timestamp","map","Array","isArray","e1","isEnabled","createLogEventModel","Function","prototype","bind","call","console","debug","warn","FileUtilType","util","_iconUrlMap","_coinMarketCapMap","_coingeckoMap","existing","get","toLowerCase","getCoinUtil","CoingeckoClient","_coinUtil","CoinGecko","mappedName","mapCoingeckoName","ids","simple","price","usdprice","usd","BigNumber","VitexClient","_baseUrl_v1","_baseUrl_v2","_baseUrl_v3","axios","getTokenPriceAsync","usdRate","Ensure","property","propertyName","trim","maxLength","MomentUtil","locale","_locale","navigator","language","moment","seconds","duration","date","unix","utc","local","getLocal","format","getLocalTime","getLocalDate","BaseDataSource","_coingeckoClient","_vitexClient","_tokens","_moment","initAsyncProtected","clear","disposeProtected","getActiveAccount","notNull","pool","endTimestamp","isExpired","latestRewardBlock","endBlock","decimalFactor","pow","stakingToken","rewardToken","getTokenPriceUSDAsync","stakingTokenPrice","rewardTokenPrice","totalTime","minus","startBlock","secondsInYear","toPercent","apr","times","totalRewards","dividedBy","totalStaked","isFinite","isNaN","token","lte","getNetworkBlockHeightAsync","networkBlockHeight","remainingSeconds","add","toNumber","customToken","getTokenDetailAsync","tokenDecimals","urlIcon","links","website","set","unknownToken","p","getTokenAsync","stakingTokenId","rewardTokenId","getEndTimestampAsync","totalStakingBalance","totalRewardBalance","rewardPerPeriod","rewardPerToken","paidOut","minimumDeposit","maximumTotalStakingBalance","lockTime","fetchTimestamp","u","poolId","stakingBalance","rewardDebt","FileUtil","BrowserFileUtil","fetch","response","text","MockDataSource","fileUtil","_fileUtil","_pools","_users","_networkBlockHeight","_networkBlockHeightInterval","setInterval","plus","readFileAsync","pools","index","toPoolAsync","getAprAsync","users","toPoolUserInfoAsync","initNetworkBlockHeight","initPoolsAsync","initPoolUsersAsync","clearInterval","_account","_id","timeout","random","getPoolUserInfoAsync","userInfo","getPoolAsync","_poolId","isNullOrWhitespace","find","blockNumber","latestBlock","eq","period","latestReward","div","_tokenId","_amount","_updatePoolAsync","getAccount","gt","pendingAmount","emitPoolDeposit","emitPoolWithdraw","ds","getMockDataSource","CachedFunctionCall","callbackFn","_duration","_callbackFn","_currentValue","_lastExecution","getTime","manager","_networkHeight","_network","_setNetworkCallback","cb","split","Number","filter","includes","getNetworkManager","ViteDataSource","_offchainMethods","_cachedNetworkBlockHeight","_contract","_listener","handleResponseAsync","waitForAccountBlockAsync","then","objectFromEntries","entries","fromEntries","entry","networkManager","currentNetwork","getNetwork","contract","contractName","createAddressListenerAsync","results","decodeVmLog","vmlog","handleVmLogAsync","removeAddressListener","removeListener","balanceInfoMap","balance","getAsync","result1","version","callOffChainMethodAsync","getOffchainMethodAbi","offChain","queryContractAsync","result2","concat","getTotalPoolsAsync","arr","stakingTokenIds","item","rewardTokenIds","packedIntegers","packedIntegers2","all","callContractAsync","has","stateMutability","Deposit","addr","pid","Withdraw","CommonContext","_vite","_datasource","initViteClientAsync","dispose","context","getCommonContext","DEPOSIT_MUTATION","gql","WITHDRAW_MUTATION","PoolMutations","deposit","parent","datasource","depositAsync","withdraw","withdrawAsync","GET_ACCOUNT_BALANCE_QUERY","AccountQueries","accountBalance","getAccountBalanceAsync","GET_NETWORK_BLOCK_HEIGHT_QUERY","NetworkQueries","TOKEN_FIELDS","TokenQueries","POOL_FIELDS","POOL_USER_INFO_FIELDS","GET_POOL_QUERY","GET_POOLS_QUERY","GET_POOL_USER_INFO_QUERY","PoolQueries","getPoolsAsync","totalPools","poolUserInfo","ApolloClientWrapper","ApolloClient","cache","InMemoryCache","typePolicies","Query","fields","resolvers","GraphQLScalarType","description","serialize","parseValue","Mutation","headers","getApolloClient","BootstrapTooltip","styled","className","props","Tooltip","classes","popper","theme","tooltipClasses","tooltip","backgroundColor","palette","common","white","color","boxShadow","shadows","fontSize","arrow","black","Footer","maxWidth","typography","pxToRem","border","useState","setNetworkBlockHeight","rotated","setRotated","emitter","useEffect","handleEvent","heightString","heightRef","substr","mod","NetworkBlockHeightChanged","off","Box","sx","py","px","Grid","container","direction","justifyContent","alignItems","spacing","title","placement","Typography","variant","verticalAlign","display","mr","transform","Chip","label","size","Root","TitleTypography","HeaderLoading","AppBar","position","Toolbar","MainScrollStyled","MainScrollInner","MainScroll","children","restProps","Container","MainWrapperStyled","MainWrapper","Web3Context","React","createContext","Web3Provider","setError","wallet","setWallet","setNetwork","onSetWalletCallback","onSetNetworkCallback","Provider","ConnectedWeb3Context","useConnectedWeb3Context","useContext","ConnectedWeb3","connection","setConnection","web3Context","useWeb3Context","commonContext","initWallet","logout","useCallback","removeWallet","location","reload","active","FormatUtil","defaultMessage","log","graphQLErrors","SnackbarUtil","snackbar","enqueueSnackbar","formatMessage","QrCode","elementRef","useRef","defaultOpt","ecLevel","HIGH","minVersion","background","mode","modes","DRAW_WITH_IMAGE_BOX","radius","image","mSize","current","innerHTML","qrcode","generate","ref","LoginDialog","onClose","open","setOpen","viteClient","ConnectWalletDialog","Dialog","DialogTitle","DialogContent","DialogContentText","mt","textAlign","uri","NetworksFormControl","FormControl","margin","NetworkList","networks","getNetworks","InputLabel","Select","labelId","onChange","selectedNetwork","target","MenuItem","Header","loginOpen","setLoginOpen","href","src","alt","width","icon","truncateStringInTheMiddle","Button","onClick","Alert","Paper","padding","PoolFilter","prop","values","setValues","emitEvent","oldValues","newValues","emitPoolFilterValuesChanged","handleCheckedChange","checked","mb","xs","md","FormGroup","Stack","FormControlLabel","control","Checkbox","Switch","minWidth","TextField","autoComplete","factory","_map","getMomentFactory","FilterUtil","partition","closedPools","openPools","filtered","sorted","sortPools","searchPools","APR","orderBy","TOTAL_STAKED","term","lowerCaseTerm","PoolService","_apollo","_fetchPolicy","query","variables","fetchPolicy","poolQuery","userInfoQuery","mutate","mutation","lt","service","getPoolService","ViteUtil","gte","bn","decimalPlaces","ROUND_DOWN","toFormat","ClickOnceButton","isDisabled","setIsDisabled","handleClick","LoadingButton","loading","fullWidth","disabled","PoolCountdown","hasStarted","setHasStarted","remainingBlocks","setRemainingBlocks","countdown","setCountdown","useMemo","networkHeight","getDuration","months","days","hours","minutes","ml","Skeleton","animation","PoolDepositDialog","setAmount","setDisabled","poolService","changeAmount","parseInt","formatBigNumber","state","handleClose","setState","handleConfirmAsync","enqueueError","htmlFor","Input","autoFocus","startAdornment","InputAdornment","DialogActions","AccountService","PoolWithdrawDialog","getStakedAmount","accountService","getBalanceAsync","PoolDialog","WITHDRAW","DEPOSIT","Rewards","setPool","rewardTokens","setRewardTokens","newRewardTokens","calculateRewardTokens","setCanClaim","updateRewardPerToken","newPool","Tokens","BigCoin","Avatar","SmallCoin","grey","coinUtil","Badge","overlap","anchorOrigin","vertical","horizontal","badgeContent","mapIconUrl","TransparentPaper","paddingTop","PoolListItem","dialogState","setDialogState","canStake","setCanStake","canClaim","canWithdraw","setCanWithdraw","newRewards","setNewRewards","lock","setLock","tempnetwork","calculateNetRewardTokens","showTotalRewards","showRewardTokens","showPercentage","Math","round","str","parseFloat","showNetInt","showTotalInt","handleClickClaimAsync","Accordion","defaultExpanded","AccordionSummary","expandIcon","ProgressBar","now","severity","AccordionDetails","pt","Link","underline","cursor","lg","zeroMinWidth","noWrap","showStaked","emitConnectWalletDialog","PoolList","isLoading","setIsLoading","allPools","setAllPools","setPools","setFilter","filterPools","PoolFilterValuesChanged","replacePool","findIndex","updatedPools","handlePoolEvent","PoolDeposit","PoolWithdraw","HeroContent","borderRadius","Hero","align","paragraph","Pools","useQuery","pb","Transition","forwardRef","Slide","ConfirmTransactionDialog","TransitionComponent","keepMounted","style","zIndex","Network","refetch","emitNetworkBlockHeightChanged","WarningDialog","reason","Main","useSnackbar","Background","BackgroundSVG","App","apolloClient","config","EXPONENTIAL_AT","maxSnack","ApolloProvider","reportWebVitals","onPerfEntry","getCLS","getFID","getFCP","getLCP","getTTFB","createTheme","fontFamily","join","h6","primary","main","secondary","red","A400","ReactDOM","render","ThemeProvider","CssBaseline","document","querySelector","String","defaultValue","ms","blob","min","max","floor","lh","rh","truncateString","strPositionStart","strPositionEnd","GlobalEmitter","emit","PoolUpdate","EventEmitter","WalletType","WalletAccountType","Wallet","_type","accounts","baseInitinit","createAccount","forEach","Web","WebWallet","Session","SessionWallet","mnemonic","session","WalletAccount","baseInit","WalletConnector","walletManager","opts","meta","saveSession","stopBizHeartBeat","listener","sessionAccounts","getWallet","updateWalletStore","res","rej","sendCustomRequest","r","updateSession","catch","Connector","getValidSession","bridge","lastAccount","createSession","WalletStore","_webWalletKey","_sessionWalletKey","localStorage","removeItem","sessionStorage","getItem","fromJS","saveData","setItem","WalletManager","_store","_wallet","_mnemonicDeriveIndex","_setWalletCallback","updateWallet","validateMnemonic","resetWallet","createWebWalletAccount","setActiveAccount","deriveAddress","mnemonics","createAddressByPrivateKey","validateMnemonics"],"mappings":"gQAMQA,EAAWC,EAAQ,KAAnBD,OAEFE,EAASC,cAGTC,EAAkB,CAAEC,WAAY,GAAIC,cAAe,KAE5CC,EAAb,WASE,aAAe,IAAD,gCARNC,kBAQM,OAPNC,gBAOM,OANNC,eAMM,OALNC,aAKM,OAJGC,cAIH,OAHGC,oBAGH,OAFGC,uBAEH,OAedC,UAfc,uCAeF,WAAOC,GAAP,SAAAC,EAAA,+EAA4B,IAAIC,SAAc,SAACC,EAASC,GAClE,EAAKX,WAAa,EAAKK,kBAAkBO,OAAOL,GAChD,EAAKN,UAAY,IAAIV,EAAOgB,EAAQM,OA7BhB,IA6ByClB,GAC7D,IAAImB,GAAa,EACjB,EAAKb,UAAUc,GAAG,SAAS,SAACC,GAC1BvB,EAAOwB,MAAMD,EAAbvB,GACIqB,IACJH,EAAOK,GACP,EAAKjB,cAAe,EACrB,IACD,EAAKG,QAAU,IAAIgB,UAAQ,EAAKjB,WAAW,WACzCR,EAAO0B,KAAP,+BAAoC,EAAKlB,UAAUmB,MAAnD3B,GACAqB,GAAa,EACbJ,IACA,EAAKX,cAAe,CACrB,GACF,KAhBW,2CAfE,sDACZsB,KAAKtB,cAAe,EACpBsB,KAAKlB,SAAWmB,cAChBD,KAAKjB,eAAiBmB,cACtBF,KAAKhB,kBAAoB,IAAImB,IAAuBH,KAAKjB,eAC1D,CAdH,6CAgBE,WACE,OAAOiB,KAAKtB,YACb,GAlBH,qBAoBE,WACE,OAAOsB,KAAKrB,UACb,GAtBH,qBA0CE,WAAiB,IAAD,EACdP,EAAO0B,KAAK,uBAAZ1B,GACA,UAAA4B,KAAKpB,iBAAL,SAAgBwB,aAChBJ,KAAKtB,cAAe,CACrB,GA9CH,iEAgDE,WAAmB2B,GAAnB,iCAAAlB,EAAA,0DACMa,KAAKtB,eAAgBsB,KAAKnB,QADhC,+BAAsCyB,EAAtC,iCAAsCA,EAAtC,oCAEW,EAAAN,KAAKnB,SAAQ0B,QAAb,SAAqBF,GAArB,OAAgCC,KAF3C,gCAIWlB,QAAQE,OAAO,+CAJ1B,gDAhDF,6HAwDE,WAAwBkB,EAAwBC,EAAoBC,EAAUC,EAAaC,EAAcC,EAAgBC,GAAzH,mBAAA3B,EAAA,yDACM4B,EAAQC,eACTC,mBAAmB,eAAgB,CAClCC,QAASV,EAAQU,QACjBR,MACAD,aACAG,UACAC,SACAC,YACAH,aAGAH,aAAmBW,KAZzB,wBAaIJ,EAAQA,EAAMK,YAAYpB,KAAKnB,SAASwC,cAAcb,EAAQc,YAblE,SAcUP,EAAMQ,8BAdhB,uBAeyBR,EAAMS,OAAOC,OAftC,cAeUC,EAfV,yBAgBWA,GAhBX,aAiBalB,aAAmBmB,KAjBhC,qBAkBQ3B,KAAK4B,UAlBb,wBAmBM5B,KAAKlB,SAAS+C,8BAA6B,GAnBjD,oBAqB6B7B,KAAK4B,UAAUE,qBAAqB,CACvDf,MAAOA,EAAMC,eAtBvB,eAqBcU,EArBd,OAwBQ1B,KAAKlB,SAAS+C,8BAA6B,GAxBnD,kBAyBeH,GAzBf,yCA2BQ1B,KAAKlB,SAAS+C,8BAA6B,GA3BnD,2CA+BY,IAAIE,MAAM,4BA/BtB,sCAkCU,IAAIA,MAAM,yBAlCpB,2DAxDF,0IA+FE,WAAyBC,EAAyBtB,EAAUC,GAA5D,+BAAAxB,EAAA,6DACM8C,EAAOC,MAASC,mBAAmBzB,EAAKC,GACxCyB,EAAaC,EAAOC,KAAKL,EAAM,OAAOM,SAAS,UAFrD,SAIqBvC,KAAKwC,aAAa,iBAAkB,CACrDtB,QAASc,EACTC,KAAMG,IANV,YAIMV,EAJN,yBAaI,IAHIe,EAAcJ,EAAOC,KAAKZ,EAAQ,UAAUa,SAAS,OACrDG,EAAU,GAELC,EAAI,EAAGA,EAAIjC,EAAIgC,QAAQE,OAAQD,IACtCD,EAAQG,KAAKnC,EAAIgC,QAAQC,GAAGG,MAM9B,GAHIC,EAAuBb,MAASc,iBAAiBN,EAASD,GAC1DQ,EAAa,GAEbF,EACF,IAASJ,EAAI,EAAGA,EAAIjC,EAAIgC,QAAQE,OAAQD,IAClCjC,EAAIgC,QAAQC,GAAGO,KACjBD,EAAWJ,KAAK,CACdK,KAAMxC,EAAIgC,QAAQC,GAAGO,KACrBC,MAAOJ,EAAqBJ,KAG9BM,EAAWJ,KAAK,CACdK,KAAM,GACNC,MAAOJ,EAAqBJ,KA9BxC,yBAmCWM,GAnCX,iCAqCS,IArCT,iDA/FF,uIAwIE,WAA8BjB,EAAyBtB,EAAU0C,EAAsBzC,GAAvF,+BAAAxB,EAAA,6DACM8C,EAAOC,MAASC,mBAAmBzB,EAAKC,GACxCyB,EAAaC,EAAOC,KAAKL,EAAM,OAAOM,SAAS,UAFrD,SAGqBvC,KAAKwC,aAAa,8BAA+B,CAClEa,SAAUrB,EACVsB,aAAcF,EACdnB,KAAMG,IANV,YAGMV,EAHN,yBAWI,IAFIe,EAAcJ,EAAOC,KAAKZ,EAAQ,UAAUa,SAAS,OACrDG,EAAU,GACLC,EAAI,EAAGA,EAAIjC,EAAIgC,QAAQE,OAAQD,IACtCD,EAAQG,KAAKnC,EAAIgC,QAAQC,GAAGG,MAI9B,GAFIC,EAAuBb,MAASc,iBAAiBN,EAASD,GAC1DQ,EAAa,GACbF,EACF,IAASJ,EAAI,EAAGA,EAAIjC,EAAIgC,QAAQE,OAAQD,IAClCjC,EAAIgC,QAAQC,GAAGO,KACjBD,EAAWJ,KAAK,CACdK,KAAMxC,EAAIgC,QAAQC,GAAGO,KACrBC,MAAOJ,EAAqBJ,KAG9BM,EAAWJ,KAAK,CACdK,KAAM,GACNC,MAAOJ,EAAqBJ,KA1BxC,yBA+BWM,GA/BX,iCAiCS,IAjCT,iDAxIF,sFA4KE,SAAYM,EAAY7C,GAEtB,IADA,IAAI8C,EAASD,EAAMC,OACVC,EAAI,EAAGA,EAAI/C,EAAIkC,OAAQa,IAAK,CACnC,IAAIC,EAAUhD,EAAI+C,GAClB,GAAIvB,MAASyB,mBAAmBD,KAAaF,EAAO,GAClD,GAAID,EAAMtB,KAUR,MATiB,CACf2B,MAAOJ,EAAO,GACdlD,KAAM4B,MAAS2B,UACbH,EAAQI,OACRC,QAAMC,QAAQ1B,KAAKiB,EAAMtB,KAAM,UAAUM,SAAS,OAClDiB,EAAOS,MAAM,IAEfC,MAAOR,EAAQR,KAKtB,CAEF,GAhMH,+EAkME,WAAiChC,GAAjC,qBAAA/B,EAAA,6DACQgF,EAAU,CACdC,mBAAoB,CAClBC,YAAa,CACXC,WAAY,IACZC,SAAU,OAKhBC,GADIA,EAAcC,KAAKC,UAAUP,IACPQ,QAAQ,cAAezD,GAVnD,mBAWuBlB,KAAKnB,eAX5B,aAWuB,EAAc+F,UAAU,0BAA2BH,KAAKI,MAAML,IAXrF,cAWQ9C,EAXR,yBAYSA,GAZT,gDAlMF,mFAiNE,SAAewC,GAAmB,IAAD,EAC/B,UAAAlE,KAAKnB,eAAL,SAAciG,YAAYZ,EAC3B,GAnNH,6EAqNE,WAA+BhD,EAAiB6D,GAAhD,oBAAA5F,EAAA,+EACS,IAAIC,QAAJ,uCAAY,WAAOC,EAASC,GAAhB,iBAAAH,EAAA,sDACbuC,OAAcsD,EACdpF,OAAaoF,EACJ,IAAIC,IAAJ,sBAAS,gCAAA9F,EAAA,+EAEQ,EAAKqD,aAC7B,iCACAtB,EACA6D,GALgB,UAEdG,EAFc,iDAST,GATS,UAYdC,EAAmBD,EAAcC,iBAZnB,0CAcT,GAdS,wBAiBM,EAAK3C,aAAa,+BAAgC2C,GAjBxD,WAiBdC,EAjBc,kDAmBT,GAnBS,eAsBlB1D,EAAM,2BACD,EAAK2D,sBAAsBD,IAD1B,IAEJpE,aAAcoE,IAxBE,mBA2BX,GA3BW,yCA6BlBxF,EAAK,KA7Ba,mBA8BX,GA9BW,0DAgCnB,KACE0F,OAAM,WACL1F,EACFN,EAAOM,GAEPP,EAAQqC,EAEX,IA1CgB,2CAAZ,0DADT,2CArNF,4FAoQE,SAA8BV,GAC5B,IAAIuE,EAASvF,KAAKwF,wBAAwBxE,GACtCyE,EAAY,GAChB,OAAQF,GACN,KAAK,EACHE,EAAY,uBACZ,MACF,KAAK,EACHA,EAAY,wBACZ,MACF,KAAK,EACHA,EAAY,6BAGhB,MAAO,CACLF,SACAE,YAEH,GAtRH,qCAwRE,SAAgCzE,GAC9B,GAC8B,IAA3BA,EAAa0E,WAA8C,IAA3B1E,EAAa0E,YAC7C1E,EAAaiB,KAEd,OAAO,EAET,IAAI0D,EAAQ5B,QAAMC,QAAQ1B,KAAKtB,EAAaiB,KAAM,UAElD,OAAqB,KAAjB0D,EAAM/C,OACD,EAEF+C,EAAM,GACd,KArSH,KAwSMC,EAAS,IAAInH,EAENoH,EAAgB,WAC3B,OAAOD,CACR,C,2ICzTYX,EAAb,WAME,WAAYa,EAA8BC,GAIxC,OAJ2D,yBALrDC,gBAKoD,OAJpDC,mBAIoD,OAHpDC,WAGoD,OAFpDC,eAEoD,EAC1DnG,KAAKkG,MAAQJ,EACb9F,KAAKiG,cAAgBF,EAEd/F,IACR,CAXH,wCAaE,WAAc,IAAD,OACXA,KAAKgG,WAAaI,WAAU,sBAAC,sBAAAjH,EAAA,yDACtB,EAAK+G,MADiB,uBAEzB,EAAKG,UAFoB,0CAKf,EAAKH,QALU,wCAMzB,EAAKG,UANoB,0BAS3B,EAAKC,OATsB,2CAU1BtG,KAAKiG,cACT,GAzBH,qBA2BE,WACEjG,KAAKmG,WAAanG,KAAKmG,WACxB,GA7BH,mBA+BE,SAAMI,GACJvG,KAAKmG,UAAYI,EACbvG,KAAKgG,YAIThG,KAAKsG,MACN,GAtCH,kBAyCE,WACEtG,KAAKqG,UACArG,KAAKgG,aAGVQ,OAAOC,aAAazG,KAAKgG,YACzBhG,KAAKgG,gBAAahB,EACnB,KAhDH,I,kCCAA,0PAEa0B,EAAkB,CAC7BC,SAAU,gBACVC,yBAA0B,iBAC1BC,6BAA8B,qBAC9BC,2BAA4B,0DAC5BC,2BAA4B,0DAC5BC,2BAA4B,0DAC5BC,2BAA4B,0DAC5BC,2BAA4B,0DAC5BC,+BAAgC,0DAChCC,cAAe,+BACfC,cAAe,MAKXC,EAAkB,gCAGXC,EAAsB,CACjC,CACEC,GAAI,EACJC,UAAW,EACXvE,KAAM,eACN1D,OAAQ8H,EACRI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,eACN1D,OAAQ8H,EACRI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,eACN1D,OAAQ8H,EACRI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,UACN1D,OAAQ,gCACRkI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,eACN1D,OAAQ,gCACRkI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,QACN1D,OAAQ,uBACRkI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,eACN1D,OAAQ8H,EACRI,aAAc,0BAEhB,CACEF,GAAI,EACJC,UAAW,EACXvE,KAAM,eACN1D,OAAQ8H,EACRI,aAAc,2BAILC,EAAY,CACvBC,KAAM,OACNC,aAAc,eACdC,MAAO,SAGIC,EAAsB,CACjCC,WAAYL,EAAUG,MACtBN,GAAI,KACJtE,KAAM,UACN+E,OAAQ,UACRC,eAAgB,UAChBC,SAAU,EACVC,aAASpD,EACTqD,SAAKrD,GAGMsD,EAAsB,IAAIC,IAAmB,CACxD,CAAC,+BACC,CACEP,WAAYL,EAAUG,MACtBN,GAAI,+BACJtE,KAAM,MACN+E,OAAQ,UACRC,eAAgB,MAChBC,SAAU,GACVC,QAAS,cACTC,IAAK,qDAGT,CAAC,gCACC,CACEL,WAAYL,EAAUG,MACtBN,GAAI,+BACJtE,KAAM,OACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,GACVC,QAAS,gBACTC,IAAK,uBAGT,CAAC,+BACC,CACEL,WAAYL,EAAUG,MACtBN,GAAI,+BACJtE,KAAM,OACN+E,OAAQ,OACRC,eAAgB,OAChBC,SAAU,GACVC,QAAS,6FACTC,IAAK,sBAGT,CAAE,+BACA,CACEL,WAAYL,EAAUG,MACtBN,GAAI,+BACJtE,KAAM,OACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,GACVC,QAAS,mFACTC,IAAK,uBAGT,CAAC,+BACC,CACAL,WAAYL,EAAUG,MACtBN,GAAI,+BACJtE,KAAM,UACN+E,OAAQ,UACRC,eAAgB,MAChBC,SAAU,EACVC,QAAS,6FACTC,IAAK,4BAGP,CAAC,+BACC,CACEL,WAAYL,EAAUG,MACrBN,GAAI,+BACJtE,KAAM,OACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,GACVC,QAAS,yFACTC,IAAK,sBAGV,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,aACN+E,OAAQ,KACRC,eAAgB,KAChBC,SAAU,GACVC,QAAS,6FACTC,IAAK,uBAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,aACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,EACVC,QAAS,6FACTC,IAAK,uBAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,WACN+E,OAAQ,UACRC,eAAgB,MAChBC,SAAU,GACVC,QAAS,6FACTC,IAAK,8BAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,OACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,GACVC,QAAS,mFACTC,IAAK,KAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,QACN+E,OAAQ,YACRC,eAAgB,QAChBC,SAAU,EACVC,QAAS,oFACTC,IAAK,wBAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,cACN+E,OAAQ,eACRC,eAAgB,WAChBC,SAAU,GACVC,QAAS,uFACTC,IAAK,wBAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,YACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,EACVC,QAAS,mFACTC,IAAK,uBAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,WACN+E,OAAQ,WACRC,eAAgB,OAChBC,SAAU,GACVC,QAAS,yFACTC,IAAK,oCAGR,CAAC,+BACD,CACGL,WAAY,QACZR,GAAI,+BACJtE,KAAM,aACN+E,OAAQ,cACRC,eAAgB,UAChBC,SAAU,GACVC,QAAS,mBACTC,IAAK,0CAOGG,EAA+B,CAC1C,CACEtF,KAAM,GACNJ,KAAM,WAER,CACEI,KAAM,MACNJ,KAAM,OAER,CACEI,KAAM,eACNJ,KAAM,iBAIG2F,EAA4C,CACvDC,YAAY,EACZC,UAAU,EACVC,OAAQJ,EAAcK,IAAaC,SAAShG,KAC5CiG,OAAQ,G,0EC7MH,IAAKF,EAWAG,EAMAC,EAgBAC,EAjCZ,wI,SAAYL,O,qBAAAA,I,aAAAA,I,gCAAAA,M,cAWAG,O,qBAAAA,I,uBAAAA,I,kBAAAA,M,cAMAC,K,oDAAAA,E,0CAAAA,E,sDAAAA,E,kDAAAA,E,0BAAAA,E,4BAAAA,E,yBAAAA,M,cAgBAC,K,0BAAAA,E,kBAAAA,E,qBAAAA,M,oGC/HCC,EAAb,aAIE,WAAmBC,GAAgC,yBAHnDC,YAGkD,OAFlD/I,UAEkD,EAChDgJ,OAAOC,OAAOvJ,KAAMoJ,EACrB,IAWGI,EAAO,aAyCAC,EAAb,uFAEE,WACE,OAAOC,QAAQC,OAChB,GAJH,uBAME,SAAkB7G,GAChB,MAAM,IAAN,OAAWA,EAAX,aAAmB,IAAI8G,MAAOC,qBAA9B,IACD,GARH,iCAUE,SAA4B/G,GAA6C,IACvE,IAAMgH,EAAQ,SAACC,GACb,OAAIC,IAAWC,SAASF,GACfA,EACEA,aAAahI,MACfgI,EAAEG,QAEJF,IAAWG,aAAaJ,EAChC,EARsE,mBAA5BzJ,EAA4B,iCAA5BA,EAA4B,kBAavE,OAJe,IAAI6I,EAAc,CAC/BE,OAAQrJ,KAAKoK,UAAUtH,GACvBxC,KAAI,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAM+J,KAAI,SAAAN,GAAC,OAAIO,MAAMC,QAAQR,GAAKA,EAAEM,KAAI,SAAAG,GAAE,OAAIV,EAAMU,EAAV,IAAiBV,EAAMC,EAAtD,KAGpB,GAxBH,iBA0BE,WAAa,IAAD,OACV,OAAI/J,KAAKyK,UACA,WAAoB,IAAC,IAAD,qBAAhBnK,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMoB,EAAS,EAAKgJ,oBAAoB,QAASpK,GACjD,OAAO,EAAAqK,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQC,MAAOD,QAASrJ,EAAO2H,QAA5D,OAAuE/I,GAC/E,EAEMkJ,CAEV,GAnCH,gBAqCE,WAAY,IAAD,OACT,OAAIxJ,KAAKyK,UACA,WAAoB,IAAC,IAAD,qBAAhBnK,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMoB,EAAS,EAAKgJ,oBAAoB,OAAQpK,GAChD,OAAO,EAAAqK,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQjL,KAAMiL,QAASrJ,EAAO2H,QAA3D,OAAsE/I,GAC9E,EAEMkJ,CAEV,GA9CH,gBAgDE,WAAY,IAAD,OACT,OAAIxJ,KAAKyK,UACA,WAAoB,IAAC,IAAD,qBAAhBnK,EAAgB,yBAAhBA,EAAgB,gBACzB,IAAMoB,EAAS,EAAKgJ,oBAAoB,OAAQpK,GAChD,OAAO,EAAAqK,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQE,KAAMF,QAASrJ,EAAO2H,QAA3D,OAAsE/I,GAC9E,EAEMkJ,CAEV,GAzDH,iBA2DE,WAAa,IAAD,OACV,OAAIxJ,KAAKyK,UACA,WAAoB,IAAC,IAAD,qBAAhBnK,EAAgB,yBAAhBA,EAAgB,iBACjB,OAAJA,QAAI,IAAJA,OAAA,EAAAA,EAAMsC,QAAS,IACZoH,IAAWC,SAAS3J,EAAK,KAC5BA,EAAKuC,KAAK,+CAGd,IAAMnB,EAAS,EAAKgJ,oBAAoB,QAASpK,GACjD,OAAO,EAAAqK,SAASC,UAAUC,MAAKC,KAAxB,SAA6BC,QAAQnL,MAAOmL,QAASrJ,EAAO2H,QAA5D,OAAuE/I,GAC/E,EAEMkJ,CAEV,KAzEH,KA4EMpL,EAAS,IAAIqL,EAENpL,EAAY,WACvB,OAAOD,CACR,C,8CCzHW8M,E,6FCnBG,MAA0B,gC,sHCwCnCC,EAAO,IAxCb,WAKE,aAAe,yBAJEC,iBAIH,OAHGC,uBAGH,OAFGC,mBAEH,EACZtL,KAAKoL,YAAc,IAAI7C,IAAoB,CACzC,CAAC,6FAA8F,2BAC/F,CAAC,6FAA8F,2BAC/F,CAAC,6FAA8F,0BAC/F,CAAC,eAAgB,0BACjB,CAAC,cAAe,yBAChB,CAAC,gBAAiB,2BAClB,CAAC,mBAAoB,gCAEvBvI,KAAKqL,kBAAoB,IAAI9C,IAC7BvI,KAAKsL,cAAgB,IAAI/C,IAAoB,CAC3C,CAAC,cAAc,sBAElB,CAnBH,8CAqBE,SAAWH,GACT,IAAKA,EACH,MAAO,GAET,IAAMmD,EAAWvL,KAAKoL,YAAYI,IAAIpD,GACtC,cAAOmD,QAAP,IAAOA,IAAYnD,CACpB,GA3BH,kCA6BE,SAAqBlF,GACnB,IAAMqI,EAAWvL,KAAKqL,kBAAkBG,IAAItI,GAC5C,cAAOqI,QAAP,IAAOA,IAAYrI,EAAKyB,QAAQ,IAAK,KAAK8G,aAC3C,GAhCH,8BAkCE,SAAiBvI,GACf,IAAMqI,EAAWvL,KAAKsL,cAAcE,IAAItI,GACxC,cAAOqI,QAAP,IAAOA,IAAYrI,EAAKyB,QAAQ,IAAK,KAAK8G,aAC3C,KArCH,MA0CaC,EAAc,WACzB,OAAOP,CACR,E,QCvCK/M,EAASC,cAEFsN,EAAb,WAIE,aAAe,yBAHE9M,aAGH,OAFG+M,eAEH,EACZ5L,KAAKnB,QAAU,IAAIgN,IACnB7L,KAAK4L,UAAYF,GAClB,CAPH,gGASE,WAA4BxI,GAA5B,uBAAA/D,EAAA,sEAEU2M,EAAa9L,KAAK4L,UAAUG,iBAAiB7I,GAC7CvC,EAAS,CAAEqL,IAAKF,GAH1B,SAIyB9L,KAAKnB,QAAQoN,OAAOC,MAAMvL,GAJnD,UAIUe,EAJV,YAMoBsD,KADVmH,EALV,OAKqBzK,QALrB,IAKqBA,GALrB,UAKqBA,EAAQO,KAAK6J,UALlC,aAKqB,EAA0BM,KAL/C,yCAOa,IAAIC,IAAU,IAP3B,gCASW,IAAIA,IAAUF,IATzB,yCAWI/N,EAAOwB,MAAP,KAAAxB,GAXJ,kBAYW,IAAIiO,IAAU,IAZzB,0DATF,8DA0BMzG,EAAS,IAAI+F,E,kBCMNW,EAAb,WAKE,aAAe,yBAJEC,iBAIH,OAHGC,iBAGH,OAFGC,iBAEH,EACZzM,KAAKuM,YAAc,yBACnBvM,KAAKwM,YAAc,wBACnBxM,KAAKyM,YAAc,iDACpB,CATH,8FAWE,WAA0B7L,GAA1B,eAAAzB,EAAA,sEACuBuN,IAAMlB,IAAmCxL,KAAKuM,YAAc,gCAAkC3L,GADrH,cACQc,EADR,yBAGSA,EAAOO,KAAKA,MAHrB,gDAXF,8HAiBE,WAAyBrB,GAAzB,eAAAzB,EAAA,sEACuBuN,IAAMlB,IAAkCxL,KAAKwM,YAAc,kCAAoC5L,GADtH,cACQc,EADR,yBAESA,EAAOO,KAAKA,MAFrB,gDAjBF,iIAsBE,WAA4BrB,GAA5B,eAAAzB,EAAA,+EAEyBa,KAAK2M,mBAAmB/L,GAFjD,cAEUc,EAFV,yBAGW,IAAI2K,IAAU3K,EAAO,GAAGkL,UAHnC,yDAMW,IAAIP,IAAU,IANzB,yDAtBF,8DAkCMzG,EAAS,IAAI0G,E,gBCzENO,EAAb,4FAEE,SAAsBC,EAAeC,EAAsB7C,GACzD,GAAiB,OAAb4C,QAAkC9H,IAAb8H,EACvB,MAAI5C,EACI,IAAInI,MAAMmI,GAEV,IAAInI,MAAM,8BAAgCgL,EAGrD,GAVH,iCAYE,SAAkCD,EAAyBC,EAAsB7C,GAC/E,GAAiB,OAAb4C,QAAkC9H,IAAb8H,GAA+C,MAAb,OAARA,QAAQ,IAARA,OAAA,EAAAA,EAAUE,QAC3D,MAAI9C,EACI,IAAInI,MAAMmI,GAEV,IAAInI,MAAM,8BAAgCgL,EAGrD,GApBH,uBAsBE,SAAwBD,EAAyBC,EAAsBE,GACrE,GAAIH,GAAYA,EAASlK,OAASqK,EAChC,MAAM,IAAIlL,MAAJ,UAAagL,EAAb,0CAA2DE,GAEpE,KA1BH,K,iBCEaC,EAAb,WAGE,WAAYC,GAAyB,yBAFpBC,aAEmB,EAEhCpN,KAAKoN,QADHD,GAGaE,UAAUC,SAE3BC,IAAOJ,OAAOnN,KAAKoN,QACpB,CAVH,6CAYE,WACE,OAAOpN,KAAKoN,OACb,GAdH,iBAgBE,WACE,OAAOG,KACR,GAlBH,yBAoBE,SAAmBC,GACjB,OAAOD,IAAOE,SAASD,EAAS,UACjC,GAtBH,yBAwBE,SAAmBE,GACjB,OAAOH,IAAOI,KAAKD,EACpB,GA1BH,iCA4BE,SAA2BA,GACzB,OAAOH,IAAOG,EAAM,IACrB,GA9BH,sBAgCE,SAAgBA,GACd,OAAOH,IAAOK,IAAIF,GAAMG,OACzB,GAlCH,0BAoCE,SAAoBH,GAClB,OAAO1N,KAAK8N,SAASJ,GAAMK,OAAO,MACnC,GAtCH,0BAwCE,SAAoBL,GAClB,OAAO1N,KAAK8N,SAASJ,GAAMK,OAAO,IACnC,GA1CH,+BA4CE,SAAyBL,GACvB,OAAO1N,KAAKgO,aAAaN,GAAQ,IAAM1N,KAAKiO,aAAaP,EAC1D,GA9CH,sCAgDE,SAAgCA,GAC9B,OAAO1N,KAAKiO,aAAaP,GAAQ,IAAM1N,KAAKgO,aAAaN,EAC1D,GAlDH,uBAoDE,SAAiBtD,GACf,IACE,OAAIA,GAAa,GACRmD,IAAOK,MAAMD,QAAUvD,CAGjC,CAAC,MAAOxK,GACP,OAAO,CACR,CACF,KA7DH,K,QCUMxB,EAASC,cAgBO6P,EAAtB,WASE,aAAe,yBARIpP,cAQL,OAPGC,oBAOH,OANGoP,sBAMH,OALGC,kBAKH,OAJGxC,eAIH,OAHGyC,aAGH,OAFNC,QAAsB,IAAIpB,EAGhClN,KAAKlB,SAAWmB,cAChBD,KAAKjB,eAAiBmB,cACtBF,KAAKmO,iBJJAvI,EIKL5F,KAAKoO,aHmCAxI,EGlCL5F,KAAK4L,UAAYF,IACjB1L,KAAKqO,QAAU,IAAI9F,GACpB,CAhBH,oFAkBE,sBAAApJ,EAAA,6DACEf,EAAO0B,KAAK,sBAAZ1B,GACA4B,KAAKsO,QAAU,IAAIpB,EAFrB,SAGQlN,KAAKuO,qBAHb,gDAlBF,2EAwBE,WACEnQ,EAAO0B,KAAK,2BAAZ1B,GACA4B,KAAKqO,QAAQG,QACbxO,KAAKyO,kBACN,GA5BH,wBA8BE,WACE,IAAMjO,EAAUR,KAAKjB,eAAe2P,mBAEpC,OADA7B,EAAO8B,QAAQnO,EAAS,UAAW,qCAC5BA,CACR,GAlCH,gEAoCE,WAAkBoO,GAAlB,2BAAAzP,EAAA,oEAEQyP,EAAKC,cAAgB,KAAM7O,KAAKsO,QAAQQ,UAAUF,EAAKC,eAAiBD,EAAKG,oBAAsBH,EAAKI,SAFhH,8CAIahK,GAJb,cAQUiK,EAAgB,IAAI5C,IAAU,IAAI6C,IAAKN,EAAKO,aAAahH,SAAWyG,EAAKQ,YAAYjH,UAR/F,SAYoCnI,KAAKqP,sBAAsBT,EAAKO,cAZpE,cAYUG,EAZV,gBAamCtP,KAAKqP,sBAAsBT,EAAKQ,aAbnE,cAaUG,EAbV,OAeUC,EAAYZ,EAAKI,SAASS,MAAMb,EAAKc,YACrCC,EAAgB,IAAItD,IAAU,SAC9BuD,EAAY,IAAIvD,IAAU,KAE1BwD,EAAMN,EAAiBO,MAAMb,GAAea,MAAMlB,EAAKmB,cAAcC,UAAUV,EAAkBQ,MAAMlB,EAAKqB,aAAaH,MAAMN,IAAYM,MAAMH,GAAeG,MAAMF,GAnBhL,mBAqBYC,EAAIK,YAAcL,EAAIM,aAAUnL,EAAY6K,GArBxD,yCAuBIzR,EAAOwB,MAAP,KAAAxB,GAvBJ,uBAwBW4G,GAxBX,0DApCF,iIAgEE,WAA4BoL,GAA5B,SAAAjR,EAAA,wFAWaa,KAAKoO,aAAaiB,sBAAsBe,EAAM5I,KAX3D,yDAaa,IAAI6E,IAAU,IAb3B,wDAhEF,gIAmFE,WAA2B2C,GAA3B,iBAAA7P,EAAA,kEAES6P,IAAYA,EAASqB,IAAI,GAFlC,0CAGc,GAHd,uBAKqCrQ,KAAKsQ,6BAL1C,UAKUC,EALV,SAMUC,EAAmBxB,EAASS,MAAMc,IACnBF,IAAI,GAP7B,yCAQa,GARb,gCAUWrQ,KAAKsO,QAAQ9C,MAAMiF,IAAID,EAAiBE,WAAY,WAAW/C,QAV1E,kCAYIvP,EAAOwB,MAAP,KAAAxB,GAZJ,iCAcS,GAdT,0DAnFF,yHAoGE,WAAoBoJ,GAApB,uBAAArI,EAAA,oEAEUoM,EAAWvL,KAAKqO,QAAQ7C,IAAIhE,IAFtC,yCAIa+D,GAJb,YAOUoF,EAAcrI,IAAoBkD,IAAIhE,IAPhD,yCASamJ,GATb,uBAYyB3Q,KAAKoO,aAAawC,oBAAoBpJ,GAZ/D,YAYU9F,EAZV,gCAcY0O,EAAQ,CACZpI,WAAY,QACZR,KACAtE,KAAMxB,EAAOwB,KACb+E,OAAQvG,EAAOuG,OACfC,eAAgBxG,EAAOwG,eACvBC,SAAUzG,EAAOmP,cACjBzI,QAAS1G,EAAOoP,QAChBzI,IAAK3G,EAAOqP,MAAMC,SAGpBhR,KAAKqO,QAAQ4C,IAAIzJ,EAAI4I,GAzB3B,kBA0BaA,GA1Bb,0DA6BIhS,EAAOwB,MAAP,KAAAxB,GA7BJ,eA+BQ8S,EA/BR,2BAgCOnJ,KAhCP,IAiCIP,OAEFxH,KAAKqO,QAAQ4C,IAAIzJ,EAAI0J,GAnCvB,kBAoCSA,GApCT,0DApGF,uHA2IE,WAA4B1J,EAAY2J,GAAxC,6FAC6BnR,KAAKoR,cAAcD,EAAEE,gBADlD,cACQlC,EADR,gBAE4BnP,KAAKoR,cAAcD,EAAEG,eAFjD,cAEQlC,EAFR,gBAG6BpP,KAAKuR,qBAAqB,IAAIlF,IAAU8E,EAAEnC,WAHvE,cAGQH,EAHR,OAIQD,EAAa,CACjB5G,WAAYL,IAAUC,KACtBJ,KACA2H,eACAC,cACAa,YAAa,IAAI5D,IAAU8E,EAAEK,qBAC7BzB,aAAc,IAAI1D,IAAU8E,EAAEM,oBAC9B/B,WAAY,IAAIrD,IAAU8E,EAAEzB,YAC5BV,SAAU,IAAI3C,IAAU8E,EAAEnC,UAC1BH,eACAE,kBAAmB,IAAI1C,IAAU8E,EAAEpC,mBACnC2C,gBAAiB,IAAIrF,IAAU8E,EAAEO,iBACjCC,eAAgB,IAAItF,IAAU8E,EAAEQ,gBAChCC,QAAS,IAAIvF,IAAU8E,EAAES,SACzBC,eAAgB,IAAIxF,IAAU8E,EAAEU,gBAChCC,2BAA4B,IAAIzF,IAAU8E,EAAEW,4BAC5CC,SAAU,IAAI1F,IAAU8E,EAAEY,UAC1BC,eAAgBhS,KAAKsO,QAAQ9C,MAAMmC,QArBvC,kBAuBSiB,GAvBT,iDA3IF,iIAqKE,WAAoCqD,GAApC,0FACS,CACLjK,WAAYL,IAAUE,aACtBL,GAAG,GAAD,OAAKyK,EAAE/Q,QAAP,YAAkB+Q,EAAEC,QACtBA,OAAQD,EAAEC,OACV1R,QAASyR,EAAE/Q,QACXiR,eAAgB,IAAI9F,IAAU4F,EAAEE,gBAChCC,WAAY,IAAI/F,IAAU4F,EAAEG,cAPhC,2CArKF,8D,iCP1BsBC,G,OAAtB,kDAIaC,GAAb,0MACE,WAAoBvS,GAApB,eAAAZ,EAAA,sEACyBoT,MAAMxS,GAD/B,cACQyS,EADR,yBAESA,EAASC,QAFlB,2CADF,4DAAqCJ,I,SAazBnH,O,qBAAAA,I,kBAAAA,M,KAKL,I,oCQhBD9M,GAASC,cAEFqU,GAAb,kDAOE,aAAyD,IAAD,EAA5CC,EAA4C,uDAAvB,IAAIL,GAAmB,4BACtD,gBAPeM,eAMuC,IALhDC,YAKgD,IAJhDC,YAIgD,IAHhDC,yBAGgD,IAFhDC,iCAEgD,EAEtD,EAAKJ,UAAYD,EACjB,EAAKE,OAAS,GACd,EAAKC,OAAS,GACd,EAAKC,oBAAsB,IAAI1G,IAAU,GACzCjO,GAAO0B,KAAK,wBAAZ1B,GANsD,CAOvD,CAdH,0DAgBE,WAAkC,IAAD,OAC/B4B,KAAK+S,oBAAsB,IAAI1G,IAAU,GACzCrM,KAAKgT,4BAA8BC,aAAY,WAC7C,EAAKF,oBAAsB,EAAKA,oBAAoBG,KAAK,EAE1D,GAAE,IACJ,GAtBH,mEAwBE,qBAAA/B,EAAA,mFACoBnR,KAAK4S,UAAUO,cAAc,qCADjD,OACMC,EADN,OAEEA,EAAQ3O,KAAKI,MAAMuO,GACnBpT,KAAK6S,OAAS,GACLQ,EAAQ,EAJnB,YAIsBA,EAAQD,EAAMxQ,QAJpC,wBAKUuO,EAAkBiC,EAAMC,GALlC,UAMuBrT,KAAKsT,YAAYD,EAAOlC,GAN/C,eAMUvC,EANV,iBAOqB5O,KAAKuT,YAAY3E,GAPtC,QAOIA,EAAKiB,IAPT,OAQI7P,KAAK6S,OAAOhQ,KAAK+L,GARrB,QAI4CyE,IAJ5C,gEAxBF,sHAoCE,WAAkBzE,GAAlB,SAAAzP,EAAA,2DACUyP,EAAKpH,GADf,OAES,IAFT,OAIS,IAJT,+CAGa,IAAI6E,IAAU,aAH3B,gCAKa,IAAIA,IAAU,aAL3B,mGAO+BuC,IAP/B,uDApCF,8HA+CE,0GACoB5O,KAAK4S,UAAUO,cAAc,qCADjD,OACMK,EADN,OAEEA,EAAQ/O,KAAKI,MAAM2O,GACnBxT,KAAK8S,OAAS,GACLO,EAAQ,EAJnB,YAIsBA,EAAQG,EAAM5Q,QAJpC,wBAKUqP,EAA0BuB,EAAMH,GAL1C,UAMuBrT,KAAKyT,oBAAoBxB,GANhD,QAMUnS,EANV,OAOIE,KAAK8S,OAAOjQ,KAAK/C,GAPrB,QAI4CuT,IAJ5C,gEA/CF,6HA0DE,qFACEjV,GAAO0B,KAAK,oCAAZ1B,GACA4B,KAAK0T,yBAFP,SAGQ1T,KAAK2T,iBAHb,uBAIQ3T,KAAK4T,qBAJb,gDA1DF,oFAiEE,WACM5T,KAAKgT,6BACPa,cAAc7T,KAAKgT,4BAEtB,GArEH,2EAuEE,WAA6Bc,GAA7B,SAAA3U,EAAA,+EACS,IAAIkN,IAAU,IADvB,2CAvEF,sIA2EE,sBAAAlN,EAAA,+EACSa,KAAK+S,qBADd,gDA3EF,uHA+EE,WAAmBgB,EAAaD,GAAhC,eAAA3U,EAAA,sEACQ6K,IAAWgK,QAAQhK,IAAWiK,OAAO,IAAK,MADlD,UAEQrF,EAAO5O,KAAK6S,OAAOkB,GACpBD,EAHP,yCAIWlF,GAJX,2CAOOA,GAPP,kBAQoB5O,KAAKkU,qBAAqBH,EAAKD,GARnD,iCAQIK,SARJ,mGA/EF,2HA2FE,WAAoBL,GAApB,qBAAA3U,EAAA,sEACQ6K,IAAWgK,QAAQ,KAD3B,UAEOF,EAFP,yCAGW9T,KAAK6S,QAHhB,OAKQO,EAAQ,GALhB,cAMkBpT,KAAK6S,QANvB,gEAMa1B,EANb,aAOIiC,EAPJ,UAOqBpT,KAAKoU,aAAajD,EAAE3J,GAAIsM,GAP7C,yBAOUjR,KAPV,wLASSuQ,GATT,gEA3FF,gIAuGE,WAA2BiB,EAAiBP,GAA5C,SAAA3U,EAAA,0DACM6K,IAAWsK,mBAAmBR,GADpC,8CAEW9O,GAFX,gCAIShF,KAAK8S,OAAOyB,MAAK,SAAAxK,GAAC,OAAIA,EAAEmI,SAAWmC,GAAWtK,EAAEvJ,QAAQiL,iBAAV,OAA4BqI,QAA5B,IAA4BA,OAA5B,EAA4BA,EAAUrI,cAAlE,KAJ3B,gDAvGF,gIA8GE,sBAAAtM,EAAA,+EACSa,KAAK6S,OAAOjQ,QADrB,gDA9GF,2HAkHE,WAA+BgM,GAA/B,6FAC4B5O,KAAKsQ,6BADjC,UACQkE,EADR,UAEQC,EAAcD,EAAc5F,EAAKI,SAAWwF,EAAc5F,EAAKI,WAIlDJ,EAAKG,mBAN1B,qDAWMH,EAAKqB,YAAYyE,GAAG,GAX1B,uBAYI9F,EAAKG,kBAAoB0F,EAZ7B,0BAiBQE,EAASF,EAAYhF,MAAMb,EAAKG,mBAChC6F,EAAehG,EAAK8C,gBAAgB5B,MAAM6E,GAAQ7E,MAAMpJ,IAAgBW,eAAewN,IAAIjG,EAAKqB,aACtGrB,EAAK+C,eAAiB/C,EAAK+C,eAAeuB,KAAK0B,GAE/ChG,EAAKG,kBAAoB0F,EArB3B,iDAlHF,wHA0IE,WAAmBV,EAAae,EAAkBC,GAAlD,uBAAA5V,EAAA,sEACQ6K,IAAWgK,QAAQ,KAD3B,cAEQpF,EAAO5O,KAAK6S,OAAOkB,GAF3B,SAGQ/T,KAAKgV,iBAAiBpG,GAH9B,cAKQ/N,EAAS,IAAIwL,IAAU0I,GACvBvU,EAAUR,KAAKiV,aAAa/T,QANpC,SAOuBlB,KAAKkU,qBAAqBH,EAAKvT,GAPtD,YAOM2T,EAPN,yBAUQA,EAAShC,eAAe+C,GAAG,KACvBC,EAAgBhB,EAAShC,eAAerC,MAAMlB,EAAK+C,gBAAgBkD,IAAInO,IAAgBW,eAAeoI,MAAM0E,EAAS/B,YAC3HxD,EAAKgD,QAAUhD,EAAKgD,QAAQsB,KAAKiC,IAGnChB,EAAShC,eAAiBgC,EAAShC,eAAee,KAAKrS,GACvDsT,EAAS/B,WAAa+B,EAAShC,eAAerC,MAAMlB,EAAK+C,gBAAgBkD,IAAInO,IAAgBW,eAhBjG,yCAkBqBrH,KAAKyT,oBAAoB,CACxCvB,OAAQ6B,EACR7S,QAASV,EACT2R,eAAgBtR,EAAO0B,WACvB6P,WAAY,MAtBlB,QAkBI+B,EAlBJ,OAwBInU,KAAK8S,OAAOjQ,KAAKsR,GAxBrB,eA0BEvF,EAAKqB,YAAcrB,EAAKqB,YAAYiD,KAAKrS,GACzCb,KAAKlB,SAASsW,gBAAgBrB,EAAK,IAAI1H,IAAU0I,GAAUvU,GA3B7D,mBA4BS,GA5BT,iDA1IF,6HAyKE,WAAoBuT,EAAagB,GAAjC,uBAAA5V,EAAA,sEACQ6K,IAAWgK,QAAQ,KAD3B,cAEQpF,EAAO5O,KAAK6S,OAAOkB,GAF3B,SAGQ/T,KAAKgV,iBAAiBpG,GAH9B,cAKQ/N,EAAS,IAAIwL,IAAU0I,GACvBvU,EAAUR,KAAKiV,aAAa/T,QANpC,SAOyBlB,KAAKkU,qBAAqBH,EAAKvT,GAPxD,UAOQ2T,EAPR,8BASU,IAAIpS,MAAM,yBATpB,YAWMoS,EAAShC,eAAe9B,IAAI,KAAMxP,EAAOqU,GAAGf,EAAShC,gBAX3D,uBAYU,IAAIpQ,MAAM,wBAZpB,eAgBQoT,EAAgBhB,EAAShC,eAAerC,MAAMlB,EAAK+C,gBAAgBkD,IAAInO,IAAgBW,eAAeoI,MAAM0E,EAAS/B,YAC3HxD,EAAKgD,QAAUhD,EAAKgD,QAAQsB,KAAKiC,GAGjChB,EAAShC,eAAiBgC,EAAShC,eAAe1C,MAAM5O,GACxD+N,EAAKqB,YAAcrB,EAAKqB,YAAYR,MAAM5O,GAC1CsT,EAAS/B,WAAa+B,EAAShC,eAAerC,MAAMlB,EAAK+C,gBAAgBkD,IAAInO,IAAgBW,eAE7FrH,KAAKlB,SAASuW,iBAAiBtB,EAAK,IAAI1H,IAAU0I,GAAUvU,GAxB9D,mBAyBS,GAzBT,iDAzKF,8DAAoC0N,GAsM9BoH,GAAK,IAAI5C,GAEF6C,GAAoB,WAC/B,OAAOD,EACR,ECpNYE,GAAb,WAME,WAAY/H,EAAkBgI,GAA+B,yBAL5CC,eAK2C,OAJ3CC,iBAI2C,OAHpDC,mBAGoD,OAFpDC,oBAEoD,EAC1D7V,KAAK0V,UAAYjI,EACjBzN,KAAK2V,YAAcF,EACnBzV,KAAK6V,eAAiB,IAAIjM,KAAK,GAAGkM,SACnC,CAVH,6CAYE,WACE,OAAO,IAAIlM,MAAOkM,WAAa9V,KAAK6V,eAAiB7V,KAAK0V,SAC3D,GAdH,6DAgBE,sBAAAvW,EAAA,yDACOa,KAAK4V,gBAAiB5V,KAAK8O,YADlC,gCAE+B9O,KAAK2V,cAFpC,OAEI3V,KAAK4V,cAFT,OAGI5V,KAAK6V,gBAAiB,IAAIjM,MAAOkM,UAHrC,gCAKS9V,KAAK4V,eALd,gDAhBF,6D,SCKMxX,GAASC,cA6CT0X,GAAU,IA3ChB,WAKE,aAAe,yBAJPC,oBAIM,OAHNC,cAGM,OAFNC,yBAEM,EACZlW,KAAKgW,eAAiB,IAAI3J,IAAU,EACrC,CAPH,+CAaE,WACE,OAAOrM,KAAKgW,cACb,EAfH,IASE,SAAkBjR,GAChB/E,KAAKgW,eAAiBjR,CACvB,GAXH,gCAiBE,SAAyBoR,GACvBnW,KAAKkW,oBAAsBC,CAC5B,GAnBH,wBAqBE,WACE,OAAOnW,KAAKiW,QACb,GAvBH,wBAyBE,SAAW/W,GACTc,KAAKiW,SAAW/W,EACZc,KAAKkW,qBACPlW,KAAKkW,oBAAoBlW,KAAKiW,SAEjC,GA9BH,yBAgCE,WACE,IAAK,IAAD,EACIjK,EAAG,UAAGrC,kBAAH,EAAG,EAAgCyM,MAAM,KAAK/L,KAAI,SAAAN,GAAC,OAAIsM,OAAOtM,EAAX,IAC5D,OAAOxC,IAAS+O,QAAO,SAAAvM,GAAC,cAAIiC,QAAJ,IAAIA,OAAJ,EAAIA,EAAKuK,SAASxM,EAAEvC,GAApB,GACzB,CAAC,MAAO5H,GACPxB,GAAOwB,MAAMA,EACd,CACD,OAAO2H,GACR,KAxCH,MA6CaiP,GAAoB,WAC/B,OAAOT,EACR,EC1CK3X,GAASC,cAEFoY,GAAb,kDAQE,aAAyD,IAAD,EAA5C9D,EAA4C,uDAAvB,IAAIL,GAAmB,4BACtD,gBAReM,eAOuC,IANvC/T,aAMuC,IALvC6X,iBAAwC,IAAInO,IAKL,EAJvCoO,+BAIuC,IAHhDC,eAGgD,IAFhDC,eAEgD,IAsShDC,oBAtSgD,uCAsS1B,WAAO5V,EAAiB6D,GAAxB,SAAA5F,EAAA,+EAA2C,IAAIC,SAAc,SAACC,EAASC,GACnG,EAAKT,QAAQkY,yBAAyB7V,EAAS6D,GAAQiS,MAAK,SAACtV,GAGnD,IAAD,EAFgB,KAAb,OAANA,QAAM,IAANA,OAAA,EAAAA,EAAQ6D,QACVlG,IAEAC,EAAM,iBAACoC,QAAD,IAACA,OAAD,EAACA,EAAQ+D,iBAAT,QAAsB,wBAE/B,GACF,KAR6B,2CAtS0B,0DA8ThDwR,kBAAoB,SAACC,GAC3B,OAAO5N,OAAO6N,YACZD,EAAQ7M,KAAI,SAAC+M,GACX,MAAO,CAACA,EAAMlU,KAAMkU,EAAMjU,MAC3B,IAEJ,EAlUC,EAAKyP,UAAYD,EACjB,EAAK9T,QAAUgH,cACf,EAAK8Q,0BAA4B,IAAInB,GAAmB,IAAvB,sBAA4B,sBAAArW,EAAA,sEAE9C,EAAKN,QAAQ2D,aAAa,iCAFoB,oFAI7DpE,GAAO0B,KAAK,wBAAZ1B,GARsD,CASvD,CAjBH,6FAmBE,gHAGQiZ,EAAiBb,MACjBc,EAAiBD,EAAeE,gBAEfhQ,IAASgN,MAAK,SAAArV,GAAO,MAAqB,iBAAjBA,EAAQgE,IAAZ,IAN9C,wBAOI9E,GAAO0B,KAAK,+BAAZ1B,GAPJ,SAQ2B4B,KAAK4S,UAAUO,cAAc,kDARxD,OAQUqE,EARV,OASIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BxX,KAAK4W,UAAU1V,QAAUwF,IAAgBK,2BAV7C,2BAWauQ,IAAmB/P,IAASgN,MAAK,SAAArV,GAAO,MAAqB,iBAAjBA,EAAQgE,IAAZ,IAXrD,wBAYI9E,GAAO0B,KAAK,+BAAZ1B,GAZJ,UAa2B4B,KAAK4S,UAAUO,cAAc,kDAbxD,QAaUqE,EAbV,OAcIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BxX,KAAK4W,UAAU1V,QAAUwF,IAAgBI,2BAf7C,2BAgBawQ,IAAmB/P,IAASgN,MAAK,SAAArV,GAAO,MAAqB,iBAAjBA,EAAQgE,IAAZ,IAhBrD,wBAiBI9E,GAAO0B,KAAK,+BAAZ1B,GAjBJ,UAkB2B4B,KAAK4S,UAAUO,cAAc,kDAlBxD,QAkBUqE,EAlBV,OAmBIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BxX,KAAK4W,UAAU1V,QAAUwF,IAAgBM,2BApB7C,2BAqBasQ,IAAmB/P,IAASgN,MAAK,SAAArV,GAAO,MAAqB,iBAAjBA,EAAQgE,IAAZ,IArBrD,wBAsBI9E,GAAO0B,KAAK,+BAAZ1B,GAtBJ,UAuB2B4B,KAAK4S,UAAUO,cAAc,kDAvBxD,QAuBUqE,EAvBV,OAwBIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BxX,KAAK4W,UAAU1V,QAAUwF,IAAgBO,2BAzB7C,2BA0BaqQ,IAAmB/P,IAASgN,MAAK,SAAArV,GAAO,MAAqB,iBAAjBA,EAAQgE,IAAZ,IA1BrD,wBA2BI9E,GAAO0B,KAAK,+BAAZ1B,GA3BJ,UA4B2B4B,KAAK4S,UAAUO,cAAc,kDA5BxD,QA4BUqE,EA5BV,OA6BIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BxX,KAAK4W,UAAU1V,QAAUwF,IAAgBQ,2BA9B7C,2BA+BaoQ,IAAmB/P,IAASgN,MAAK,SAAArV,GAAO,MAAqB,YAAjBA,EAAQgE,IAAZ,IA/BrD,wBAgCI9E,GAAO0B,KAAK,0BAAZ1B,GAhCJ,UAiC2B4B,KAAK4S,UAAUO,cAAc,kDAjCxD,QAiCUqE,EAjCV,OAkCIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BxX,KAAK4W,UAAU1V,QAAUwF,IAAgBS,+BAnC7C,yCAsC2BnH,KAAK4S,UAAUO,cAAc,kDAtCxD,QAsCUqE,EAtCV,OAuCIxX,KAAK4W,UAAYnS,KAAKI,MAAM2S,GAC5BpZ,GAAO0B,KAAK,kCAAZ1B,GAxCJ,eA2CEA,GAAO0B,KAAP,6BAAwBE,KAAK4W,iBAA7B,aAAwB,EAAgBa,aAAxC,WAAArZ,GA3CF,UA4CyB4B,KAAKnB,QAAQ6Y,2BAA2B1X,KAAK4W,UAAU1V,SA5ChF,QA4CElB,KAAK6W,UA5CP,OA6CE7W,KAAK6W,UAAUnX,IAAG,SAACiY,GAAoB,IAAD,EACpC,GAAI,UAAC,EAAKf,iBAAN,OAAC,EAAgBlW,IAGnB,IAAK,IAAI2S,EAAQ,EAAGA,EAAQsE,EAAQ/U,OAAQyQ,IAAS,CACnD,IAAM3R,EAASiW,EAAQtE,GACjB9P,EAAQ,EAAK1E,QAAQ+Y,YAAYlW,EAAOmW,MAAO,EAAKjB,UAAUlW,KACpEtC,GAAO0B,KAAP,OAAYyD,QAAZ,IAAYA,IAAS7B,EAArBtD,GACImF,GACF,EAAKuU,iBAAiBvU,EAEzB,MATDnF,GAAO0B,KAAK,8DAAZ1B,EAWH,IA1DH,iDAnBF,oFAgFE,WACE4B,KAAK+X,wBACL/X,KAAK0W,iBAAiBlI,OACvB,GAnFH,mCAqFE,WACMxO,KAAK6W,WACP7W,KAAKnB,QAAQmZ,eAAehY,KAAK6W,UAEpC,GAzFH,oBA2FE,WAAkC,IAAD,EAC/B,QAAgC7R,KAA5B,UAAAhF,KAAK4W,iBAAL,eAAgB1V,SAClB,MAAM,IAAIa,MAAM,4BAEhB,OAAO/B,KAAK4W,SAEf,GAjGH,2EAmGE,WAA6B9C,GAA7B,eAAA3U,EAAA,mEAEQ6K,IAAWsK,mBAAmBR,GAFtC,yCAGa,IAAIzH,IAAU,IAH3B,uBAKyBrM,KAAKnB,QAAQ2D,aAAa,iCAAkCsR,GALrF,kBAKUpS,EALV,kBAMSA,KAAQuW,eANjB,yCAOa,IAAI5L,IAAU,IAP3B,gCASW,IAAIA,IAAU3K,EAAOuW,eAAevR,IAAgBU,eAAe8Q,SAASrD,IAAI,IAAIxI,IAAU,IAAI6C,IAAI,MATjH,yCAWI9Q,GAAOwB,MAAP,KAAAxB,GAXJ,kBAYW,IAAIiO,IAAU,IAZzB,0DAnGF,sIAmHE,4BAAAlN,EAAA,+EAEyBa,KAAK2W,0BAA0BwB,WAFxD,cAEUzW,EAFV,yBAGW,IAAI2K,IAAU3K,IAHzB,uCAKItD,GAAOwB,MAAP,KAAAxB,GALJ,kBAMW,IAAIiO,IAAU,IANzB,yDAnHF,uHA6HE,WAAmB0H,EAAaD,GAAhC,uBAAA3U,EAAA,yDACEf,GAAO0B,KAAK,IAAZ1B,GACIga,EAAU,GACgB,UAA1BpY,KAAKwX,SAASa,QAHpB,gCAIoBrY,KAAKnB,QAAQyZ,wBAAwBtY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,eAAgBvY,KAAKwX,SAASgB,SAAU,CAACzE,IAJnJ,OAIIqE,EAJJ,+CAMoBpY,KAAKnB,QAAQ4Z,mBAAmBzY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,eAAgB,CAACxE,IANtH,QAMIqE,EANJ,kBASMM,EAAU,GAThB,UAWkC,UAA1B1Y,KAAKwX,SAASa,QAXtB,kCAYsBrY,KAAKnB,QAAQyZ,wBAAwBtY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,oBAAqBvY,KAAKwX,SAASgB,SAAU,CAACzE,IAZ1J,QAYM2E,EAZN,gDAcsB1Y,KAAKnB,QAAQ4Z,mBAAmBzY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,oBAAqB,CAACxE,IAd7H,QAcM2E,EAdN,kEAkBIA,EAAU,CACR,CAACxV,KAAM,iBAAkBC,MAAO,KAChC,CAACD,KAAM,6BAA8BC,MAAO,KAC5C,CAACD,KAAM,WAAYC,MAAO,MArBhC,eAwBQzB,EAAS0W,EAAQO,OAAOD,GACxBvH,EAAInR,KAAKiX,kBAAkBvV,GAzBnC,UA0BqB1B,KAAKsT,YAAYS,EAAK5C,GA1B3C,eA0BQvC,EA1BR,iBA2BmB5O,KAAKuT,YAAY3E,GA3BpC,eA2BEA,EAAKiB,IA3BP,iBA4BwB7P,KAAKkU,qBAAqBH,EAAKD,GA5BvD,eA4BElF,EAAKuF,SA5BP,yBA6BSvF,GA7BT,2DA7HF,2HA6JE,WAAoBkF,GAApB,8CAAA3U,EAAA,sEACuBa,KAAK4Y,qBAD5B,UACQ/X,EADR,OAEQuS,EAAQ,GAEV1R,EAAS,GACiB,UAA1B1B,KAAKwX,SAASa,QALpB,iCAMmBrY,KAAKnB,QAAQyZ,wBAAwBtY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,kBAAmBvY,KAAKwX,SAASgB,SAAU,IANpJ,OAMI9W,EANJ,gDAQmB1B,KAAKnB,QAAQ4Z,mBAAmBzY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,kBAAmB,IARvH,QAQI7W,EARJ,kBAWMgX,EAAU,GAXhB,UAakC,UAA1B1Y,KAAKwX,SAASa,QAbtB,kCAcsBrY,KAAKnB,QAAQyZ,wBAAwBtY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,uBAAwBvY,KAAKwX,SAASgB,SAAU,IAd5J,QAcME,EAdN,gDAgBsB1Y,KAAKnB,QAAQ4Z,mBAAmBzY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,uBAAwB,IAhB/H,QAgBMG,EAhBN,uCAqBI,IArBJ,2BAoBUG,EAAM,GACHxF,EAAQ,EAAGA,EAAMxS,EAAQwS,IAChCwF,EAAIhW,KAAK,KACTgW,EAAIhW,KAAK,KACTgW,EAAIhW,KAAK,KAEX6V,EAAQ7V,KAAK,CAACK,KAAM,iBAAkBC,MAAO0V,IA1BjD,QA6BQC,EAA6BpX,EAAO6S,MAAM,SAACwE,GAAD,MAA4B,oBAAdA,EAAK7V,IAAnB,IAAgDC,MAC1F6V,EAA4BtX,EAAO6S,MAAM,SAACwE,GAAD,MAA4B,mBAAdA,EAAK7V,IAAnB,IAA+CC,MACxF8V,EAA4BvX,EAAO6S,MAAM,SAACwE,GAAD,MAA4B,mBAAdA,EAAK7V,IAAnB,IAA+CC,MACxF+V,EAA6BR,EAAQnE,MAAM,SAACwE,GAAD,MAA4B,mBAAdA,EAAK7V,IAAnB,IAA+CC,MAKvFkQ,EAAQ,EArCnB,aAqCsBA,EAAQxS,GArC9B,wBAsCUsQ,EAAmB,CACvBE,eAAgByH,EAAgBzF,GAChC/B,cAAe0H,EAAe3F,GAC9B7B,oBAAqByH,EAAqB,EAAN5F,EAAU,GAC9C5B,mBAAoBwH,EAAqB,EAAN5F,EAAU,GAC7C3D,WAAYuJ,EAAqB,EAAN5F,EAAU,GACrCrE,SAAUiK,EAAqB,EAAN5F,EAAU,GACnCtE,kBAAmBkK,EAAqB,EAAN5F,EAAU,GAC5C3B,gBAAiBuH,EAAqB,EAAN5F,EAAU,GAC1C1B,eAAgBsH,EAAqB,EAAN5F,EAAU,GACzCzB,QAASqH,EAAqB,EAAN5F,EAAU,GAClCxB,eAAgBqH,EAAsB,EAAN7F,EAAU,GAC1CvB,2BAA4BoH,EAAsB,EAAN7F,EAAU,GACtDtB,SAAUmH,EAAsB,EAAN7F,EAAU,IAnD1C,oBAwD2BrT,KAAKsT,YAAYD,EAAOlC,GAxDnD,QAwDcvC,EAxDd,OAyDQwE,EAAMvQ,KAAK+L,GAzDnB,mDA2DQxQ,GAAOwB,MAAP,KAAAxB,GA3DR,QAqCsCiV,IArCtC,mDAiEUjU,QAAQ+Z,IACZ/F,EAAM/I,IAAN,uCAAU,WAAOuE,GAAP,eAAAzP,EAAA,6DACFkU,EAAQzE,EAAKpH,GADX,SAES,EAAK+L,YAAY3E,GAF1B,cAERA,EAAKiB,IAFG,gBAKc,EAAKqE,qBAAqBb,EAAOS,GAL/C,OAKRlF,EAAKuF,SALG,kDAAV,wDAlEN,2DA2EI/V,GAAOwB,MAAP,KAAAxB,GA3EJ,iCA6ESgV,GA7ET,2EA7JF,gIA6OE,WAA2BiB,EAAiBP,GAA5C,mBAAA3U,EAAA,yDACO2U,IAAY9J,IAAWsK,mBAAmBR,GADjD,8CAEW9O,GAFX,UAIMtD,EAAS,GACiB,UAA1B1B,KAAKwX,SAASa,QALpB,gCAMmBrY,KAAKnB,QAAQyZ,wBAAwBtY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,eAAgBvY,KAAKwX,SAASgB,SAAU,CAACnE,EAASP,IAN3J,OAMIpS,EANJ,+CAQmB1B,KAAKnB,QAAQ4Z,mBAAmBzY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,eAAgB,CAAClE,EAASP,IAR9H,QAQIpS,EARJ,sBAUQuQ,EAAIjS,KAAKiX,kBAAkBvV,GAVnC,UAWqB1B,KAAKyT,oBAAoBxB,GAX9C,eAWQnS,EAXR,yBAYSA,GAZT,iDA7OF,gIA4PE,4BAAAX,EAAA,yDACMuC,EAAS,GACiB,UAA1B1B,KAAKwX,SAASa,QAFpB,gCAGmBrY,KAAKnB,QAAQyZ,wBAAwBtY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,gBAAiBvY,KAAKwX,SAASgB,SAAU,IAHlJ,OAGI9W,EAHJ,8CAKmB1B,KAAKnB,QAAQ4Z,mBAAmBzY,KAAKwX,SAAStW,QAASlB,KAAKuY,qBAAqB,gBAAiB,IALrH,OAKI7W,EALJ,wCAOS2U,OAAO3U,EAAO,GAAGyB,QAP1B,iDA5PF,uHAsQE,WAAmB4Q,EAAae,EAAkBC,GAAlD,iBAAA5V,EAAA,6DACQqB,EAAUR,KAAKiV,aADvB,SAEuBjV,KAAKnB,QAAQua,kBAAkB5Y,EAAS,UAAWR,KAAKwX,SAAS9W,IAAK,CAACqT,GAAMe,EAAUC,EAAS/U,KAAKwX,SAAStW,SAFrI,cAEQQ,EAFR,gBAGQ1B,KAAK8W,oBAAoBtW,EAAQU,QAASQ,EAAOqD,QAHzD,iCAIS,GAJT,gDAtQF,6HA6QE,WAAoBgP,EAAagB,GAAjC,iBAAA5V,EAAA,6DACQqB,EAAUR,KAAKiV,aADvB,SAEuBjV,KAAKnB,QAAQua,kBAAkB5Y,EAAS,WAAYR,KAAKwX,SAAS9W,IAAK,CAACqT,EAAKgB,QAAU/P,EAAW,IAAKhF,KAAKwX,SAAStW,SAF5I,cAEQQ,EAFR,gBAGQ1B,KAAK8W,oBAAoBtW,EAAQU,QAASQ,EAAOqD,QAHzD,iCAIS,GAJT,gDA7QF,2FAoRE,SAA6B7B,GAC3B,IAAIxB,EAkBJ,GAjBI1B,KAAK0W,iBAAiB2C,IAAInW,GAC5BxB,EAAS1B,KAAK0W,iBAAiBlL,IAAItI,IAEL,UAA1BlD,KAAKwX,SAASa,SAChB3W,EAAS1B,KAAKwX,SAAS9W,IAAI6T,MAAK,SAAAxK,GAAC,MAAe,aAAXA,EAAEjH,MAAuBiH,EAAE7G,OAASA,CAAxC,OAE/BxB,EAAS1B,KAAKwX,SAAS9W,IAAI6T,MAAK,SAAAxK,GAAC,MAAe,aAAXA,EAAEjH,MAAuBiH,EAAE7G,OAASA,CAAxC,KAInCxB,EAAS1B,KAAKwX,SAAS9W,IAAI6T,MAAK,SAAAxK,GAAC,MAAe,aAAXA,EAAEjH,MAAuBiH,EAAE7G,OAASA,GAAQ,CAAC,OAAQ,QAAQqT,SAASxM,EAAEuP,gBAA5E,IAG/B5X,GACF1B,KAAK0W,iBAAiBzF,IAAI/N,EAAMxB,IAGhCA,EACF,OAAOA,EAEP,MAAM,IAAIK,MAAJ,+BAAkCmB,EAAlC,sBAET,GA5SH,qEAwTE,WAA+B2U,GAA/B,iEACE,IACMA,EAAM3T,QAAUgF,KAAWqQ,SAAW1B,EAAMvX,KAAKkZ,MAAQ3B,EAAMvX,KAAKmZ,KAAO5B,EAAMvX,KAAKO,OACxFb,KAAKlB,SAASsW,gBAAgBiB,OAAOwB,EAAMvX,KAAKmZ,KAAM,IAAIpN,IAAUwL,EAAMvX,KAAKO,QAASgX,EAAMvX,KAAKkZ,MAC1F3B,EAAM3T,QAAUgF,KAAWwQ,UAAY7B,EAAMvX,KAAKkZ,MAAQ3B,EAAMvX,KAAKmZ,KAAO5B,EAAMvX,KAAKO,OAChGb,KAAKlB,SAASuW,iBAAiBgB,OAAOwB,EAAMvX,KAAKmZ,KAAM,IAAIpN,IAAUwL,EAAMvX,KAAKO,QAASgX,EAAMvX,KAAKkZ,MAEpGpb,GAAO0B,KAAK,uBAAwB+X,EAApCzZ,EAEH,CAAC,MAAOwB,GACPxB,GAAOwB,MAAMA,EAAbxB,EACD,CAXH,gDAxTF,4DAAoC8P,GA+U9BoH,GAAK,IAAImB,GCxVTrY,GAASC,cAEFsb,GAAb,WAIE,aAAe,yBAHEC,WAGH,OAFNC,iBAEM,EACZ7Z,KAAK4Z,MAAQ/T,cACb7F,KAAK6Z,YAActE,IACpB,CAPH,oFASE,WAAgBrW,GAAhB,SAAAC,EAAA,sEACQa,KAAK8Z,oBAAoB5a,GADjC,YAEUA,EAAQsI,GAFlB,OAGS,IAHT,6BAIMxH,KAAK6Z,YAActE,KAJzB,kCAOMvV,KAAK6Z,YDyUJvE,GChVP,4CAUQtV,KAAK6Z,YAAY5a,YAVzB,iDATF,4EAsBE,WACEb,GAAO0B,KAAK,0BAAZ1B,GACA4B,KAAK6Z,YAAYE,UACjB/Z,KAAK4Z,MAAMG,SACZ,GA1BH,sBA4BE,WACE,OAAO/Z,KAAK6Z,WACb,GA9BH,wEAgCE,WAAkC3a,GAAlC,0FAEUc,KAAK4Z,MAAM3a,UAAUC,GAF/B,sDAIId,GAAOwB,MAAP,KAAAxB,GAJJ,wDAhCF,8DAyCM4b,GAAU,IAAIL,GAEPM,GAAmB,WAC9B,OAAOD,EACR,E,mBCjDYE,GAAmBC,aAAH,qKAMhBC,GAAoBD,aAAH,iIAMjBE,GAAgB,CACrBC,QADqB,SACbC,EADa,EAC8BP,GAA2C,OAAD,qHAAtExS,EAAsE,EAAtEA,GAAI5G,EAAkE,EAAlEA,QAASC,EAAyD,EAAzDA,OAAyD,kBAC1FmZ,EAAQpU,OAAO4U,WAAWC,aAAapE,OAAO7O,GAAK5G,EAASC,IAD8B,4CAElG,EACK6Z,SAJqB,SAIZH,EAJY,EAIsBP,GAA2C,OAAD,mHAA7DxS,EAA6D,EAA7DA,GAAI3G,EAAyD,EAAzDA,OAAyD,kBAClFmZ,EAAQpU,OAAO4U,WAAWG,cAActE,OAAO7O,GAAK3G,IAD8B,4CAE1F,GCjBU+Z,GAA4BT,aAAH,kIAMzBU,GAAiB,CACtBC,eADsB,SACPP,EADO,EACwBP,GAA6C,OAAD,iHAA5DxZ,EAA4D,EAA5DA,QAA4D,SACjFwZ,EAAQpU,OAAO4U,WAAWO,uBAAuBva,GADgC,oFAE/F,GCTUwa,GAAiCb,aAAH,qGAM9Bc,GAAiB,CACtB1K,mBADsB,SACHgK,EAAa5Z,EAAaqZ,GAA6C,OAAD,oHAChFA,EAAQpU,OAAO4U,WAAWlK,6BADsD,oFAE9F,GCTU4K,GAAef,aAAH,6JAqBZgB,IATkBhB,aAAH,mIACxBe,IAQwB,CACpB9K,MADoB,SACdmK,EADc,EACYP,GAAyC,OAAD,iHAAnDxS,EAAmD,EAAnDA,GAAmD,kBACrEwS,EAAQpU,OAAO4U,WAAWpJ,cAAc5J,IAD6B,4CAE7E,ICvBU4T,GAAcjB,aAAH,2YAyBXkB,GAAwBlB,aAAH,0JAUrBmB,GAAiBnB,aAAH,mLACvBe,GACAG,GACAD,IAQSG,GAAkBpB,aAAH,kKACxBe,GACAG,GACAD,IAcSI,IANwBrB,aAAH,qFAMMA,aAAH,0MACjCkB,KAQSI,GAAc,CACnB7M,KADmB,SACd2L,EADc,EACqBP,GAAwC,OAAD,mHAA3DxS,EAA2D,EAA3DA,GAAIhH,EAAuD,EAAvDA,QAAuD,kBAC5EwZ,EAAQpU,OAAO4U,WAAWpG,aAAaiC,OAAO7O,GAAKhH,IADyB,4CAEpF,EACK4S,MAJmB,SAIbmH,EAJa,EAIkBP,GAA0C,OAAD,iHAAzDxZ,EAAyD,EAAzDA,QAAyD,kBAC3EwZ,EAAQpU,OAAO4U,WAAWkB,cAAclb,IADmC,4CAEnF,EACKmb,WAPmB,SAORpB,EAAa5Z,EAAaqZ,GAA0C,OAAD,oHACrEA,EAAQpU,OAAO4U,WAAW5B,qBAD2C,oFAEnF,EACKgD,aAVmB,SAUNrB,EAVM,EAUiCP,GAAuD,OAAD,mHAA9E9H,EAA8E,EAA9EA,OAAQ1R,EAAsE,EAAtEA,QAAsE,kBACvGwZ,EAAQpU,OAAO4U,WAAWtG,qBAAqBmC,OAAOnE,GAAS1R,IADwC,4CAE/G,GCzEUqb,GAAb,8JACE,WACE,OAAO5B,KAAmBO,UAC3B,KAHH,GAAyCsB,KAwCnClW,GAAS,IAAIiW,GAAoB,CAErCE,MApC2B,IAAIC,IAAc,CAC7CC,aAAc,CACZC,MAAO,CACLC,OAAQ,CAAC,MAkCbC,UAjBqB,CACrB/P,UAZsB,IAAIgQ,IAAkB,CAC5CnZ,KAAM,YACNoZ,YAAa,+BACbC,UAH4C,SAGlCpZ,GACR,OAAOA,EAAMZ,UACd,EACDia,WAN4C,SAMjCrZ,GACT,OAAO,IAAIkJ,IAAUlJ,EACtB,IAKD+Y,MAAM,mDACDrB,IACAI,IACAQ,IACAN,IAELsB,SAAS,eACJpC,KASLqC,QAAS,CACP,cAAe/S,eACf,iBAAkBA,WAITgT,GAAkB,WAC7B,OAAO/W,EACR,E,qKCrDYgX,IAXeC,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,0BACjC,eAACC,GAAA,EAAD,2BAAaD,GAAb,IAAoBE,QAAS,CAAEC,OAAQJ,KADN,GAAPD,EAEzB,gBAAGM,EAAH,EAAGA,MAAH,oCACMC,KAAeC,SAAY,CAChCC,gBAAiBH,EAAMI,QAAQC,OAAOC,MACtCC,MAAO,sBACPC,UAAWR,EAAMS,QAAQ,GACzBC,SAAU,IALX,IAS6BhB,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,0BACrC,eAACC,GAAA,EAAD,2BAAaD,GAAb,IAAoBe,OAAK,EAACb,QAAS,CAAEC,OAAQJ,KADR,GAAPD,EAE7B,kBAAGM,EAAH,EAAGA,MAAH,wCACMC,KAAeU,OAAU,CAC9BJ,MAAOP,EAAMI,QAAQC,OAAOO,QAF7B,4BAIMX,KAAeC,SAAY,CAChCC,gBAAiBH,EAAMI,QAAQC,OAAOO,QALvC,MCTUC,IDkBcnB,aAAO,gBAAGC,EAAH,EAAGA,UAAcC,EAAjB,0BAChC,eAACC,GAAA,EAAD,2BAAaD,GAAb,IAAoBE,QAAS,CAAEC,OAAQJ,KADP,GAAPD,EAExB,gBAAGM,EAAH,EAAGA,MAAH,oCACMC,KAAeC,SAAY,CAChCC,gBAAiB,UACjBI,MAAO,sBACPO,SAAU,IACVJ,SAAUV,EAAMe,WAAWC,QAAQ,IACnCC,OAAQ,qBANT,ICpB6B,WAC9B,MAAoDC,mBAAS,IAAIhS,IAAU,IAA3E,oBAAOkE,EAAP,KAA2B+N,EAA3B,KACA,EAA8BD,oBAAS,GAAvC,oBAAOE,EAAP,KAAgBC,EAAhB,KACMC,EAAUxe,cAkBhB,OAhBAye,qBAAU,WACR,IAAMC,EAAc,SAAC5Z,GACnB,IAAM6Z,EAAe7Z,EAAOxC,WACxBsc,EAAY9Z,EACZ6Z,EAAahc,OAAS,IACxBic,EAAY,IAAIxS,IAAUuS,EAAaE,OAAOF,EAAahc,OAAS,EAAGgc,EAAahc,UAEtF4b,EAAWK,EAAUE,IAAI,GAAGrK,GAAG,IAC/B4J,EAAsBvZ,EACvB,EAED,OADA0Z,EAAQ/e,GAAGuJ,KAAY+V,0BAA2BL,GAC3C,WACLF,EAAQQ,IAAIhW,KAAY+V,0BAA2BL,EACpD,CACF,GAAE,CAACF,IAGF,eAACS,GAAA,EAAD,CAAKC,GAAI,CAAEC,GAAI,OAAQC,GAAI,QAA3B,SACE,gBAACC,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,WAAWC,WAAW,SAASC,QAAS,EAAvF,UACE,eAACL,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACE,eAAC6D,GAAD,CAAkBgD,MAAM,uBAAuBC,UAAU,MAAM/B,OAAK,EAApE,SACE,gBAACgC,GAAA,EAAD,CAAYC,QAAQ,UAAUZ,GAAI,CAAEa,cAAe,SAAUC,QAAS,eAAtE,UACE,eAAC,KAAD,CAAgBd,GAAI,CAClBzB,MAAO,OACPwC,GAAI,MACJC,UAAW5B,EAAU,gBAAkB,eACvCV,SAAU,UAEXtN,EAAmBhO,kBAI1B,eAAC+c,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACE,eAAC6D,GAAD,CAAkBgD,MAAM,UAAUC,UAAU,MAAM/B,OAAK,EAAvD,SACE,eAACsC,GAAA,EAAD,CAAMC,MAAO,SAAqCN,QAAQ,WAAWO,KAAK,kBAMrF,G,oBCjDKC,GAAO1D,YAAO,MAAPA,EACX,cAAGM,MAAH,+BAKIqD,GAAkB3D,YAAOiD,KAAPjD,EACtB,cAAGM,MAAH,gEAMWsD,GAA0B,SAAC1D,GACtC,OACE,eAACwD,GAAD,UACE,eAACG,GAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,GAAA,EAAD,UAEE,eAACJ,GAAD,CAAiBT,QAAQ,KAAzB,SACGrZ,IAAgBC,gBAM5B,E,0BC3BKka,GAAmBhE,YAAO,MAAPA,EACvB,cAAGM,MAAH,6LAYI2D,GAAkBjE,YAAO,MAAPA,EACtB,cAAGM,MAAH,mFAOW4D,GAAuB,SAAAhE,GAClC,IAAQiE,EAA2BjE,EAA3BiE,SAAaC,EAArB,aAAmClE,EAAnC,IAEA,OACE,eAAC8D,GAAD,2BAAsBI,GAAtB,aACE,eAACC,GAAA,EAAD,CAAWjD,SAAS,KAApB,SACE,eAAC6C,GAAD,UAAkBE,QAIzB,E,gBC/BKG,GAAoBtE,YAAO,MAAPA,EACxB,cAAGM,MAAH,6EAOWiE,GAAwB,SAAArE,GACnC,IAAQiE,EAA2BjE,EAA3BiE,SAAaC,EAArB,aAAmClE,EAAnC,IAEA,OAAO,eAACoE,GAAD,2BAAuBF,GAAvB,aAAmCD,IAC3C,ECHKK,GAAcC,IAAMC,mBAAmCvc,GAgBhDwc,GAAgC,SAACzE,GAC5C,MAA0BsB,mBAAuB,MAAjD,oBAAOze,EAAP,KAAc6hB,EAAd,KACA,EAA4BpD,mBAA2C,MAAvE,oBAAOqD,EAAP,KAAeC,EAAf,KACA,EAA8BtD,mBAAyB,MAAvD,oBAAOnf,EAAP,KAAgB0iB,EAAhB,KAEsB1hB,cACR2hB,oBAAsBF,EAEbnL,KACRsL,qBAAuBF,EAEtC,IAAM5H,EAAwB,CAC5ByH,WACA7hB,QACA8hB,SACAxiB,WAGF,OACE,eAACmiB,GAAYU,SAAb,CAAsB5e,MAAO6W,EAA7B,SAAuC+C,EAAMiE,UAEhD,ECvCK5iB,GAASC,cAQT2jB,GAAuBV,IAAMC,mBAA4Cvc,GAKlEid,GAA0B,WACrC,IAAMjI,EAAUsH,IAAMY,WAAWF,IAEjC,IAAKhI,EACH,MAAM,IAAIjY,MAAM,gDAGlB,OAAOiY,CACR,EAUYmI,GAAiC,SAACpF,GAC7C,MAAoCsB,mBAAuC,MAA3E,oBAAO+D,EAAP,KAAmBC,EAAnB,KACMC,ED7BsB,WAC5B,IAAMtI,EAAUsH,IAAMY,WAAWb,IAEjC,IAAKrH,EACH,MAAM,IAAIjY,MAAM,gDAGlB,OAAOiY,CACR,CCqBqBuI,GACdC,EAAgBvI,KAEdyH,EAAoBY,EAApBZ,OAAQxiB,EAAYojB,EAAZpjB,QAEhBwf,qBAAU,WACHgD,GACmBxhB,cACRuiB,YAEjB,GAAE,CAACf,IAEJhD,qBAAU,WACR,IAAKxf,EAAS,CAAC,IACPmY,EAAiBb,KACjB/O,EAAY4O,OAAM,OAAC1M,QAAyC,KAClE0N,EAAeuK,WAAWra,IAASgN,MAAK,SAAAxK,GAAC,OAAIA,EAAEvC,KAAOC,CAAb,KACzCrJ,GAAO0B,KAAK,WAAYuX,EAAeE,aAAvCnZ,EACD,CACF,GAAE,CAACc,IAEJ,IAAMwjB,EAASC,uBAAY,WACHziB,cACR0iB,eACdpc,OAAOqc,SAASC,QACjB,GAAE,IA6BH,GA3BApE,qBAAU,WAAO,IAAD,IACRvb,EAAQ,CACZ3C,QAAO,OAAEkhB,QAAF,IAAEA,GAAF,UAAEA,EAAQqB,cAAV,aAAE,EAAgB7hB,QACzBhC,UACAwjB,UAGFtkB,GAAO0B,KAAK,wBAAZ,OAAqC4hB,QAArC,IAAqCA,GAArC,UAAqCA,EAAQqB,cAA7C,aAAqC,EAAgB7hB,QAArD9C,GAEA,IAAMa,EAAS,uCAAG,sBAAAE,EAAA,0DACZD,EADY,wBAEdd,GAAO0B,KAAK,qBAAZ1B,GAFc,SAIZikB,EAAc,MAJF,SAKNG,EAAcvjB,UAAUC,GALlB,OAMZmjB,EAAclf,GANF,gDAQZ/E,GAAOwB,MAAP,KAAAxB,GARY,yDAAH,qDAaf,OADAa,IACO,WACLujB,EAAczI,SACf,CACF,GAAE,CAAC2H,EAAQxiB,EAASwjB,EAAQF,KAExBJ,EACH,OCxFA,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,UACE,eAACtC,GAAA,EAAD,2BAEF,eAAC,GAAD,ODsFJ,IAAM3c,EAAK,eACNif,GAGL,OACE,eAACJ,GAAqBD,SAAtB,CAA+B5e,MAAOA,EAAtC,SAA8C4Z,EAAMiE,UAEvD,EE1GqBgC,GAAtB,kGACE,SAAqB/gB,GACnB,IAAMghB,EAAiB,wBACvB,GAAIhhB,EAAM,CAER,IAAIiI,EAC4B,EAAhC,GAFAa,QAAQmY,IAAIjhB,GAEP+H,IAAWC,SAAShI,GAmBvBiI,EAAUjI,OAlBNA,EAAKiI,QACPA,EAAUjI,EAAKiI,QAEZ,UAAIjI,EAAKrC,aAAT,OAAI,EAAYsK,QACnBA,EAAUjI,EAAKrC,MAAMsK,QACZjI,EAAKkhB,cAEZjZ,EADEjI,EAAKkhB,cAAcvgB,OAAS,EACpBX,EAAKkhB,cAAc,GAAGjZ,QAEtB+Y,EAII,QADhB/Y,EAAUzF,KAAKC,UAAUzC,MAEvBiI,EAAU+Y,GAMhB,OAAI/Y,EAAQtH,OAAS,IACZsH,EAAQ4U,OAAO,EAAG,KAAO,MAE3B5U,CACR,CACD,OAAO+Y,CACR,KAjCH,KCCsBG,GAAtB,iGAEE,SAAoBxjB,GAClBwjB,EAAaC,SAASC,gBAAgBN,GAAWO,cAAc3jB,GAChE,GAJH,4BAKE,SAAsBsK,GACpBkZ,EAAaC,SAASC,gBAAgBpZ,EACvC,KAPH,KAAsBkZ,GACbC,c,iGCGIG,GAA0B,SAACzG,GACtC,IAAM0G,EAAaC,iBAAuB,MAuB1C,OArBAhF,qBAAU,WACR,IAAMiF,EAAa,CACjBrD,KAAM,IACNsD,QAASA,WAAQC,KACjBC,WAAY,EACZC,WAAY,OACZC,KAAMC,SAAMC,oBACZC,OAAQ,EACRC,MAAOza,aACP0a,MAAO,IAGLtH,EAAMtK,MAAQgR,EAAWa,UAC3Bb,EAAWa,QAAQC,UAAY,GACrB,IAAIC,UAAOf,EAAWa,SAC9BG,SAAS1H,EAAMtK,KAAMkR,GAAY3M,MAAK,WACtCjM,QAAQmY,IAAI,oBACb,IAEJ,GAAE,CAACnG,EAAMtK,OAGR,sBAAKiS,IAAKjB,GAEb,ECpBYkB,GAA+B,SAAC5H,GAAkB,IAAD,EACpD6H,EAA2B7H,EAA3B6H,QAASC,EAAkB9H,EAAlB8H,KAAMC,EAAY/H,EAAZ+H,QACjBC,EAAalf,cACb4Y,EAAUxe,cAEhBye,qBAAU,WACR,IAAMC,EAAc,SAACkG,GACnBC,EAAQD,EACT,EAED,OADApG,EAAQ/e,GAAGuJ,KAAY+b,oBAAqBrG,GACrC,WACLF,EAAQQ,IAAIhW,KAAY+b,oBAAqBrG,EAC9C,CACF,GAAE,CAACF,EAASqG,IAMb,OAAKC,EAAWnjB,UAQd,gBAACqjB,GAAA,EAAD,CAAQL,QAZU,WAClBA,GACD,EAU+BC,KAAMA,EAAM5G,SAAS,KAAnD,UACE,eAACiH,GAAA,EAAD,6BACA,gBAACC,GAAA,EAAD,WACE,eAACC,GAAA,EAAD,mDAGA,eAAC,KAAD,CAAKjG,GAAI,CAAEkG,GAAI,EAAGC,UAAW,UAA7B,SACE,eAAC,GAAD,CAAQ7S,KAAI,UAAEsS,EAAWnjB,iBAAb,aAAE,EAAsB2jB,cAbxC,8BAkBL,E,wCChDKC,GAAsB3I,YAAO4I,KAAP5I,EAC1B,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CACduI,OAAQvI,EAAMwC,QAAQ,GACtB,oBAAqB,CACnBjC,MAAOP,EAAMI,QAAQC,OAAOC,OAE9B,qBAAsB,CACpBC,MAAOP,EAAMI,QAAQC,OAAOC,OANhC,IAUWkI,GAAwB,WACnC,IAAMtO,EAAiBb,KACjBoP,EAAWvO,EAAewO,cAChC,EAA8BxH,mBAAyBhH,EAAeE,cAAtE,oBAAOrY,EAAP,KAAgB0iB,EAAhB,KAUA,OACEgE,EAAShjB,OAAS,EAChB,gBAAC4iB,GAAD,CAAqBzF,QAAQ,WAAWO,KAAK,QAA7C,UACE,eAACwF,GAAA,EAAD,CAAYte,GAAG,yBACf,eAACue,GAAA,EAAD,CACEC,QAAQ,uBACRxe,GAAG,uBACHrE,MAAK,OAAEjE,QAAF,IAAEA,OAAF,EAAEA,EAASsI,GAAGjF,WACnB0jB,SAhBa,SAAC/hB,GACpB,IAAMgiB,EAAkBN,EAASrR,MAAK,SAAAxK,GAAC,OAAIA,EAAEvC,GAAGjF,aAAe2B,EAAMiiB,OAAOhjB,KAArC,IACnC+iB,IACFtE,EAAWsE,GACX7O,EAAeuK,WAAWsE,GAE7B,EAMK,SAMGN,EAASvb,KAAI,SAAAN,GACZ,OACE,eAACqc,GAAA,EAAD,CAAgCjjB,MAAO4G,EAAEvC,GAAGjF,WAA5C,SAAyDwH,EAAE7G,MAA5C6G,EAAEvC,GAAGjF,WAEvB,SAIL,8BAGL,ECxCKge,GAAO1D,YAAO,MAAPA,EACX,cAAGM,MAAH,+BAIIqD,GAAkB3D,YAAOiD,KAAPjD,EACtB,cAAGM,MAAH,gEAKWkJ,GAAmB,SAACtJ,GAC/B,IAeyB7b,EAfnB8Y,EAAUiI,KAChB,EAAkCX,IAAMjD,UAAS,GAAjD,oBAAOiI,EAAP,KAAkBC,EAAlB,KAkBA,OACE,eAAC,GAAD,UACE,eAAC7F,GAAA,EAAD,CAAQC,SAAS,SAASjD,MAAM,UAAhC,SACE,gBAACkD,GAAA,EAAD,WACE,oBAAG4F,KAAK,qBAAR,SAA6B,sBAAKC,IAAK,uBAAwBC,IAAI,OAAOC,MAAM,SAChF,eAAC,GAAD,CAAiB5G,QAAQ,KAAzB,SACGrZ,IAAgBC,WAEnB,eAAC,GAAD,IACCqT,EAAQxZ,QACP,uCACE,eAACoc,GAAD,CAAkBuC,GAAE,6BAAW/B,KAAeC,SAAY,CAAEY,SAAU,SAAY2B,MAAO5F,EAAQxZ,QAASqf,UAAU,SAAS/B,OAAK,EAAlI,SACE,eAACsC,GAAA,EAAD,CAAMjB,GAAI,CAAEzB,MAAO,QAAS,kBAAmB,CAAEA,MAAO,UAAakJ,KAAM,eAAC,KAAD,IAAuBvG,OAhBvFnf,EAgB8G8Y,EAAQxZ,QAftIwJ,IAAW6c,0BAA0B3lB,EAAS,GAAI,IAe8F6e,QAAQ,eAErJ,eAAC+G,GAAA,EAAD,CAAQpJ,MAAM,UAAUqJ,QA1BV,WACxB/M,EAAQ0I,QACT,EAwBW,uBAKF,uCACE,eAACoE,GAAA,EAAD,CAAQpJ,MAAM,UAAUqJ,QApCX,WACvBR,GAAa,EACd,EAkCW,mBAGA,eAAC,GAAD,CAAa1B,KAAMyB,EAAWxB,QAASyB,EAAc3B,QA/BxC,WACvB2B,GAAa,EACd,aAoCF,E,oBC3DYS,GAAyB,SAACjK,GAAkB,IAAD,IAClDW,EAAQ,UACRJ,EAAkB,2BAEtB,GACO,YADCP,EAAMja,KAEV4a,EAAQ,UACRJ,EAAkB,uBAUtB,OAJIP,EAAMnd,OACRmL,QAAQmY,IAAIlZ,IAAWG,aAAa4S,EAAMnd,QAI1C,eAACqnB,GAAA,EAAD,UACE,eAAC/H,GAAA,EAAD,CAAKC,GAAI,CACPzB,MAAK,UAAEX,EAAMW,aAAR,QAAiBA,EACtBJ,gBAAe,UAAEP,EAAMO,uBAAR,QAA2BA,EAC1C4J,QAAS,OACT5B,UAAW,UAJb,SAME,eAACxF,GAAA,EAAD,UAAa/C,EAAM7S,aAI1B,E,4DCnCYid,GAAuB,WAClC,IAasBC,EAbtB,EAA4B/I,mBAA2B5V,KAAvD,oBAAO4e,EAAP,KAAeC,EAAf,KACM7I,EAAUxe,cAEVsnB,EAAY,SAACC,EAA6BC,GAC9ChJ,EAAQiJ,4BAA4BF,EAAWC,EAChD,EAcKE,EAAsB,SAACP,GAAD,OAAkC,SAACljB,GAC7D,IAAMujB,EAAS,2BAAQJ,GAAR,mBAAiBD,EAAOljB,EAAMiiB,OAAOyB,UACpDN,EAAUG,GACVF,EAAUF,EAAQI,EACnB,CAJ2B,EAM5B,OACE,eAACnI,GAAA,EAAD,CAAMC,WAAS,EAACE,eAAe,SAASC,WAAW,SAASP,GAAI,CAAE0I,GAAI,GAAtE,SACE,eAACvI,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,GAAI,GAAIC,GAAI,GAAvB,SACE,gBAACzI,GAAA,EAAD,CAAMC,WAAS,EAAf,UACE,eAACD,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,IAAE,EAAC3I,GAAI,CAAEe,GAAI,GAAxB,SACE,eAAC8H,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAOzI,UAAU,MAAME,WAAW,SAASC,QAAS,EAApD,UACE,eAACuI,GAAA,EAAD,CAAkBC,QAAS,eAACC,GAAA,EAAD,CACzBR,QAASP,EAAO3e,WAChBud,SAAU0B,EAAoB,gBAAmBtH,MAAM,gBACzD,gBAAC4H,GAAA,EAAD,CAAOzI,UAAU,MAAME,WAAW,SAAlC,UACE,eAACI,GAAA,EAAD,oBACA,eAACuI,GAAA,EAAD,CAAQT,QAASP,EAAO1e,SAAUsd,SAAU0B,EAAoB,cAChE,eAAC7H,GAAA,EAAD,6BAKR,eAACR,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACE,eAACiP,GAAA,EAAD,UACE,gBAACC,GAAA,EAAD,CAAOzI,UAAU,MAAME,WAAW,SAASC,QAAS,EAApD,UACE,gBAAC8F,GAAA,EAAD,CAAanF,KAAK,QAAQnB,GAAI,CAAEmJ,SAAU,SAA1C,UACE,eAACxC,GAAA,EAAD,CAAYte,GAAG,sBAAf,qBACA,eAACue,GAAA,EAAD,CACEC,QAAQ,sBACRxe,GAAG,gBACHrE,MAAOkkB,EAAOze,OACdyX,MAAM,UACN4F,SA9CS,SAAC/hB,GAC1B,IAAMujB,EAAS,2BAAQJ,GAAR,IAAgBze,OAAQ1E,EAAMiiB,OAAOhjB,QACpDmkB,EAAUG,GACVF,EAAUF,EAAQI,EACnB,EAqCe,SAOGjf,IAAc6B,KAAI,SAAAN,GAAC,OAClB,gBAACqc,GAAA,EAAD,CAAuBjjB,MAAO4G,EAAEjH,KAAhC,UAAuCiH,EAAE7G,KAAzC,SAAe6G,EAAEjH,KADC,SAKxB,eAACylB,GAAA,EAAD,CACE/gB,GAAG,SACHrE,MAAOkkB,EAAOte,OACdsX,MAAM,SACNN,QAAQ,WACRO,KAAK,QACLkI,aAAa,MACbvC,UAtDMmB,EAsDiB,SAtDgB,SAACljB,GACtD,IAAMujB,EAAS,2BAAQJ,GAAR,mBAAiBD,EAAOljB,EAAMiiB,OAAOhjB,QACpDmkB,EAAUG,GACVF,EAAUF,EAAQI,EACnB,kBA2DF,E,mBC/DKgB,GAAU,IAlBhB,WAGE,aAAe,yBAFEC,UAEH,EACZ1oB,KAAK0oB,KAAO,IAAIngB,GACjB,CALH,0CAOE,SAAO4E,GACL,IAAMC,EAAO,OAAGD,QAAH,IAAGA,IAAUE,UAAUC,SAChCnC,EAAOnL,KAAK0oB,KAAKld,IAAI4B,GAKzB,OAJKjC,IACHA,EAAO,IAAI+B,EAAWE,GACtBpN,KAAK0oB,KAAKzX,IAAI7D,EAASjC,IAElBA,CACR,KAfH,MAoBawd,GAAmB,WAC9B,OAAOF,EACR,ECnBqBG,GAAtB,gGACE,SAAmBtS,EAA0BlD,GAC3C,IAAKA,EACH,OAAOA,EAET,IAAM7F,EAASob,KAAmBppB,SAClC,EAAiCspB,qBAAUzV,GAAO,SAACxE,GAAD,OAAUA,EAAKC,cAAgB,GAAKtB,EAAO/B,MAAMmC,QAAUiB,EAAKC,YAAhE,IAAlD,oBAAOia,EAAP,KAAoBC,EAApB,KACIC,EAAmBD,EAGnBC,EAFA1S,EAAO3N,SACL2N,EAAO5N,WACEqgB,EAAUzS,QAAO,SAAAvM,GAAC,QAAMA,EAAEoK,UAAYpK,EAAEoK,SAAShC,eAAe+C,GAAG,EAAjD,IAElB6T,EAGTzS,EAAO5N,WACEogB,EAAYxS,QAAO,SAAAvM,GAAC,QAAMA,EAAEoK,UAAYpK,EAAEoK,SAAShC,eAAe+C,GAAG,EAAjD,IAEpB4T,EAGf,IAAMG,EAASL,EAAWM,UAAU5S,EAAO1N,OAAQogB,GACnD,OAAOJ,EAAWO,YAAY7S,EAAOvN,OAAQkgB,EAC9C,GAvBH,uBAyBE,SAAiBrgB,EAAgBwK,GAC/B,IAAKA,IAAUxK,EACb,OAAOwK,EAET,OAAQxK,GACN,KAAKJ,IAAcK,KAAaugB,KAAKtmB,KACnC,OAAOumB,mBACLjW,GACA,SAACxE,GAAD,mCAAgBA,EAAKiB,WAArB,aAAgB,EAAUa,kBAA1B,QAAwC,CAAxC,GACA,QAEJ,KAAKlI,IAAcK,KAAaygB,cAAcxmB,KAC5C,OAAOumB,mBACLjW,GACA,SAACxE,GAAD,OAAgBA,EAAKqB,YAAYS,UAAjC,GACA,QAEJ,KAAKlI,IAAcK,KAAaC,SAAShG,KACzC,QACE,OAAOsQ,EAEZ,GA9CH,yBAgDE,SAAmBmW,EAAcnW,GAC/B,IAAKA,IAAUmW,EACb,OAAOnW,EAET,IAAMoW,EAAgBD,EAAK9d,cAC3B,OAAO2H,EAAMkD,QAAO,SAAC1H,GAAD,OAClBA,EAAKQ,YAAYlH,eAAeuD,cAAc8K,SAASiT,IAAkB5a,EAAKO,aAAajH,eAAeuD,cAAc8K,SAASiT,EAD/G,GAGrB,KAxDH,K,2HCWMprB,GAASC,cAEForB,GAAb,WAKE,aAAe,yBAJEC,aAIH,OAHG3qB,oBAGH,OAFGuP,aAEH,EACZtO,KAAK0pB,QAAU/M,KACf3c,KAAKjB,eAAiBmB,cACtBF,KAAKsO,QAAUqa,KAAmBppB,QACnC,CATH,mFAWE,WAAewU,GAAf,mCAAA5U,EAAA,6DAA4BwqB,EAA5B,+BAAwD,eAAxD,kBAE4B3pB,KAAK0pB,QAAQE,MAAiC,CACpEA,MAAOtO,GACPuO,UAAW,CACTriB,GAAIuM,EAAIxR,YAEVunB,YAAaH,IAPnB,cAEUI,EAFV,gBASgC/pB,KAAK0pB,QAAQE,MAAiD,CACxFA,MAAOpO,GACPqO,UAAW,CACT3X,OAAQ6B,EACRvT,QAAO,UAAER,KAAKjB,eAAe2P,0BAAtB,aAAE,EAAwCxN,SAEnD4oB,YAAaH,IAfnB,cASUK,EATV,OAiBUpb,EAAOmb,EAAU9nB,KAAK2M,KAjBhC,6CAmBSA,GAnBT,IAoBMuF,SAAU6V,EAAc/nB,KAAK2Z,aAC7B5J,eAAgBhS,KAAKsO,QAAQ9C,MAAMmC,UArBzC,kCAwBIvP,GAAOwB,MAAP,KAAAxB,GAxBJ,0DAXF,wHAuCE,WAAmB2V,EAAae,EAAkBC,GAAlD,mBAAA5V,EAAA,sEACuBa,KAAK0pB,QAAQO,OAAkC,CAClEC,SAAUhQ,GACV2P,UAAW,CACTriB,GAAIuM,EAAIxR,WACR3B,QAASkU,EACTjU,OAAQkU,KANd,cACQrT,EADR,yBASSgI,QAAO,oBAAChI,EAAOO,YAAR,aAAC,EAAaqY,eAAd,WAThB,gDAvCF,6HAmDE,WAAoBvG,EAAagB,GAAjC,mBAAA5V,EAAA,sEACuBa,KAAK0pB,QAAQO,OAAoC,CACpEC,SAAU9P,GACVyP,UAAW,CACTriB,GAAIuM,EAAIxR,WACR1B,OAAQkU,KALd,cACQrT,EADR,yBAQSgI,QAAO,oBAAChI,EAAOO,YAAR,aAAC,EAAayY,gBAAd,WARhB,gDAnDF,2FA8DE,SAAqB9L,EAAmB4F,GACtC,GAAI,OAAC5F,QAAD,IAACA,MAAMuF,SACT,OAAO,EAGT,IAAMM,EAAcD,EAAY2V,GAAGvb,EAAKI,UAAYwF,EAAc5F,EAAKI,SAIvE,GAAIyF,EAAYpE,IAAIzB,EAAKG,mBACvB,OAAO,EAIT,GAAIH,EAAKqB,YAAYyE,GAAG,IAAIrI,IAAU,IAEpC,OADAuC,EAAKG,kBAAoB0F,GAClB,EAIT,IAAME,EAASF,EAAYhF,MAAMb,EAAKG,mBAChC6F,EAAehG,EAAK8C,gBAAgB5B,MAAM6E,GAAQ7E,MAAMpJ,IAAgBW,eAAewN,IAAIjG,EAAKqB,aAItG,OAHArB,EAAK+C,eAAiB/C,EAAK+C,eAAeuB,KAAK0B,GAE/ChG,EAAKG,kBAAoB0F,GAClB,CACR,KAxFH,KA2FM2V,GAAU,IAAIX,GAEPY,GAAiB,WAC5B,OAAOD,EACR,EC7GqBE,GAAtB,0GACE,SAA6B1b,GAC3B,OAAI,OAACA,QAAD,IAACA,KAAMuF,SAGHvF,EAAKuF,SAAShC,eAAerC,MAAMlB,EAAK+C,gBAAgBkD,IAAInO,IAAgBW,eAAeoI,MAAMb,EAAKuF,SAAS/B,YAF9G,IAAI/F,IAAU,EAGxB,GANH,sCASE,SAAgCuC,EAAmB7J,GACjD,OAAI6J,GAAQ7J,EAAOolB,GAAGvb,EAAKc,YAClB,IAAIrD,IAAU,GAEnBtH,EAAOwlB,IAAI3b,EAAKI,UACX,IAAI3C,IAAUuC,EAAKmB,cAErBhL,EAAO0K,MAAMb,EAAKc,YAAYmF,IAAIjG,EAAKI,SAASS,MAAMb,EAAKc,aAAaI,MAAMlB,EAAKmB,aAC3F,GAjBH,wCAmBE,SAAkCnB,EAAmB7J,GACnD,OAAI6J,GAAQ7J,EAAOolB,GAAGvb,EAAKc,YAClB,IAAIrD,IAAU,GAEnBtH,EAAOwlB,IAAI3b,EAAKI,UACX,IAAI3C,IAAUuC,EAAKmB,cAErBnB,EAAKmB,YACb,GA3BH,6BA6BE,SAAuBya,EAAe3Z,EAAuB1I,GAC3D,OAAOqiB,EAAG3V,IAAI,IAAIxI,IAAU,IAAI6C,IAAI2B,IAAgB4Z,cAActiB,EAAUkE,IAAUqe,YAAYC,UACnG,KA/BH,K,UCUaC,GAAmC,SAAC7N,GAAkB,IAAD,MAChE,EAAoCuE,IAAMjD,UAAS,GAAnD,oBAAOwM,EAAP,KAAmBC,EAAnB,KAEMC,EAAW,uCAAG,sBAAA5rB,EAAA,6DAClB2rB,GAAc,GADI,kBAGV/N,EAAMtH,aAHI,sDAKhB1K,QAAQmY,IAAR,MALgB,OAOlB4H,GAAc,GAPI,yDAAH,qDAUjB,OACE,eAACE,GAAA,EAAD,CACEC,QAASJ,EACTvK,KAAI,UAAEvD,EAAMuD,YAAR,QAAgB,QACpBP,QAAO,UAAEhD,EAAMgD,eAAR,QAAmB,YAC1BrC,MAAK,UAAEX,EAAMW,aAAR,QAAiB,UACtBwN,UAAWnO,EAAMmO,UACjBnE,QAASgE,EACTI,SAAUpO,EAAMoO,SAPlB,SASGpO,EAAMiE,UAGZ,EC5BYoK,GAAiC,SAACrO,GAC7C,MAAoCsB,oBAAkB,GAAtD,oBAAOgN,EAAP,KAAmBC,EAAnB,KACA,EAA8CjN,mBAAoB,IAAIhS,IAAU,IAAhF,oBAAOkf,EAAP,KAAwBC,EAAxB,KACA,EAAkCnN,mBAAiB,IAAnD,oBAAOoN,EAAP,KAAkBC,EAAlB,KACMne,EAASoe,mBAAQ,kBAAMhD,KAAmBppB,QAAzB,GAAmC,IACpD8X,EAAiBb,KAuCvB,OArCAkI,qBAAU,WACR,IAAI3Y,EAAWkN,aAAY,WAAO,IAAD,EACzBlO,EAASsS,EAAeuU,cAC9B,aAAI7O,EAAMnO,YAAV,OAAI,EAAYI,SAAU,CACxB,IAAIuc,EAAkB,IAAIlf,IAAU,GAQpC,GAPItH,EAAOsL,IAAI0M,EAAMnO,KAAKc,aACxB4b,GAAc,GACdC,EAAkBxO,EAAMnO,KAAKc,WAAWD,MAAM1K,KAE9CumB,GAAc,GACdC,EAAkBxO,EAAMnO,KAAKI,SAASS,MAAM1K,IAE1CwmB,EAAgBhB,IAAI,GAAI,CAC1BiB,EAAmBD,GACnB,IAAM9d,EAAWF,EAAOse,YAAYN,EAAgB7a,YAChDjD,EAASqe,SAAW,EACtBJ,EAAaje,EAASqe,SAAW,WAAare,EAASse,OAAS,UACvDte,EAASse,OAAS,EAC3BL,EAAaje,EAASse,OAAS,SAAWte,EAASue,QAAU,UACpDve,EAASue,QAAU,EAC5BN,EAAaje,EAASue,QAAU,UAAYve,EAASwe,UAAY,YACxDxe,EAASwe,UAAY,EAC9BP,EAAaje,EAASwe,UAAY,YAAcxe,EAASD,UAAY,YAErEke,EAAaje,EAASD,UAAY,WAErC,MACCge,EAAmB,IAAInf,IAAU,IACjCqf,EAAa,GAEhB,CACF,GAAE,KACH,OAAO,WACL7X,cAAc9N,EACf,CACF,GAAE,CAACgX,EAAMnO,KAAMrB,EAAQ8J,IAGtB,uCACE,gBAACyI,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,UACG2N,EAAa,UAAY,YAD5B,QAC+C,eAACrO,GAAA,EAAD,CAAS4C,MAAM,oGAAoGC,UAAU,MAA7H,SAAmI,eAAC,KAAD,CAAUhC,SAAS,eAEnMd,EAAMnO,KAGN,qCACG2c,EAAgBrW,GAAG,GAClB,gBAAC4K,GAAA,EAAD,CAAYC,QAAQ,YAApB,UACGwL,EAAgBhpB,WADnB,UAEE,eAACud,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAiBuC,QAAQ,SAASd,GAAI,CAAE+M,GAAI,GAA9E,SACGT,OAIL,eAAC3L,GAAA,EAAD,CAAYC,QAAQ,YAApB,iBAXJ,eAACoM,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,WAiBpD,E,8BC/DY0F,GAAqC,SAACtP,GACjD,MAA4BsB,mBAAiB,IAA7C,oBAAOxd,EAAP,KAAeyrB,EAAf,KACA,EAAgCjO,oBAAkB,GAAlD,oBAAO8M,EAAP,KAAiBoB,EAAjB,KACMC,EAAcnC,KAEdoC,EAAe,SAAC5rB,GACpByrB,EAAUzrB,GACV0rB,EAAYG,SAAS7rB,GAAU6rB,SAASpC,GAASqC,gBAAgB5P,EAAMnO,KAAKiD,eAAgBkL,EAAMnO,KAAKO,aAAahH,SAAU,GAAGxD,QAAQ,KAAK,MAAQqF,IAAWsK,mBAAmBzT,IAAW,IAAIwL,YAAUxL,GAAQwP,IAAI,GAC1N,EAEDqO,qBAAU,WACJ3B,EAAM6P,MAAM/H,MACd4H,EAAa,GAEhB,GAAE,CAAC1P,EAAM6P,QAEV,IAAMC,EAAc,WAClB9P,EAAM+P,SAAN,2BACK/P,EAAM6P,OADX,IAEE/H,MAAM,IAET,EAMKkI,EAAkB,uCAAG,4BAAA5tB,EAAA,sEAEjB4V,EAAU,IAAI1I,YAAUxL,GAAQiP,MAAM,IAAIzD,YAAU,IAAI6C,IAAI6N,EAAMnO,KAAKO,aAAahH,WAFnE,SAGjBqkB,EAAY/R,aAAasC,EAAMnO,KAAKpH,GAAIuV,EAAMnO,KAAKO,aAAa3H,GAAIuN,EAAQxS,YAH3D,OAIvBsqB,IAJuB,gDAMvBzJ,GAAa4J,aAAb,MANuB,yDAAH,qDAUxB,OACE,gBAAC/H,GAAA,EAAD,CAAQL,QAASiI,EAAahI,KAAM9H,EAAM6P,MAAM/H,KAAM5G,SAAS,KAAKiN,WAAS,EAA7E,UACE,eAAChG,GAAA,EAAD,oBACA,gBAACC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,mBACQrI,EAAMnO,KAAKQ,YAAYlH,eAD/B,eAC2D6U,EAAMnO,KAAKO,aAAajH,eADnF,OAGA,gBAACud,GAAA,EAAD,CAAayF,WAAS,EAAC/L,GAAI,CAAEkG,GAAI,GAAKtF,QAAQ,WAA9C,UACE,eAAC+F,GAAA,EAAD,CAAYmH,QAAQ,oBAApB,oBACA,eAACC,GAAA,EAAD,CACE1lB,GAAG,oBACHrE,MAAOtC,EACPolB,SA1BW,SAAC/hB,GACpBuoB,EAAavoB,EAAMiiB,OAAOhjB,MAC3B,EAyBSL,KAAK,SACLqqB,WAAS,EACTC,eAAgB,gBAACC,GAAA,EAAD,CAAgB1M,SAAS,QAAzB,cAAmC5D,EAAMnO,KAAKO,aAAalH,eAG/E,gBAACmd,GAAA,EAAD,WACA,wBADA,SAEQrI,EAAMnO,KAAKiD,eAAeqD,GAAG,GAAM,sDAAwBoV,GAASqC,gBAAgB5P,EAAMnO,KAAKiD,eAAgBkL,EAAMnO,KAAKQ,YAAYjH,SAAU,GAA7G,OAA4H,KAFvK,wDAKF,gBAACmlB,GAAA,EAAD,WACE,eAACxG,GAAA,EAAD,CAAQC,QAAS8F,EAAjB,oBACA,eAAC,GAAD,CAAiBvM,KAAK,SAAS5C,MAAM,UAAUjI,WAAYsX,EAAoB5B,SAAUA,EAAzF,0BAMP,EC3EK/sB,GAASC,cAEFkvB,GAAb,WAIE,aAAe,yBAHE7D,aAGH,OAFG3qB,oBAEH,EACZiB,KAAK0pB,QAAU/M,KACf3c,KAAKjB,eAAiBmB,aACvB,CAPH,0FASE,WAAsB4T,GAAtB,mCAAA3U,EAAA,yDAAgDwqB,EAAhD,+BAA4E,eAA5E,UAEUnpB,EAFV,OAEoBsT,QAFpB,IAEoBA,IAFpB,UAEgC9T,KAAKjB,eAAe2P,0BAFpD,aAEgC,EAAwCxN,WACpD8I,IAAWsK,mBAAmB9T,GAHlD,yCAIa,IAAI6L,IAAU,IAJ3B,uBAM4BrM,KAAK0pB,QAAQE,MAAqD,CACxFA,MAAOhP,GACPiP,UAAW,CACTrpB,WAEFspB,YAAaH,IAXnB,cAMUI,EANV,OAaU7R,EAAU6R,EAAU9nB,KAAK6Y,eAbnC,kBAcW5C,GAdX,yCAgBI9Z,GAAOwB,MAAP,KAAAxB,GAhBJ,kBAiBW,IAAIiO,IAAU,IAjBzB,0DATF,8DA+BM+d,GAAU,IAAImD,GC9BdnvB,GAASC,cAQFmvB,GAAsC,SAACzQ,GAClD,IAAM0Q,EAAkB9K,uBAAY,WAAO,IAAD,EACxC,iBAAI5F,EAAMnO,KAAKuF,gBAAf,OAAI,EAAqBhC,eAAe+C,GAAG,GAClCoV,GAASqC,gBAAgB5P,EAAMnO,KAAKuF,SAAShC,eAAgB4K,EAAMnO,KAAKO,aAAahH,SAAU,IAAIxD,QAAQ,KAAM,IAEnH,EACR,GAAE,CAACoY,EAAMnO,OAEV,EAA4ByP,mBAAiBoP,KAA7C,oBAAO5sB,EAAP,KAAeyrB,EAAf,KACA,EAAgCjO,oBAAkB,GAAlD,oBAAO8M,EAAP,KAAiBoB,EAAjB,KACMmB,EDeCtD,GCdDoC,EAAcnC,KAEdoC,EAAe,SAAC5rB,GACpByrB,EAAUzrB,GACV0rB,EAAYviB,IAAWsK,mBAAmBzT,IAAW,IAAIwL,IAAUxL,GAAQwP,IAAI,GAChF,EAEDqO,qBAAU,WACJ3B,EAAM6P,MAAM/H,MACd4H,EAAagB,IAEhB,GAAE,CAAC1Q,EAAM6P,MAAOa,IAEjB/O,qBAAU,WAAM,4CACd,4BAAAvf,EAAA,sEACwBuuB,EAAeC,kBADvC,OACQzV,EADR,OAEE9Z,GAAO0B,KAAK,mBAAoBoY,EAAQ3V,WAAxCnE,GAFF,4CADc,sBAKV2e,EAAM6P,MAAM/H,MALD,WAAD,wBAMZ8I,EAEH,GAAE,CAAC5Q,EAAM6P,MAAOc,IAEjB,IAAMb,EAAc,WAClB9P,EAAM+P,SAAN,2BACK/P,EAAM6P,OADX,IAEE/H,MAAM,IAET,EAMKkI,EAAkB,uCAAG,4BAAA5tB,EAAA,sEAEjB4V,EAAU,IAAI1I,IAAUxL,GAAQiP,MAAM,IAAIzD,IAAU,IAAI6C,IAAI6N,EAAMnO,KAAKO,aAAahH,WAFnE,SAGjBqkB,EAAY7R,cAAcoC,EAAMnO,KAAKpH,GAAIuN,EAAQxS,YAHhC,OAIvBsqB,IAJuB,gDAMvBzJ,GAAa4J,aAAb,MANuB,yDAAH,qDAUxB,OACE,gBAAC/H,GAAA,EAAD,CAAQL,QAASiI,EAAahI,KAAM9H,EAAM6P,MAAM/H,KAAM5G,SAAS,KAAKiN,WAAS,EAA7E,UACE,eAAChG,GAAA,EAAD,uBACA,gBAACC,GAAA,EAAD,WACE,gBAACC,GAAA,EAAD,wBACarI,EAAMnO,KAAKO,aAAajH,eADrC,0BAGA,gBAACud,GAAA,EAAD,CAAayF,WAAS,EAAC/L,GAAI,CAAEkG,GAAI,GAAKtF,QAAQ,WAA9C,UACE,eAAC+F,GAAA,EAAD,CAAYmH,QAAQ,oBAApB,oBACA,eAACC,GAAA,EAAD,CACE1lB,GAAG,oBACHrE,MAAOtC,EACPolB,SA1BW,SAAC/hB,GACpBuoB,EAAavoB,EAAMiiB,OAAOhjB,MAC3B,EAyBSL,KAAK,SACLqqB,WAAS,EACTC,eAAgB,gBAACC,GAAA,EAAD,CAAgB1M,SAAS,QAAzB,cAAmC5D,EAAMnO,KAAKO,aAAalH,eAG/E,gBAACmd,GAAA,EAAD,WACA,wBADA,6DAKF,gBAACkI,GAAA,EAAD,WACE,eAACxG,GAAA,EAAD,CAAQC,QAAS8F,EAAjB,oBACA,eAAC,GAAD,CAAiBvM,KAAK,SAAS5C,MAAM,UAAUjI,WAAYsX,EAAoB5B,SAAUA,EAAzF,0BAMP,EC/FYyC,GAA8B,SAAC7Q,GAC1C,OAAQA,EAAM6P,MAAM9pB,MAClB,KAAKkG,KAAe6kB,SAClB,OAAO,eAAC,GAAD,CAAoBjf,KAAMmO,EAAMnO,KAAMge,MAAO7P,EAAM6P,MAAOE,SAAU/P,EAAM+P,WACnF,KAAK9jB,KAAe8kB,QAClB,OAAO,eAAC,GAAD,CAAmBlf,KAAMmO,EAAMnO,KAAMge,MAAO7P,EAAM6P,MAAOE,SAAU/P,EAAM+P,WAClF,QACE,OAAO,+BAEZ,ECNYiB,GAA2B,SAAChR,GACvC,MAAwBsB,mBAAsBtB,EAAMnO,MAApD,oBAAOA,EAAP,KAAaof,EAAb,KACA,EAAwC3P,mBAAoB,IAAIhS,IAAU,IAA1E,oBAAO4hB,EAAP,KAAqBC,EAArB,KACM1B,EAAcnC,KACdhT,EAAiBb,KAEvBkI,qBAAU,WACRsP,EAAQjR,EAAMnO,KACf,GAAE,CAACmO,EAAMnO,OAEV8P,qBAAU,WACR,GAAI9P,EAAM,CACR,IAAMuf,EAAkB7D,GAAS8D,sBAAsBxf,GACvDsf,EAAgBC,GACZpR,EAAMsR,aACRtR,EAAMsR,cAActR,EAAMnO,QAAUmO,EAAMvc,SAAW2tB,EAAgBjZ,GAAG,GAE3E,MACCgZ,EAAgB,IAAI7hB,IAAU,IAC1B0Q,EAAMsR,aACRtR,EAAMsR,aAAY,EAGvB,GAAE,CAACzf,EAAMmO,IAEV2B,qBAAU,WACR,GAAI9P,EAAM,CACR,IAAMuf,EAAkB7D,GAAS8D,sBAAsBxf,GACvDsf,EAAgBC,GACZpR,EAAMsR,aACRtR,EAAMsR,cAActR,EAAMnO,QAAUmO,EAAMvc,SAAW2tB,EAAgBjZ,GAAG,GAE3E,MACCgZ,EAAgB,IAAI7hB,IAAU,IAC1B0Q,EAAMsR,aACRtR,EAAMsR,aAAY,EAGvB,GAAE,CAACzf,EAAMmO,IAEV2B,qBAAU,WACR,IAAI3Y,EAAWkN,aAAY,WACzB,IAAMlO,EAASsS,EAAeuU,cAC9B,GAAIhd,GACc4d,EAAY8B,qBAAqB1f,EAAM7J,GAC1C,CACX,IAAMwpB,EAAa,eACd3f,GAELof,EAAQO,EACT,CAEJ,GAAE,KACH,OAAO,WACL1a,cAAc9N,EACf,CACF,GAAE,CAAC6I,EAAM4d,EAAanV,IAEvB,IAA0BlP,EAO1B,OACE,sCARwBA,EASJ4U,EAAM5U,SARrByG,EAGE0b,GAASqC,gBAAgBsB,EAAcrf,EAAKQ,YAAYjH,SAAUA,GAFhE,MAUZ,E,oBC1EYqmB,GAA0B,SAACzR,GAAkB,IAAD,YACjD0R,EAAU5R,YAAO6R,KAAP7R,EAAe,cAAGM,MAAH,MAAgB,CAC7CwJ,MAAO,GACP5hB,OAAQ,GACRuY,gBAAiB,QACjBc,OAAQ,kBAJqB,IAMzBuQ,EAAY9R,YAAO6R,KAAP7R,EAAe,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CAC/CwJ,MAAO,GACP5hB,OAAQ,GACRuY,gBAAiB,QACjBc,OAAO,aAAD,OAAejB,EAAMI,QAAQqR,KAAK,MAJT,IAM3BC,EAAWnjB,IAEjB,OACE,gBAAC4T,GAAA,EAAD,CAAMC,WAAS,EAACG,WAAW,SAASC,QAAS,EAA7C,UACE,eAACL,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACE,eAAC+V,GAAA,EAAD,CACEC,QAAQ,WACRC,aAAc,CAAEC,SAAU,SAAUC,WAAY,SAChDC,aACE,eAACR,EAAD,CAAWjI,IAAG,UAAE3J,EAAMnO,YAAR,aAAE,EAAYO,aAAajH,eAAgBue,IAAKoI,EAASO,WAAT,UAAoBrS,EAAMnO,YAA1B,aAAoB,EAAYO,aAAa/G,WAJ/G,SAOE,eAACqmB,EAAD,CAAS/H,IAAG,UAAE3J,EAAMnO,YAAR,aAAE,EAAYQ,YAAYlH,eAAgBue,IAAKoI,EAASO,WAAT,UAAoBrS,EAAMnO,YAA1B,aAAoB,EAAYQ,YAAYhH,eAG3G,eAACkX,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACGgE,EAAMkO,QACL,uCACE,eAACkB,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,SAC7C,eAACwF,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,YAG/C,uCACE,gBAAC7G,GAAA,EAAD,CAAYC,QAAQ,YAApB,4BACQhD,EAAMnO,YADd,aACQ,EAAYQ,YAAYlH,kBAEhC,gBAAC4X,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,6BACSX,EAAMnO,YADf,aACS,EAAYO,aAAajH,yBAO7C,E,UClCK9J,I,OAASC,eAETgxB,GAAmBxS,YAAOoK,KAAPpK,EACvB,gBAAGM,EAAH,EAAGA,MAAH,MAAgB,CACd+J,QAAS/J,EAAMwC,QAAQ,GACvB2P,WAAYnS,EAAMwC,QAAQ,GAC1BrC,gBAAiB,cAHnB,IAWWiS,GAAgC,SAACxS,GAAkB,IAAD,sCAC7D,EAAsCsB,mBAA0B,CAC9Dvb,KAAMkG,KAAe8kB,QACrBjJ,MAAM,IAFR,oBAAO2K,EAAP,KAAoBC,EAApB,KAIA,EAAgCpR,oBAAkB,GAAlD,oBAAOqR,EAAP,KAAiBC,EAAjB,KACA,EAAgCtR,oBAAkB,GAAlD,oBAAOuR,EAAP,KAAiBvB,EAAjB,KACA,EAAsChQ,oBAAkB,GAAxD,oBAAOwR,EAAP,KAAoBC,EAApB,KACA,EAAwBzR,mBAAsBtB,EAAMnO,MAApD,oBAAOA,EAAP,KACM6P,GADN,KACgBxe,eACVusB,EAAcnC,KACdhT,EAAiBb,KACjBtX,EAAUmY,EAAeE,aAC/B,EAAoC8G,mBAAoB,IAAIhS,IAAU,IAAtE,oBAAO0jB,EAAP,KAAmBC,EAAnB,KACA,EAAwB3R,mBAAiB,GAAzC,qBAAO4R,GAAP,MAAaC,GAAb,MAGAxR,qBAAU,WAAO,IAAD,EACE,MAAZ3B,EAAMnO,MACRxQ,GAAO0B,KAAP,iCAA4Bid,EAAMnO,YAAlC,aAA4B,EAAYpH,IAAxCpJ,GACA0xB,IAAiB/S,EAAMnO,QAAUmO,EAAMvc,SAAxB,oBAAoCuc,EAAMnO,KAAKuF,gBAA/C,aAAoC,EAAqBhC,eAAe+C,GAAG,UAA3E,WAEf4a,GAAe,GAGjB,QAA6B9qB,KAAzB,UAAA+X,EAAMnO,YAAN,eAAYmD,UAAwB,CACtC,IAAIA,EAAWgL,EAAMnO,KAAKmD,SAASrB,WAC/BqB,EAAW,EACS,KAAlBgL,EAAMnO,KAAKpH,IAA+B,kBAAX,OAAPtI,QAAO,IAAPA,OAAA,EAAAA,EAASgE,MACnCgtB,GAAQ,GAINA,IAFFne,EAAWA,EAAW,GAAK,GAAK,IACjB,EACL,EAEAA,GAIZme,GAAQ,EAEX,MACCA,GAAQ,EAEX,GAAE,CAACnT,EAAMnO,KAAMmO,EAAMvc,QAAnB,OAA4BtB,QAA5B,IAA4BA,OAA5B,EAA4BA,EAASgE,OAExCwb,qBAAU,WACR,IAAI3Y,EAAWkN,aAAY,WAEzB,IAAMkd,EAAc9Y,EAAeE,aACxCoY,IAAc5S,EAAMnO,QAAUmO,EAAMvc,WAAa2vB,GAAqC,iBAArBA,EAAYjtB,QAAoD,iBAArBitB,EAAYjtB,MAA+C,KAAlB6Z,EAAMnO,KAAKpH,IAC5J,GAAE,KACH,OAAO,WACLqM,cAAc9N,EACf,CACF,GAAE,CAACgX,EAAMnO,KAAMmO,EAAMvc,QAAS6W,IAE/BqH,qBAAU,WACR,GAAI3B,EAAMnO,KAAM,CACd,IAAM7J,EAASsS,EAAeuU,cACxBmE,EAAazF,GAAS8F,yBAAyBxhB,EAAM7J,GAC3DirB,EAAcD,EACf,MACCC,EAAc,IAAI3jB,IAAU,GAE/B,GAAE,CAACuC,EAAMyI,EAAgB0F,IAE1B2B,qBAAU,WACR,IAAI3Y,EAAWkN,aAAY,WAEzB,GAAI8J,EAAMnO,KAAM,CACd,IAAM7J,EAASsS,EAAeuU,cACxBmE,EAAazF,GAAS8F,yBAAyBxhB,EAAM7J,GAC3DirB,EAAcD,EACf,MACCC,EAAc,IAAI3jB,IAAU,GAG/B,GAAE,KACH,OAAO,WACLwH,cAAc9N,EACf,CACF,GAAE,CAAC6I,EAAMyI,IAIV,IAiBMgZ,GAAmB,WACvB,OAAKtT,EAAMnO,KAGJ0b,GAASqC,gBAAgB5P,EAAMnO,KAAKmB,aAAcgN,EAAMnO,KAAKQ,YAAYjH,SAAU,GAFjF,GAGV,EAQKmoB,GAAmB,SAACnoB,GACxB,OAAKyG,EAGE0b,GAASqC,gBAAgBoD,EAAYnhB,EAAKQ,YAAYjH,SAAUA,GAF9D,GAGV,EAQKooB,GAAiB,SAACpoB,GACtB,OAAOqoB,KAAKC,MAAM,IAPD,SAACtoB,GAClB,IAAIuoB,EAAMJ,GAAiBnoB,GAE3B,OADAuoB,EAAMA,EAAI/rB,QAAQ,KAAM,IACjBgsB,WAAWD,EACnB,CAG0BE,CAAWzoB,GApBjB,WACnB,IAAIuoB,EAAKL,KAET,OADAK,EAAMA,EAAI/rB,QAAQ,KAAM,IACjBgsB,WAAWD,EACnB,CAgBiDG,IAAgB,EACjE,EA6BKC,GAAqB,uCAAG,sBAAA3xB,EAAA,mEAEtB4d,EAAMnO,KAFgB,gCAGlB4d,EAAY7R,cAAcoC,EAAMnO,KAAKpH,GAAI,KAHvB,sDAM1B4b,GAAa4J,aAAb,MAN0B,wDAAH,qDAU3B,OACE,uCACE,gBAAC+D,GAAA,EAAD,CAAWC,iBAAe,EAA1B,UACE,eAACC,GAAA,EAAD,CAAkB9R,GAAI,CAAE7B,gBAAiB,4BAA8B4T,WAAY,eAAC,KAAD,IAAnF,SACE,gBAAC5R,GAAA,EAAD,CAAMC,WAAS,EAACE,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,eAACL,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACE,eAAC,GAAD,CAAQkS,SAAUlO,EAAMnO,KAAMA,KAAMmO,EAAMnO,SAE5C,eAAC0Q,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,IAAE,EAACvI,WAAS,EAACG,WAAW,SAAnC,SACE,gBAACJ,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,IAAE,EAACvI,WAAS,EAACE,eAAe,eAAeD,UAAU,MAAMG,QAAS,EAA/E,UACE,eAACL,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACIgE,EAAMnO,KAMN,uCACE,gBAACkR,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,6BACSX,EAAMnO,YADf,aACS,EAAYQ,YAAYlH,eADjC,cAC6D,eAAC8U,GAAA,EAAD,CAAS4C,MAAM,6CAA6CC,UAAU,MAAtE,SAA4E,eAAC,KAAD,CAAUhC,SAAS,eAE5J,gBAACiC,GAAA,EAAD,CAAYC,QAAQ,YAApB,UACGuQ,GAAiB,GADpB,MAC2BD,QAG3B,eAACc,GAAA,EAAD,CAAapR,QAAQ,UAAUqR,IAAKb,GAAe,KACnD,gBAACzQ,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,UACG6S,GAAe,GADlB,iBAdF,uCACE,eAACpE,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,SAC7C,eAACwF,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,cAkBnD,gBAACrH,GAAA,EAAD,CAAMvG,MAAI,EAAV,UACE,gBAAC+G,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,oBACW,eAACV,GAAA,EAAD,CAAS4C,MAAM,0EAA0EC,UAAU,MAAnG,SAAyG,eAAC,KAAD,CAAUhC,SAAS,eAErId,EAAMnO,KAGN,eAACkR,GAAA,EAAD,CAAYC,QAAQ,YAApB,SACGhD,EAAMnO,KAAKiB,IACV,qCA5HfkN,EAAMnO,MAASmO,EAAMnO,KAAKiB,IAG3BkN,EAAMnO,KAAKiB,IAAI6E,GAAG,IAAIrI,IAAU,IAC3B,IAEF0Q,EAAMnO,KAAKiB,IAAI8a,SAAS,GAAK,IAL3B,MA+HW,6CARJ,eAACwB,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,YAejD,gBAACrH,GAAA,EAAD,CAAMvG,MAAI,EAAV,UACE,gBAAC+G,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,6BACSX,EAAMnO,YADf,aACS,EAAYO,aAAajH,eADlC,cAC8D,eAAC8U,GAAA,EAAD,CAAS4C,MAAM,4BAA4BC,UAAU,MAArD,SAA2D,eAAC,KAAD,CAAUhC,SAAS,eAE1Id,EAAMnO,KAGN,+BACA,eAACkR,GAAA,EAAD,CAAYC,QAAQ,YAApB,SArIXhD,EAAMnO,KAGJ0b,GAASqC,gBAAgB5P,EAAMnO,KAAKqB,YAAa8M,EAAMnO,KAAKO,aAAahH,SAAU,GAFjF,QAiIO,eAACgkB,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,aAWjD,eAACrH,GAAA,EAAD,CAAMvG,MAAI,EAAV,SACE,eAAC,GAAD,CAAenK,KAAMmO,EAAMnO,mBAMjB,kBAAX,OAAP1P,QAAO,IAAPA,OAAA,EAAAA,EAASgE,MAA2B,eAAC,KAAD,CAAOmuB,SAAS,QAAhB,yFAA+G,KACjI,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,KAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAY,gBAAC,KAAD,CAAO6pB,SAAS,UAAhB,2DAAwE,8CAAxE,kEAAwK,KACnN,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,KAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAY,gBAAC,KAAD,CAAO6pB,SAAS,UAAhB,sBAAmC,0CAAnC,4BAAyF,KAEpI,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,MAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAa,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,uBAAiC,6CAAjC,kCAAuF,+CAAvF,wBAA8I,KAE1L,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,MAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAa,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,qCAA+C,8CAA/C,yBAAsG,KAElJ,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,MAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAa,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,qCAA+C,8CAA/C,uBAAoG,KAEhJ,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,MAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAa,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,qCAA+C,8CAA/C,qBAAkG,KAE9I,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,MAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAa,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,qCAA+C,8CAA/C,qBAAkG,KAE9I,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,MAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAa,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,qCAA+C,8CAA/C,0BAAuG,KAEnJ,kBAAX,OAAPnyB,QAAO,IAAPA,OAAA,EAAAA,EAASgE,OAA+C,OAAf,OAAL6Z,QAAK,IAALA,GAAA,UAAAA,EAAOnO,YAAP,eAAapH,IAAc,gBAAC,KAAD,CAAO6pB,SAAS,OAAhB,qCAA+C,8CAA/C,kCAA+G,KAE9KpB,GAAO,EAAK,gBAAC,KAAD,CAAOoB,SAAS,OAAhB,uBAAiC,6CAAjC,2EAAgI,4CAAcpB,GAAd,YAAhI,OAA+K,KAE7L,eAACqB,GAAA,EAAD,CAAkBnS,GAAI,CAAE7B,gBAAiB,2BAA4BiU,GAAI,GAAzE,SACE,gBAACjS,GAAA,EAAD,CAAMC,WAAS,EAACE,eAAe,SAASC,WAAW,SAASC,QAAS,EAArE,UACE,gBAACL,GAAA,EAAD,CAAMvG,MAAI,EAACoG,GAAI,CAAEe,GAAI,GAArB,UACE,gBAACsR,GAAA,EAAD,CAAMC,UAAU,OAAOjL,KAAI,oBAAEzJ,EAAMnO,YAAR,aAAE,EAAYQ,YAAY/G,WAA1B,QAAiC,IAAK8d,OAAO,SAAShH,GAAI,CAAEuS,OAAQ,UAAWzR,QAAS,OAAQP,WAAY,UAAvI,4BACQ3C,EAAMnO,YADd,aACQ,EAAYQ,YAAYlH,eADhC,OACqD,eAAC,KAAD,CAAe2V,SAAS,aAE7E,gBAAC2T,GAAA,EAAD,CAAMC,UAAU,OAAOjL,KAAI,oBAAEzJ,EAAMnO,YAAR,aAAE,EAAYO,aAAa9G,WAA3B,QAAkC,IAAK8d,OAAO,SAAShH,GAAI,CAAEuS,OAAQ,UAAWzR,QAAS,OAAQP,WAAY,UAAxI,4BACQ3C,EAAMnO,YADd,aACQ,EAAYO,aAAajH,eADjC,OACsD,eAAC,KAAD,CAAe2V,SAAS,gBAGhF,eAACyB,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,IAAE,EAACvI,WAAS,EAACG,WAAW,SAAnC,SACE,gBAACJ,GAAA,EAAD,CAAMvG,MAAI,EAACwG,WAAS,EAACE,eAAe,eAAeD,UAAU,MAAMG,QAAS,EAA5E,UACE,eAACL,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,GAAI,GAAIC,GAAI,EAAG4J,GAAI,EAAGC,cAAY,EAA7C,SACE,gBAACvC,GAAD,CAAkBtP,QAAQ,WAA1B,UACE,gBAACD,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,oBACGX,EAAMnO,YADT,aACG,EAAYQ,YAAYlH,eAD3B,8BAGA,gBAACgX,GAAA,EAAD,CAAKC,GAAI,CAAEc,QAAS,OAAQP,WAAY,UAAxC,UACI3C,EAAMnO,KAGN,eAACkR,GAAA,EAAD,CAAYX,GAAI,CAAEwH,MAAO,QAAUkL,QAAM,EAAzC,SACE,eAAC,GAAD,CAASjjB,KAAMmO,EAAMnO,KAAMzG,SAAU,GAAI3H,QAASuc,EAAMvc,QAAS6tB,YAAaA,MAHhF,eAAClC,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,SAM/C,eAACzH,GAAA,EAAD,CAAKC,GAAI,CAAE+M,GAAI,GAAf,SACE,eAAC,GAAD,CAAiBnM,QAAQ,YAAYO,KAAK,QAAQ7K,WAAYqb,GAAuB3F,UAAWyE,EAAhG,6BAON7S,EAAMvc,QAUN,uCACE,eAAC8e,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,GAAI,GAAIC,GAAI,EAAG4J,GAAI,EAAGC,cAAY,EAA7C,SACE,gBAACvC,GAAD,CAAkBtP,QAAQ,WAA1B,UACE,gBAACD,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,oBACCX,EAAMnO,YADP,aACC,EAAYO,aAAajH,eAD1B,aAGA,gBAACgX,GAAA,EAAD,CAAKC,GAAI,CAAEc,QAAS,OAAQP,WAAY,UAAxC,UACI3C,EAAMnO,KAGN,eAACkR,GAAA,EAAD,CAAYX,GAAI,CAAEwH,MAAO,QAAUkL,QAAM,EAAzC,SAzLP,SAAC1pB,GAA8B,IAAD,EAC/C,OAAI,UAAC4U,EAAMnO,YAAP,OAAC,EAAYuF,SAGVmW,GAASqC,gBAAgB5P,EAAMnO,KAAKuF,SAAShC,eAAgB4K,EAAMnO,KAAKO,aAAahH,SAAUA,GAF7F,GAGV,CAqL4B2pB,CAAW,MAHd,eAAC3F,GAAA,EAAD,CAAUC,UAAU,OAAOrnB,OAAQ,GAAI4hB,MAAM,SAM/C,eAAC3J,GAAA,EAAD,CACA4C,MAAM,wCACNC,UAAU,SAFV,SAGA,eAACiH,GAAA,EAAD,CAAQ/G,QAAQ,YAAYO,KAAK,QAAQnB,GAAI,CAAE+M,GAAI,GAAKnF,QA7KpD,WAC1B0I,EAAe,2BACVD,GADS,IAEZ1sB,KAAMkG,KAAe6kB,SACrBhJ,MAAM,IAET,EAuK6GsG,UAAW0E,EAAjG,gCAON,eAACvQ,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,GAAI,GAAIC,IAAE,EAAC5I,GAAI,CAAEc,QAAS,OAAQP,WAAY,UAAzD,SACE,eAAC1C,GAAA,EAAD,CACI4C,MAAM,wCACNC,UAAU,SAFd,SAGA,eAACiH,GAAA,EAAD,CAAQ/G,QAAQ,YAAYO,KAAK,QAAQ4K,WAAS,EAACnE,QAhM5C,WACzB0I,EAAe,2BACVD,GADS,IAEZ1sB,KAAMkG,KAAe8kB,QACrBjJ,MAAM,IAET,EA0LmGsG,UAAWuE,EAA3F,0BArCJ,eAACpQ,GAAA,EAAD,CAAMvG,MAAI,EAAC+O,GAAI,GAAIC,GAAI,EAAG4J,GAAI,EAA9B,SACE,gBAACtC,GAAD,CAAkBtP,QAAQ,WAA1B,UACE,eAACD,GAAA,EAAD,CAAYC,QAAQ,QAAQrC,MAAM,iBAAlC,2BAGA,eAACoJ,GAAA,EAAD,CAAQ/G,QAAQ,YAAYO,KAAK,QAAQ4K,WAAS,EAACC,UAAWpO,EAAMnO,KAAMmY,QApKlE,WAC1BtI,EAAQsT,yBAAwB,EACjC,EAkKmB,8CA4CfhV,EAAMnO,MACL,eAAC,GAAD,CAAYA,KAAMmO,EAAMnO,KAAMge,MAAO4C,EAAa1C,SAAU2C,MAInE,EC1XKrxB,GAASC,cAOF2zB,GAA4B,SAACjV,GACxC,MAAkCsB,oBAAkB,GAApD,oBAAO4T,EAAP,KAAkBC,EAAlB,KACA,EAAgC7T,mBAAwBtB,EAAM3J,OAA9D,oBAAO+e,EAAP,KAAiBC,EAAjB,KACA,EAA0B/T,mBAAwBtB,EAAM3J,OAAxD,oBAAOA,EAAP,KAAcif,EAAd,KACA,EAA4BhU,mBAA2B5V,KAAvD,oBAAO6N,EAAP,KAAegc,EAAf,KACM7T,EAAUxe,cACVuiB,EAAgBvI,KAwDtB,OAtDAyE,qBAAU,WACJ3B,EAAM3J,MACR8e,GAAa,GAEbA,GAAa,GAEfE,EAAYrV,EAAM3J,MACnB,GAAE,CAAC2J,EAAM3J,QAEVsL,qBAAU,WACR2T,EAASzJ,GAAW2J,YAAYjc,EAAQ6b,GACzC,GAAE,CAACA,EAAU7b,IAEdoI,qBAAU,WACR,IAAMC,EAAc,SAAC6I,EAA6BC,GAChD6K,EAAU7K,EACX,EAED,OADAhJ,EAAQ/e,GAAGuJ,KAAYupB,wBAAyB7T,GACzC,WACLvgB,GAAO0B,KAAK,cAAemJ,KAAYupB,wBAAvCp0B,GACAqgB,EAAQQ,IAAIhW,KAAYupB,wBAAyB7T,EAClD,CACF,GAAE,CAACF,IAEJC,qBAAU,WACR,IAAM+T,EAAc,SAAC7jB,GACnB,GAAIujB,GAAYvjB,EAAM,CACpB,IAAMyE,EAAQ8e,EAASO,WAAU,SAAA3oB,GAAC,OAAIA,EAAEvC,KAAOoH,EAAKpH,EAAlB,IAClC,GAAI6L,GAAS,EAAG,CAEd,IAAMsf,EAAY,aAAOR,GACzBQ,EAAatf,GAAb,eACKzE,GAELwjB,EAAYO,EACb,MAECP,EAAY,CAACxjB,GAAF,oBAAWujB,IAEzB,CACF,EACKS,EAAe,uCAAG,WAAOprB,EAAY3G,EAAmBL,GAAtC,eAAArB,EAAA,sEACHqjB,EAAchI,WAAWpG,aAAa5M,EAAIuV,EAAMvc,SAD7C,OAChBoO,EADgB,OAEtB6jB,EAAY7jB,GAFU,2CAAH,0DAMrB,OAFA6P,EAAQ/e,GAAGuJ,KAAY4pB,YAAaD,GACpCnU,EAAQ/e,GAAGuJ,KAAY6pB,aAAcF,GAC9B,WACLx0B,GAAO0B,KAAK,cAAemJ,KAAY4pB,YAAvCz0B,GACAqgB,EAAQQ,IAAIhW,KAAY4pB,YAAaD,GACrCnU,EAAQQ,IAAIhW,KAAY6pB,aAAcF,EACvC,CACF,GAAE,CAACnU,EAAS0T,EAAU3P,EAAezF,EAAMvc,WAEvCyxB,GAAa7e,GAASA,EAAMxQ,QAAU,EAEvC,eAAC0c,GAAA,EAAD,CAAMvG,MAAI,EAAS+O,GAAI,GAAIC,GAAI,EAA/B,SACE,eAAC,GAAD,CAAO7d,QAAQ,kBAAkBpH,KAAK,aADzB,KAOjB,eAACwc,GAAA,EAAD,CAAMC,WAAS,EAACC,UAAU,MAAMC,eAAe,SAASC,WAAW,SAASC,QAAS,EAArF,SACGsS,EACC,qCACG,CAAC,EAAG,EAAG,GAAG5nB,KAAI,SAACgJ,GAAD,OACb,eAACiM,GAAA,EAAD,CAAMvG,MAAI,EAAa+O,GAAI,GAAIC,GAAI,GAAnC,SACE,eAAC,GAAD,KADc1U,EADH,MAOjB,4CACGD,QADH,IACGA,OADH,EACGA,EAAO/I,KAAI,SAAC8G,GAAD,OACV,eAACmO,GAAA,EAAD,CAAMvG,MAAI,EAAY+O,GAAI,GAAIC,GAAI,GAAlC,SACE,eAAC,GAAD,CAAcvnB,QAASuc,EAAMvc,QAASoO,KAAMuC,KAD9BA,EAAE3J,GADR,OASrB,EC3GKurB,GAAclW,YAAO,MAAPA,CAAc,CAChCkH,WAAY,uCACZpG,UAAW,oBACXqV,aAAc,MACdjuB,OAAQ,IACR4hB,MAAO,OACPO,QAAS,GACTxB,OAAQ,IAGGuN,GAAO,WAClB,OACE,uCACI,eAAC,KAAD,CAAO5B,SAAS,UAAhB,wCACF,gBAAC0B,GAAD,WACI,eAACjT,GAAA,EAAD,CAAYC,QAAQ,KAAKmT,MAAM,OAAOxV,MAAM,gBAAgByV,WAAS,EAArE,4BAGA,gBAACrT,GAAA,EAAD,CAAYoT,MAAM,OAAOrV,SAAS,QAAQH,MAAM,gBAAgBO,SAAS,KAAKkV,WAAS,EAAvF,4EACiE,wBADjE,kDAOT,EChBYC,GAAkB,WAAO,IAAD,EAC7BpZ,EAAUiI,KACV8H,EAAYsJ,aAAsC9X,GAAiB,CACvEsO,UAAW,CACTrpB,QAASwZ,EAAQxZ,SAEnBspB,YAAa,iBAGTlqB,EAAQmqB,EAAUnqB,MAExB,OAAIA,EAEA,eAAC0f,GAAA,EAAD,CAAMvG,MAAI,EAAS+O,GAAI,GAAIC,GAAI,EAA/B,SACE,eAAC,GAAD,CAAO7d,QAAStK,EAAMsK,QAASpH,KAAK,aADvB,KAOjB,uCACA,eAAC,GAAD,IACA,eAACoe,GAAA,EAAD,CAAW/B,GAAI,CAAEoS,GAAI,EAAG+B,GAAI,GAAKrV,SAAS,KAA1C,SAEE,gBAACqB,GAAA,EAAD,CAAMC,WAAS,EAACI,QAAS,EAAGF,eAAe,SAASC,WAAW,SAA/D,UAEE,eAAC,GAAD,IACA,eAAC,GAAD,CAAUlf,QAASwZ,EAAQxZ,QAAS4S,MAAK,UAAE2W,EAAU9nB,YAAZ,aAAE,EAAgBmR,eAKlE,E,UCtCKmgB,GAAajS,IAAMkS,YAAW,SAClCzW,EACA2H,GAEA,OAAO,eAAC+O,GAAA,EAAD,aAAOjU,UAAU,KAAKkF,IAAKA,GAAS3H,GAC5C,IAEY2W,GAAqC,WAChD,MAAwBrV,oBAAS,GAAjC,oBAAOwG,EAAP,KAAaC,EAAb,KACMrG,EAAUxe,cAEhBye,qBAAU,WACR,IAAMC,EAAc,SAACkG,GACnBC,EAAQD,EACT,EAED,OADApG,EAAQ/e,GAAGuJ,KAAYyqB,yBAA0B/U,GAC1C,WACLF,EAAQQ,IAAIhW,KAAYyqB,yBAA0B/U,EACnD,CACF,GAAE,CAACF,EAASqG,IAEb,IAAM+H,EAAc,WAClB/H,GAAQ,EACT,EAED,OACE,gBAACG,GAAA,EAAD,CACEJ,KAAMA,EACN8O,oBAAqBJ,GACrBK,aAAW,EACXhP,QAASiI,EACTgH,MAAO,CAAEC,OAAQ,MALnB,UAOE,eAAC5O,GAAA,EAAD,0BACA,eAACC,GAAA,EAAD,UACE,eAACC,GAAA,EAAD,8DAIF,eAACkI,GAAA,EAAD,UACE,eAACxG,GAAA,EAAD,CAAQC,QAAS8F,EAAanP,MAAM,UAApC,uBAMP,EC7CYqW,GAAoB,WAC/B,IAAM1c,EAAiBb,KACjBiI,EAAUxe,cACV2pB,EAAQyJ,aAAgCrY,GAAgC,CAC5E8O,YAAa,iBAiBf,OAdApL,qBAAU,WACR,IAAI3Y,EAAWkN,YAAW,sBAAC,8BAAA9T,EAAA,sEACnByqB,EAAMoK,UADa,OAEzB,UAAIpK,EAAM3nB,YAAV,OAAI,EAAYsO,qBACRxL,EAAS6kB,EAAM3nB,KAAKsO,mBAC1BkO,EAAQwV,8BAA8BlvB,GACtCsS,EAAeuU,cAAgB7mB,GALR,2CAOxB,KACH,OAAO,WACL8O,cAAc9N,EACf,CACF,IAGC,8BAGH,ECvBYmuB,GAA0B,WACrC,MAAwB5S,YAAe,GAAvC,oBAAOuD,EAAP,KAAaC,EAAb,KAcA,OACE,qCACE,gBAACG,GAAA,EAAD,CACEJ,KAAMA,EACND,QAZc,SAAC1gB,EAAciwB,GAClB,kBAAXA,GACFrP,GAAQ,EAEX,EASK,kBAAgB,qBAChB,mBAAiB,2BAJnB,UAME,eAACI,GAAA,EAAD,CAAa1d,GAAG,qBAAhB,SACG,eAEH,gBAAC2d,GAAA,EAAD,WACE,eAAC,KAAD,CAAOkM,SAAS,OAAhB,2EACA,wBACA,gBAACjM,GAAA,EAAD,CAAmB5d,GAAG,2BAAtB,6YAEA,wBAAK,wBAFL,gIAMF,gBAAC8lB,GAAA,EAAD,WACE,eAACxG,GAAA,EAAD,CAAQN,KAAK,qBAAb,sBACA,eAACM,GAAA,EAAD,CAAQC,QAlCI,WAClBjC,GAAQ,EACT,EAgCqCqI,WAAS,EAAvC,0BAOT,ECzCYiH,GAAiB,SAACrX,GAE7B,OADAqG,GAAaC,SAAWgR,cAEtB,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,IACA,eAAC,GAAD,IACA,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAAC,GAAD,OAEF,eAAC,GAAD,MAGL,ECfKC,GAAazX,YAAO,MAAPA,CAAA,iJAKQ0X,EALR,UA4BJC,GAnBO,WACpB,IAAMC,EAAenT,IAAMqK,SAAQ,kBAAMhP,IAAN,GAAyB,IAG5D,OADAtQ,IAAUqoB,OAAO,CAAEC,eAAgB,MAEjC,eAACL,GAAD,UACE,eAAC,IAAD,CAAkBM,SAAU,EAA5B,SACE,eAACC,EAAA,EAAD,CAAgBjvB,OAAQ6uB,EAAxB,SACE,eAAC,GAAD,UACE,eAAC,GAAD,UACE,eAAC,GAAD,aAOb,ECvBcK,GAZS,SAACC,GACnBA,GAAeA,aAAuBpqB,UACxC,8BAAqBqM,MAAK,YAAkD,IAA/Cge,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOD,GACPE,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAQL,EACT,GAEJ,E,oBCiBc5X,GArBDkY,aAAY,CAExBnX,WAAY,CACVoX,WAAY,CAAC,OAAQ,SAASC,KAAK,KACnCC,GAAI,CAAEF,WAAY,CAAC,cAAcC,KAAK,OAExChY,QAAS,CACPkY,QAAS,CACPC,KAAM,WAERC,UAAW,CACTD,KAAM,WAER91B,MAAO,CACL81B,KAAME,KAAIC,SCdhBC,IAASC,OACP,gBAACC,EAAA,EAAD,CAAe7Y,MAAOA,GAAtB,UAEE,eAAC8Y,EAAA,EAAD,IACA,eAAC,GAAD,OAEFC,SAASC,cAAc,UAMzBrB,I,gHCpBsB9qB,EAAtB,6FACE,SAAgB7G,GACd,MAAwB,kBAAVA,GAAsBA,aAAiBizB,MACtD,GAHH,gCAKE,SAA0BjzB,GACxB,OAAK6G,EAAWC,SAAS9G,KAGN,OAAVA,QAA4B6B,IAAV7B,GAAwC,KAAjBA,EAAM6J,OAEzD,GAXH,6BAaE,SAAuB7J,EAAgBkzB,GACrC,OAAOrsB,EAAWsK,mBAAmBnR,IAAUA,IAAUkzB,CAC1D,GAfH,qBAiBE,SAAeC,GACb,OAAO,IAAIl3B,SAAQ,SAACC,GAAD,OAAa+G,WAAW/G,EAASi3B,EAAjC,GACpB,GAnBH,0BAwCE,SAAoBr0B,GAClB,OAAOwC,KAAKC,UAAUzC,EAAM,KAAM,EACnC,GA1CH,mEA4CE,WAA4BoG,GAA5B,iFACgBkK,MAAMlK,GADtB,uCAC4BkuB,QAD5B,2CA5CF,2EAgDE,SAAcC,EAAaC,GACzB,OAAOjG,KAAKkG,MAAMlG,KAAKvc,UAAYwiB,EAAMD,EAAM,GAAKA,EACrD,GAlDH,oBAoDE,SAAcG,EAASC,GAErB,OAAOnyB,KAAKC,UAAUiyB,KAAQlyB,KAAKC,UAAUkyB,EAC9C,KAvDH,KAAsB5sB,EAqBb6sB,eAAiB,SAACnG,EAAoBzjB,GAC3C,OAAIyjB,GACEzjB,EAAYyjB,EAAI9tB,OACZ,GAAN,OAAU8tB,EAAI5R,OAAO,EAAG7R,GAAxB,OAGGyjB,CACR,EA5BmB1mB,EA8Bb6c,0BAA4B,SAAC6J,EAAoBoG,EAA0BC,GAChF,GAAIrG,GACyBoG,EAAmBC,EACrBrG,EAAI9tB,OAC3B,MAAM,GAAN,OAAU8tB,EAAI5R,OAAO,EAAGgY,GAAxB,cAA+CpG,EAAI5R,OAAO4R,EAAI9tB,OAASm0B,EAAgBrG,EAAI9tB,SAG/F,OAAO8tB,CACR,C,kICtBUsG,EAAb,kLACE,SAA6BnS,GAC3B7kB,KAAKi3B,KAAKhuB,IAAYyqB,yBAA0B7O,EACjD,GAHH,qCAIE,SAAwBA,GACtB7kB,KAAKi3B,KAAKhuB,IAAY+b,oBAAqBH,EAC5C,GANH,2CAOE,SAA8B9f,GAC5B/E,KAAKi3B,KAAKhuB,IAAY+V,0BAA2Bja,EAClD,GATH,yCAUE,SAA4ByiB,EAA6BC,GACvDznB,KAAKi3B,KAAKhuB,IAAYupB,wBAAyBhL,EAAWC,EAC3D,GAZH,6BAaE,SAAgBjgB,EAAY3G,EAAmBL,GAC7CR,KAAKi3B,KAAKhuB,IAAY4pB,YAAarrB,EAAI3G,EAAQL,EAChD,GAfH,8BAgBE,SAAiBgH,EAAY3G,EAAmBL,GAC9CR,KAAKi3B,KAAKhuB,IAAY6pB,aAActrB,EAAI3G,EAAQL,EACjD,GAlBH,4BAmBE,SAAeoO,GACb5O,KAAKi3B,KAAKhuB,IAAYiuB,WAAYtoB,EACnC,KArBH,GAAmCuoB,KAwB7B1Y,EAAU,IAAIuY,EAEP/2B,EAAa,WACxB,OAAOwe,CACR,C,sTC5CW2Y,E,4GAAAA,K,UAAAA,E,mBAAAA,M,KAKL,IAqFKC,EArFUC,EAAtB,WAME,WAAYx0B,EAAkBsG,GAA4B,yBALzCmuB,WAKwC,OAHzDxU,YAGyD,OAFzDyU,SAAgB,GAGdx3B,KAAKu3B,MAAQz0B,EACb9C,KAAKy3B,aAAaruB,EACnB,CATH,sCAwBE,WACE,OAAOpJ,KAAKu3B,KACb,GA1BH,0BA8BE,SAAqBt1B,GAAmB,IAAD,OACjCA,IACFjC,KAAK+iB,OAAS9gB,EAAK8gB,OAAS/iB,KAAK03B,cAAcz1B,EAAK8gB,aAAU/d,EAC1D/C,EAAKu1B,UAAYltB,MAAMC,QAAQtI,EAAKu1B,WACtCv1B,EAAKu1B,SAASG,SAAQ,SAACn3B,GACrB,EAAKg3B,SAAS30B,KAAK,EAAK60B,cAAcl3B,GACvC,KAGAR,KAAKw3B,WACRx3B,KAAKw3B,SAAW,GAEnB,IA1CH,qBAWE,SAAcv1B,GAEZ,QADAA,EAAuB,kBAATA,EAAoBA,EAAO,CAAC,GAC7Bs1B,OACX,KAAKH,EAAWQ,IACd,OAAO,IAAIC,EAAU51B,GACvB,KAAKm1B,EAAWU,QACd,OAAO,IAAIC,EAAc91B,GAK9B,KAtBH,KA6Ca41B,EAAb,kDAGE,WAAYzuB,GAA4B,IAAD,8BACrC,cAAMguB,EAAWQ,IAAKxuB,IAHxB4uB,cAEuC,EAErC,EAAK5uB,KAAKA,GAF2B,CAGtC,CANH,wCAQE,SAAKnH,GACCA,IACFjC,KAAKg4B,SAAW/1B,EAAK+1B,SAExB,GAZH,2BAcE,SAAwB/1B,GACtB,OAAO,IAAId,EAAiBc,EAC7B,KAhBH,GAA+Bq1B,GAmBlBS,EAAb,kDAIE,WAAY3uB,GAAgC,IAAD,8BACzC,cAAMguB,EAAWU,QAAS1uB,IAJ5B6uB,aAG2C,IAF3C7tB,eAE2C,EAEzC,EAAKhB,KAAKA,GAF+B,CAG1C,CAPH,wCASE,SAAKnH,GACCA,IACFjC,KAAKi4B,QAAUh2B,EAAKg2B,QACpBj4B,KAAKoK,UAAYnI,EAAKmI,UAEzB,GAdH,2BAgBE,SAAwBnI,GACtB,OAAO,IAAIN,EAAqBM,EACjC,KAlBH,GAAmCq1B,I,SAqBvBD,K,UAAAA,E,mBAAAA,M,KAKL,IAAea,EAAtB,WAME,WAAYp1B,EAAyBsG,GAAgC,yBALpDmuB,WAKmD,OAHpE/vB,QAGoE,OAFpEtG,aAEoE,EAClElB,KAAKu3B,MAAQz0B,EACb9C,KAAKm4B,SAAS/uB,EACf,CATH,sCAwBE,WACE,OAAOpJ,KAAKu3B,KACb,GA1BH,sBA4BE,SAAiBt1B,GACXA,IACFjC,KAAKwH,GAAKvF,EAAKuF,GACfxH,KAAKkB,QAAUe,EAAKf,QAEvB,IAjCH,qBAWE,SAAce,GAEZ,QADAA,EAAuB,kBAATA,EAAoBA,EAAO,CAAC,GAC7Bs1B,OACX,KAAKH,EAAWQ,IACd,OAAO,IAAIz2B,EAAiBc,GAC9B,KAAKm1B,EAAWU,QACd,OAAO,IAAIn2B,EAAqBM,GAKrC,KAtBH,KAoCad,EAAb,kDAGE,WAAYiI,GAAmC,IAAD,8BAC5C,cAAMiuB,EAAkBO,IAAKxuB,IAH/B9H,gBAE8C,EAE5C,EAAK8H,KAAKA,GAFkC,CAG7C,CANH,wCAQE,SAAKnH,GACCA,IACFjC,KAAKsB,WAAaW,EAAKX,WAE1B,KAZH,GAAsC42B,GAezBv2B,EAAb,kDACE,WAAYyH,GAAuC,uCAC3CiuB,EAAkBS,QAAS1uB,EAClC,CAHH,uBAA0C8uB,GC7IpC95B,EAASC,cAWF+5B,EAAb,kDAGE,WAAYC,EAA8BC,EAAWC,GAAa,IAAD,8BAC/D,cAAMD,EAAMC,IAHGx5B,oBAEgD,EAE/D,EAAKA,eAAiBs5B,EACtB,EAAK34B,GAAG,WAAW,SAACC,EAAUwE,GAC5B/F,EAAO0B,KAAK,0BAA2BH,EAAKwE,EAA5C/F,GACA,IAAQo5B,EAAarzB,EAAQxD,OAAO,GAA5B62B,SACR,EAAKgB,YAAYhB,EAClB,IACD,EAAK93B,GAAG,cAAc,SAACC,EAAUwE,GAC/B/F,EAAO0B,KAAK,6BAA8BH,EAAKwE,EAA/C/F,GACA,EAAKq6B,mBACL,EAAK15B,eAAe6jB,cACrB,IACD,EAAKljB,GAAG,kBAAkB,SAACC,EAAUwE,GACnC/F,EAAO0B,KAAK,iCAAkCH,EAAKwE,EAAnD/F,GACA,IAAM65B,EAAU9zB,EAAQ,GACpB8zB,GAAWA,EAAQT,UACrB,EAAKgB,YAAYP,EAAQT,SAE5B,IAnB8D,CAoBhE,CAvBH,qCAyBE,WACE,OAAO,gDACR,GA3BH,gBA6BE,SAAGtzB,EAAwBw0B,GACzB,OAAO,0DAASx0B,EAAOw0B,EACxB,GA/BH,iBAiCE,SAAIx0B,EAAwBw0B,GAC1B,OAAO,2DAAUx0B,EAAOw0B,EACzB,GAnCH,yBAqCE,SAAYlB,GACV,IAAKA,IAAaA,EAAS,GACzB,MAAM,IAAIz1B,MAAM,mBAGlB,IADA,IAAM42B,EAA0C,GACvCtlB,EAAQ,EAAGA,EAAQmkB,EAAS50B,OAAQyQ,IAAS,CACpD,IAAMnS,EAAUs2B,EAASnkB,GACzBslB,EAAgB91B,KAAK,IAAIlB,EAAqB,CAC5C6F,GAAI6L,EAAM9Q,WACVrB,QAASA,IAEZ,CACD,IAAMwgB,EAAS,IAAIqW,EAAc,CAC/BhV,OAAQ4V,EAAgB,GACxBnB,SAAUmB,EACVV,QAASj4B,KAAKi4B,QACd7tB,WAAW,IAAIR,MAAOkM,YAExB9V,KAAKjB,eAAe4iB,UAAUD,EAC/B,GAxDH,2BA0DE,WACE,IAAMnW,EAAWvL,KAAKjB,eAAe65B,YACjCrtB,GAAYA,aAAoBwsB,IAClCxsB,EAASnB,WAAY,IAAIR,MAAOkM,UAChC9V,KAAKjB,eAAe85B,kBAAkBttB,GAEzC,GAhEH,kEAkEE,sBAAApM,EAAA,4KAESa,KAAKulB,KAFd,gDAlEF,+HAuEE,mDAAApmB,EAAA,qEAA8BmB,EAA9B,yBAA8BA,EAA9B,iCACS,IAAIlB,SAAQ,SAAC05B,EAAKC,GACvB,EAAKr5B,GAAG,cAAc,WACpBq5B,EAAI,qCACL,IAED,EAAKC,kBAAkB,CAAE34B,OAAQ,qBAAsBM,OAAQL,IAAQ0W,MAAK,SAACiiB,GAC3E,EAAKC,gBACLJ,EAAIG,EACL,IAAEE,OAAM,SAACpvB,GACRgvB,EAAIhvB,EACL,GACF,KAZH,2CAvEF,2HAsFE,mDAAA5K,EAAA,qEAA0BmB,EAA1B,yBAA0BA,EAA1B,iCACS,IAAIlB,SAAQ,SAAC05B,EAAKC,GACvB,EAAKr5B,GAAG,cAAc,WACpBq5B,EAAI,qCACL,IAED,EAAKC,kBAAkB,CAAE34B,OAAQ,mBAAoBM,OAAQL,IAAQ0W,MAAK,SAACiiB,GACzE,EAAKC,gBACLJ,EAAIG,EACL,IAAEE,OAAM,SAACpvB,GACRgvB,EAAIhvB,EACL,GACF,KAZH,2CAtFF,2HAqGE,sBAAA5K,EAAA,0LArGF,2DAAqCi6B,KCZ/Bh7B,EAASC,cAEF8B,EAAb,WAGE,WAAYk4B,GAA+B,yBAF1Bt5B,oBAEyB,EACxCiB,KAAKjB,eAAiBs5B,CACvB,CALH,0CAOE,SAAOn5B,GACL,IAAM+4B,EAAUj4B,KAAKjB,eAAes6B,kBAC9B74B,EAAUR,KAAKjB,eAAe2P,mBAC9B4pB,EAAO,CACXgB,OAAQp6B,EAAQwI,aAChBuwB,WAEIM,EAAO/3B,EAAU,CAAE+4B,YAAa/4B,EAAQU,cAAY8D,EACpDpD,EAAY,IAAIw2B,EAAgBp4B,KAAKjB,eAAgBu5B,EAAMC,GAMjE,OAJKN,GACHr2B,EAAU43B,gBAAgBxiB,MAAK,kBAAM5Y,EAAO0B,KAAK,6BAA8B8B,EAAU2jB,IAApDnnB,EAAN,IAG1BwD,CACR,KAtBH,K,gBCDMxD,EAASC,cAEFo7B,EAAb,iDAEmBC,cAAgBhzB,IAAgBE,yBAFnD,KAGmB+yB,kBAAoBjzB,IAAgBG,4BAHvD,0CAKE,WACE+yB,aAAaC,WAAW75B,KAAK05B,eAC7BI,eAAeD,WAAW75B,KAAK25B,kBAChC,GARH,qBAUE,WACE,IAAI13B,EAEJ,KACEA,EAAO23B,aAAaG,QAAQ/5B,KAAK05B,kBAE/Bz3B,EAAO63B,eAAeC,QAAQ/5B,KAAK25B,mBAEtC,CAAC,MAAOh6B,GAEP,YADAvB,EAAOwB,MAAMD,EAAbvB,EAED,CAED,GAAK6D,EAIL,IACE,OAAOq1B,EAAO0C,OAAOv1B,KAAKI,MAAM5C,GACjC,CAAC,MAAOtC,GAEP,YADAvB,EAAOwB,MAAMD,EAAbvB,EAED,CACF,GAjCH,qBAmCE,SAAQ6D,GACN,IAAMg4B,EAAWx1B,KAAKC,UAAUzC,GAEhC,IACE,OAAQA,EAAKa,MACX,KAAKs0B,EAAWQ,IACdgC,aAAaM,QAAQl6B,KAAK05B,cAAeO,GACzC,MACF,KAAK7C,EAAWU,QACdgC,eAAeI,QAAQl6B,KAAK25B,kBAAmBM,GAC/C,MACF,QACE,MAAM,IAAIl4B,MAAJ,uBAA0BE,EAAKa,KAA/B,wBAEX,CAAC,MAAOnD,GACPvB,EAAOwB,MAAMD,EAAbvB,EACD,CACF,KApDH,KCFMA,EAASC,cAEF87B,EAAb,WAME,aAAe,yBALEC,YAKH,OAJNC,aAIM,OAHNC,qBAAuB,EAGjB,KAFNC,wBAEM,EACZv6B,KAAKo6B,OAAS,IAAIX,CACnB,CARH,8CAUE,WACE,IAAM/X,EAAS1hB,KAAKo6B,OAAOL,UACvBrY,IACF1hB,KAAKq6B,QAAU3Y,EACf1hB,KAAKs6B,qBAAuB5Y,EAAO8V,SAAS50B,OAC5C5C,KAAKw6B,eAER,GAjBH,+BAmBE,SAAwBrkB,GACtBnW,KAAKu6B,mBAAqBpkB,CAC3B,GArBH,uBAuBE,WACE,OAAOnW,KAAKq6B,OACb,GAzBH,uBA2BE,SAAU3Y,GACR1hB,KAAKq6B,QAAU3Y,EACf1hB,KAAK64B,kBAAkBnX,GACvB1hB,KAAKw6B,cACN,GA/BH,0BAiCE,WACMx6B,KAAKu6B,oBACPv6B,KAAKu6B,mBAAmBv6B,KAAKq6B,QAEhC,GArCH,+BAuCE,SAAkB3Y,GACZA,GACF1hB,KAAKo6B,OAAOF,QAAQxY,EAEvB,GA3CH,6BA6CE,SAAgBsW,GACd,GAAKh4B,KAAKy6B,iBAAiBzC,GAA3B,CAGAh4B,KAAK06B,cACL,IAAMl6B,EAAUR,KAAK26B,uBAAuB3C,EAAU,GAChDtW,EAAS,IAAImW,EAAU,CAC3B9U,OAAQviB,EACRw3B,WACAR,SAAU,CACRh3B,KAIJ,OADAR,KAAK2hB,UAAUD,GACRA,CAXN,CAYF,GA5DH,0BA8DE,WACE1hB,KAAK06B,cACL16B,KAAKw6B,cACN,GAjEH,iCAmEE,SAAoBt5B,GAAwC,IAAD,IACzD,iBAAOlB,KAAKq6B,eAAZ,iBAAO,EAAc7C,gBAArB,aAAO,EAAwBjjB,MAAK,SAAAxK,GAAC,OAAIA,EAAE7I,UAAYA,CAAlB,GACtC,GArEH,wBAuEE,WACE,GAAIlB,KAAKq6B,mBAAmBxC,EAAW,CACrC,IAAMr3B,EAAUR,KAAK26B,uBAAuB36B,KAAKq6B,QAAQrC,UAGzD,OAFAh4B,KAAKq6B,QAAQ7C,SAAS30B,KAAKrC,GAC3BR,KAAK46B,iBAAiBp6B,GACfA,CACR,CAEF,GA/EH,8BAiFE,WAA0C,IAAD,EACvC,iBAAOR,KAAKq6B,eAAZ,aAAO,EAActX,MACtB,GAnFH,8BAqFE,SAAiBviB,GACf,QAAIR,KAAKq6B,UACPr6B,KAAKq6B,QAAQtX,OAASviB,EACtBR,KAAKo6B,OAAOF,QAAQl6B,KAAKq6B,SACzBr6B,KAAKw6B,gBACE,EAGV,GA7FH,yBA+FE,WACE,OAAIx6B,KAAKq6B,QACAr6B,KAAKq6B,QAAQ7C,SAEf,EACR,GApGH,6BAsGE,WACE,IAAM9V,EAAS1hB,KAAKo6B,OAAOL,UAC3B,GAAIrY,GAAUA,aAAkBqW,EAAe,CAC7C,IAAI,IAAInuB,MAAOkM,UAAY4L,EAAOtX,UAAY,IAC5C,OAAOsX,EAAOuW,QAEd75B,EAAO0B,KAAK,yBAA0B4hB,EAAtCtjB,EAEH,CAEF,GAhHH,yBAkHE,WACE4B,KAAKq6B,aAAUr1B,EACfhF,KAAKs6B,qBAAuB,EAC5Bt6B,KAAKo6B,OAAO5rB,OACb,GAtHH,oCAwHE,SAA+BwpB,GAAwE,IAAtD3kB,EAAqD,uDAA7CrT,KAAKs6B,qBACpDh5B,EAAeogB,SAAOmZ,cAAc,CAC1CC,UAAW9C,EACX3kB,UAFM/R,WAIJd,EAAU,IAAIW,EAAiB,CACjCqG,GAAI6L,EAAM9Q,WACVjB,aACAJ,QAASwgB,SAAOqZ,0BAA0Bz5B,GAAYJ,UAGxD,OADAlB,KAAKs6B,qBAAuBjnB,EAAQ,EAC7B7S,CACR,GApIH,8BAsIE,SAAyBw3B,GACvB,QAAIA,GACKtW,SAAOsZ,kBAAkBhD,EAGnC,KA3IH,KA8IMjiB,EAAU,IAAIokB,EAEPj6B,EAAmB,WAC9B,OAAO6V,CACR,C","file":"static/js/main.8e50f2c3.chunk.js","sourcesContent":["import { abi as abiutils, accountBlock, utils, ViteAPI } from \"@vite/vitejs\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Task } from \"../util/task\";\nimport { Network, VmLog } from \"../util/types\";\nimport { getWalletManager, IWalletConnector, SessionWalletAccount, WalletAccount, WalletConnectorFactory, WalletManager, WebWalletAccount } from \"../wallet\";\nconst { WS_RPC } = require('@vite/vitejs-ws');\n\nconst logger = getLogger();\n\nconst providerTimeout = 60000;\nconst providerOptions = { retryTimes: 10, retryInterval: 5000 };\n\nexport class ViteClient {\n  private _isConnected: boolean;\n  private _connector?: IWalletConnector;\n  private _provider?: any;\n  private _client?: any;\n  private readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _connectorFactory: WalletConnectorFactory;\n\n  constructor() {\n    this._isConnected = false;\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._connectorFactory = new WalletConnectorFactory(this._walletManager);\n  }\n\n  get isConnected(): boolean {\n    return this._isConnected;\n  }\n\n  get connector(): Maybe<IWalletConnector> {\n    return this._connector;\n  }\n\n  initAsync = async (network: Network) => new Promise<void>((resolve, reject) => {\n    this._connector = this._connectorFactory.create(network)\n    this._provider = new WS_RPC(network.rpcUrl, providerTimeout, providerOptions);\n    let isResolved = false;\n    this._provider.on('error', (err: any) => {\n      logger.error(err)();\n      if (isResolved) return;\n      reject(err);\n      this._isConnected = false;\n    });\n    this._client = new ViteAPI(this._provider, () => {\n      logger.info(`ViteAPI connected to ${this._provider.path}`)();\n      isResolved = true;\n      resolve();\n      this._isConnected = true;\n    });\n  });\n\n  dispose(): void {\n    logger.info(\"Disposing ViteClient\")();\n    this._provider?.disconnect();\n    this._isConnected = false;\n  }\n\n  async requestAsync(method: string, ...args: any[]): Promise<any> {\n    if (this._isConnected && this._client) {\n      return this._client.request(method, ...args);\n    } else {\n      return Promise.reject('Vite client is not ready to make requests.');\n    }\n  }\n\n  async callContractAsync(account: WalletAccount, methodName: string, abi: any, params: any, tokenId: any, amount: string, toAddress: string): Promise<any> {\n    let block = accountBlock\n      .createAccountBlock(\"callContract\", {\n        address: account.address,\n        abi,\n        methodName,\n        tokenId,\n        amount,\n        toAddress,\n        params,\n      })\n\n    if (account instanceof WebWalletAccount) {\n      block = block.setProvider(this._client).setPrivateKey(account.privateKey);\n      await block.autoSetPreviousAccountBlock();\n      const result = await block.sign().send();\n      return result;\n    } else if (account instanceof SessionWalletAccount) {\n      if (this.connector) {\n        this._emitter.emitConfirmTransactionDialog(true);\n        try {\n          const result = await this.connector.sendTransactionAsync({\n            block: block.accountBlock\n          });\n          this._emitter.emitConfirmTransactionDialog(false);\n          return result;\n        } catch (error) {\n          this._emitter.emitConfirmTransactionDialog(false);\n          throw error\n        }\n      } else {\n        throw new Error(\"Connector is not defined\");\n      }\n    } else {\n      throw new Error(\"Account not supported\");\n    }\n  }\n\n  // 0.8.0\n  async queryContractAsync(contractAddress: string, abi: any, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n\n    let result = await this.requestAsync(\"contract_query\", {\n      address: contractAddress,\n      data: dataBase64,\n    });\n\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  // 0.4.3\n  async callOffChainMethodAsync(contractAddress: string, abi: any, offchaincode: string, params: any): Promise<any> {\n    let data = abiutils.encodeFunctionCall(abi, params);\n    let dataBase64 = Buffer.from(data, \"hex\").toString(\"base64\");\n    let result = await this.requestAsync(\"contract_callOffChainMethod\", {\n      selfAddr: contractAddress,\n      offChainCode: offchaincode,\n      data: dataBase64,\n    });\n    if (result) {\n      let resultBytes = Buffer.from(result, \"base64\").toString(\"hex\");\n      let outputs = [];\n      for (let i = 0; i < abi.outputs.length; i++) {\n        outputs.push(abi.outputs[i].type);\n      }\n      let offchainDecodeResult = abiutils.decodeParameters(outputs, resultBytes);\n      let resultList = [];\n      if (offchainDecodeResult) {\n        for (let i = 0; i < abi.outputs.length; i++) {\n          if (abi.outputs[i].name) {\n            resultList.push({\n              name: abi.outputs[i].name,\n              value: offchainDecodeResult[i],\n            });\n          } else {\n            resultList.push({\n              name: \"\",\n              value: offchainDecodeResult[i],\n            });\n          }\n        }\n      }\n      return resultList;\n    }\n    return \"\";\n  }\n\n  decodeVmLog(vmLog: any, abi: any): Maybe<VmLog> {\n    let topics = vmLog.topics;\n    for (let j = 0; j < abi.length; j++) {\n      let abiItem = abi[j];\n      if (abiutils.encodeLogSignature(abiItem) === topics[0]) {\n        if (vmLog.data) {\n          let log: VmLog = {\n            topic: topics[0],\n            args: abiutils.decodeLog(\n              abiItem.inputs,\n              utils._Buffer.from(vmLog.data, \"base64\").toString(\"hex\"),\n              topics.slice(1)\n            ),\n            event: abiItem.name,\n          };\n          return log;\n        }\n      }\n    }\n    return undefined;\n  }\n\n  async createAddressListenerAsync(address: string): Promise<any> {\n    const payload = {\n      addressHeightRange: {\n        placeholder: {\n          fromHeight: \"0\",\n          toHeight: \"0\",\n        },\n      },\n    };\n    let tempPayload = JSON.stringify(payload);\n    tempPayload = tempPayload.replace(\"placeholder\", address);\n    const result = await this._client?.subscribe(\"createVmlogSubscription\", JSON.parse(tempPayload));\n    return result;\n  }\n\n  removeListener(event: any): void {\n    this._client?.unsubscribe(event);\n  }\n\n  async waitForAccountBlockAsync(address: string, height: string): Promise<any> {\n    return new Promise(async (resolve, reject) => {\n      let result: any = undefined;\n      let error: any = undefined;\n      const task = new Task(async () => {\n        try {\n          let blockByHeight = await this.requestAsync(\n            'ledger_getAccountBlockByHeight',\n            address,\n            height\n          );\n\n          if (!blockByHeight) {\n            return true;\n          }\n\n          let receiveBlockHash = blockByHeight.receiveBlockHash;\n          if (!receiveBlockHash) {\n            return true;\n          }\n\n          let blockByHash = await this.requestAsync('ledger_getAccountBlockByHash', receiveBlockHash);\n          if (!blockByHash) {\n            return true;\n          }\n\n          result = {\n            ...this.getAccountBlockStatus(blockByHash),\n            accountBlock: blockByHash\n          }\n\n          return false;\n        } catch (err) {\n          error = err\n          return false;\n        }\n      }, 500);\n      task.start(() => {\n        if (error) {\n          reject(error);\n        } else {\n          resolve(result);\n        }\n      });\n    });\n  }\n\n  private getAccountBlockStatus(accountBlock: any) {\n    let status = this.resolveAccountBlockData(accountBlock);\n    let statusTxt = '';\n    switch (status) {\n      case 0:\n        statusTxt = '0, Execution succeed';\n        break;\n      case 1:\n        statusTxt = '1, Execution reverted';\n        break;\n      case 2:\n        statusTxt = '2, Max call depth exceeded';\n        break;\n    }\n    return {\n      status,\n      statusTxt\n    };\n  }\n\n  private resolveAccountBlockData(accountBlock: any) {\n    if (\n      (accountBlock.blockType !== 4 && accountBlock.blockType !== 5) ||\n      !accountBlock.data\n    ) {\n      return 0;\n    }\n    let bytes = utils._Buffer.from(accountBlock.data, 'base64');\n\n    if (bytes.length !== 33) {\n      return 0;\n    }\n    return bytes[32];\n  }\n}\n\nconst client = new ViteClient();\n\nexport const getViteClient = () => {\n  return client;\n}","export class Task {\n  private _taskTimer: NodeJS.Timeout | undefined\n  private _taskInterval: number\n  private _task: () => Promise<boolean>\n  private _callback?: () => any\n\n  constructor(task: () => Promise<boolean>, interval: number) {\n    this._task = task;\n    this._taskInterval = interval;\n\n    return this;\n  }\n\n  _run(): void {\n    this._taskTimer = setTimeout(async () => {\n      if (!this._task) {\n        this._onStop();\n        return;\n      }\n      if (!(await this._task())) {\n        this._onStop();\n        return;\n      }\n      this._run();\n    }, this._taskInterval);\n  }\n\n  _onStop() {\n    this._callback && this._callback();\n  }\n\n  start(callback?: () => any): void {\n    this._callback = callback;\n    if (this._taskTimer) {\n      return;\n    }\n\n    this._run();\n  }\n\n\n  stop(): void {\n    this._onStop();\n    if (!this._taskTimer) {\n      return;\n    }\n    window.clearTimeout(this._taskTimer);\n    this._taskTimer = undefined;\n  }\n}","import { GenericType, Network, PoolFilterValues, PoolSortType, Token } from \"../util/types\"\n\nexport const CommonConstants = {\n  APP_NAME: 'Staking Pools',\n  WEB_WALLET_STORAGE_SPACE: 'VSP_WEB_WALLET',\n  SESSION_WALLET_STORAGE_SPACE: 'VSP_SESSION_WALLET',\n  POOLS_CONTRACT_ADDRESS_v05: 'vite_565875bd872ae411111e03b3752871beb0901ff0d4b53b3f8e',\n  POOLS_CONTRACT_ADDRESS_v04: 'vite_12e90482e9e13bbbeb1919e7993ffadd375f6b7aa483452cbf',\n  POOLS_CONTRACT_ADDRESS_v03: 'vite_6217fbda565d83ea03d23034054fb036a0d7a540993354e1e6',\n  POOLS_CONTRACT_ADDRESS_v02: 'vite_6b97e21d57909a881db29385b2339725ebbdf708b9eb487985',\n  POOLS_CONTRACT_ADDRESS_v01: 'vite_65ea4fbb8fc4a0f5cac745e0a97844ff2e9e4287aa0c35a28f',\n  POOLS_CONTRACT_ADDRESS_TESTNET: 'vite_bf52ded4994c8bf69628db1ef359dd9123dfe378048803f61c',\n  VITE_TOKEN_ID: 'tti_5649544520544f4b454e6e40',\n  REWARD_FACTOR: 1e36 // 10^36 = new BigNumber(10).pow(36)\n}\n\n//const RPC_URL: string = 'wss://node-vite.thomiz.dev/ws'; \n//const RPC_URL: string = 'wss://node.vite.net/gvite/ws'; //'wss://vitestats.com/ws';\nconst RPC_URL: string = 'wss://api-ws.vitetogether.org';\n//const RPC_URL: string = 'ws://62.84.190.125:41420'; //48132 // VIVA Test Node with 2.14.0 and 2.5m Quota\n\nexport const Networks: Network[] = [\n  {\n    id: 8,\n    networkId: 1,\n    name: 'MAINNET v0.5',\n    rpcUrl: RPC_URL,\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 1,\n    networkId: 1,\n    name: 'MAINNET v0.4',\n    rpcUrl: RPC_URL,\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 2,\n    networkId: 1,\n    name: 'MAINNET v0.3',\n    rpcUrl: RPC_URL,\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 3,\n    networkId: 2,\n    name: 'TESTNET',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws', // https://buidl.vite.net/gvite\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 4,\n    networkId: 2,\n    name: 'TESTNET+MOCK',\n    rpcUrl: 'wss://buidl.vite.net/gvite/ws',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 5,\n    networkId: 5,\n    name: 'DEBUG',\n    rpcUrl: 'ws://localhost:23457',\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 6,\n    networkId: 1,\n    name: 'MAINNET v0.2',\n    rpcUrl: RPC_URL,\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n  {\n    id: 7,\n    networkId: 1,\n    name: 'MAINNET v0.1',\n    rpcUrl: RPC_URL,\n    connectorUrl: 'wss://biforst.vite.net'\n  },\n]\n\nexport const TypeNames = {\n  Pool: \"Pool\",\n  PoolUserInfo: \"PoolUserInfo\",\n  Token: \"Token\"\n}\n\nexport const UnknownToken: Token = {\n  __typename: TypeNames.Token,\n  id: \"-1\",\n  name: \"UNKNOWN\",\n  symbol: \"UNKNOWN\",\n  originalSymbol: \"UNKNOWN\",\n  decimals: 0,\n  iconUrl: undefined,\n  url: undefined\n}\n\nexport const CustomDefinedTokens = new Map<string, Token>([\n  ['tti_11ab030f38ab5ebf9379e931',\n    {\n      __typename: TypeNames.Token,\n      id: \"tti_11ab030f38ab5ebf9379e931\",\n      name: \"VXX\",\n      symbol: \"VXX-000\",\n      originalSymbol: \"VXX\",\n      decimals: 18,\n      iconUrl: \"localvx.png\",\n      url: \"https://coinmarketcap.com/currencies/vitex-coin/\"\n    }\n  ],\n  ['tti_2511d9c93e4f98318ee`f6f56',\n    {\n      __typename: TypeNames.Token,\n      id: \"tti_2511d9c93e4f98318eef6f56\",\n      name: \"Viva\",\n      symbol: \"VIVA-001\",\n      originalSymbol: \"VIVA\",\n      decimals: 18,\n      iconUrl: \"localviva.png\",\n      url: \"https://vivafi.org\"\n    }\n  ],\n  [\"tti_5649544520544f4b454e6e40\",\n    {\n      __typename: TypeNames.Token,\n      id: \"tti_5649544520544f4b454e6e40\",\n      name: \"VITE\",\n      symbol: \"VITE\",\n      originalSymbol: \"VITE\",\n      decimals: 18,\n      iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\",\n      url: \"https://vite.org/\"\n    }\n  ],\n  [ \"tti_a23c2f75791efafe5fada99e\",\n    {\n      __typename: TypeNames.Token,\n      id: \"tti_a23c2f75791efafe5fada99e\",\n      name: \"VIVA\",\n      symbol: \"VIVA-000\",\n      originalSymbol: \"VIVA\",\n      decimals: 18,\n      iconUrl: \"https://static.vite.net/crypto-info/tokens/viva/tti_a23c2f75791efafe5fada99e.png\",\n      url: \"https://vivafi.org\"\n    }\n  ],\n  [\"tti_b90c9baffffc9dae58d1f33f\",\n    {\n    __typename: TypeNames.Token,    \n    id: \"tti_b90c9baffffc9dae58d1f33f\",\n    name: \"Bitcoin\",\n    symbol: \"BTC-000\",\n    originalSymbol: \"BTC\",\n    decimals: 8,\n    iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/7b04d1b14726fa3c20aa32daa946366f.png\",\n    url: \"https://bitcoin.org/en/\"\n    }\n  ],\n  [\"tti_29a2af20212b985e9d49e899\",\n    {\n      __typename: TypeNames.Token,\n       id: \"tti_29a2af20212b985e9d49e899\",\n       name: \"Nano\",\n       symbol: \"NANO-001\",\n       originalSymbol: \"NANO\",\n       decimals: 30,\n       iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/tti_29a2af20212b985e9d49e899.png\",\n       url: \"https://nano.org/\"\n    }  \n  ],\n  [\"tti_564954455820434f494e69b5\",\n  {\n     __typename: \"Token\",\n     id: \"tti_564954455820434f494e69b5\",\n     name: \"ViteX Coin\",\n     symbol: \"VX\",\n     originalSymbol: \"VX\",\n     decimals: 18,\n     iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/da32251cdc6b4e88963523659d705b83.png\",\n     url: \"https://vitex.net/\"\n  }\n  ],\n  [\"tti_80f3751485e4e83456059473\",\n  {\n     __typename: \"Token\",\n     id: \"tti_80f3751485e4e83456059473\",\n     name: \"Tether USD\",\n     symbol: \"USDT-000\",\n     originalSymbol: \"USDT\",\n     decimals: 6,\n     iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/c746e8a95dff8ce193c462554feb61bf.png\",\n     url: \"https://tether.to/\"\n  }\n  ],\n  [\"tti_687d8a93915393b219212c73\",\n  {\n     __typename: \"Token\",\n     id: \"tti_687d8a93915393b219212c73\",\n     name: \"Ethereum\",\n     symbol: \"ETH-000\",\n     originalSymbol: \"ETH\",\n     decimals: 18,\n     iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/4260d31a557c9084bdaef65d15cec36d.png\",\n     url: \"https://www.ethereum.org/\"\n  }\n  ],\n  [\"tti_ac7cb5fe2e5b1f5240691657\",\n  {\n     __typename: \"Token\",\n     id: \"tti_ac7cb5fe2e5b1f5240691657\",\n     name: \"FARM\",\n     symbol: \"FARM-000\",\n     originalSymbol: \"FARM\",\n     decimals: 18,\n     iconUrl: \"https://static.vite.net/crypto-info/tokens/FARM/tti_ac7cb5fe2e5b1f5240691657.png\",\n     url: \"\"\n  }\n  ],\n  [\"tti_b3fbb46b9318b3d168ba904e\",\n  {\n     __typename: \"Token\",\n     id: \"tti_b3fbb46b9318b3d168ba904e\",\n     name: \"ViCat\",\n     symbol: \"VICAT-000\",\n     originalSymbol: \"VICAT\",\n     decimals: 7,\n     iconUrl: \"https://static.vite.net/crypto-info/tokens/VICAT/tti_b3fbb46b9318b3d168ba904e.png\",\n     url: \"https://vicat.tech/\"\n  }\n  ],\n  [\"tti_135ae433038c18fe0797f528\",\n  {\n     __typename: \"Token\",\n     id: \"tti_135ae433038c18fe0797f528\",\n     name: \"ViCatBNB LP\",\n     symbol: \"VICATBNB-000\",\n     originalSymbol: \"VICATBNB\",\n     decimals: 18,\n     iconUrl: \"https://static.vite.net/crypto-info/tokens/VICATBNB/tti_135ae433038c18fe0797f528.png\",\n     url: \"https://vicat.tech/\"\n  }\n  ],\n  [\"tti_f370fadb275bc2a1a839c753\",\n  {\n     __typename: \"Token\",\n     id: \"tti_f370fadb275bc2a1a839c753\",\n     name: \"Epic Cash\",\n     symbol: \"EPIC-002\",\n     originalSymbol: \"EPIC\",\n     decimals: 8,\n     iconUrl: \"https://static.vite.net/crypto-info/tokens/epic/tti_f370fadb275bc2a1a839c753.png\",\n     url: \"https://epic.tech/\"\n  }\n  ],\n  [\"tti_541b25bd5e5db35166864096\",\n  {\n     __typename: \"Token\",\n     id: \"tti_541b25bd5e5db35166864096\",\n     name: \"VITA INU\",\n     symbol: \"VINU-001\",\n     originalSymbol: \"VINU\",\n     decimals: 18,\n     iconUrl: \"https://static.vite.net/token-profile-1257137467/icon/tti_541b25bd5e5db35166864096.png\",\n     url: \"https://twitter.com/VitaInuCoin\"\n  }\n  ],\n  [\"tti_d05920af6f485fa52ffe4e69\",\n  {\n     __typename: \"Token\",\n     id: \"tti_d05920af6f485fa52ffe4e69\",\n     name: \"VIVABNB LP\",\n     symbol: \"VIVABNB-000\",\n     originalSymbol: \"VIVABNB\",\n     decimals: 18,\n     iconUrl: \"localvivabnb.png\",\n     url: \"https://twitter.com/vivastakingpool\"\n  }\n  ]\n]);\n\n\n\nexport const PoolSortTypes: GenericType[] = [\n  {\n    name: \"\",\n    type: \"DEFAULT\"\n  },\n  {\n    name: \"APR\",\n    type: \"APR\"\n  },\n  {\n    name: \"Total staked\",\n    type: \"TOTAL_STAKED\"\n  }\n]\n\nexport const DefaultPoolFilterValues: PoolFilterValues = {\n  stakedOnly: false,\n  showLive: true,\n  sortBy: PoolSortTypes[PoolSortType.DEFAULT].type,\n  search: \"\"\n}","import BigNumber from \"bignumber.js\"\n\nexport interface GenericType {\n  name: string;\n  type: string;\n}\n\nexport type Contract = {\n  address: string\n  contractName: string\n  version: string\n  binary: string\n  offChain: string\n  abi: any[]\n}\n\nexport type Network = {\n  id: number\n  networkId: number\n  name: string\n  rpcUrl: string\n  connectorUrl: string\n}\n\nexport type Token = {\n  __typename: string\n  id: string\n  name: string\n  symbol: string\n  originalSymbol: string\n  decimals: number\n  iconUrl: Maybe<string>\n  url: Maybe<string>\n}\n\nexport type Pool = {\n  __typename: string\n  id: number\n  stakingToken: Token\n  rewardToken: Token\n  apr?: Maybe<BigNumber>\n  totalStaked: BigNumber\n  totalRewards: BigNumber\n  startBlock: BigNumber\n  endBlock: BigNumber\n  endTimestamp: number\n  latestRewardBlock: BigNumber\n  rewardPerPeriod: BigNumber\n  rewardPerToken: BigNumber\n  paidOut: BigNumber\n  minimumDeposit: BigNumber\n  maximumTotalStakingBalance: BigNumber\n  lockTime: BigNumber\n  userInfo?: Maybe<PoolUserInfo>\n  fetchTimestamp: number\n}\n\nexport type ContractPool = {\n  stakingTokenId: string\n  rewardTokenId: string\n  totalStakingBalance: string\n  totalRewardBalance: string\n  startBlock: string\n  endBlock: string\n  latestRewardBlock: string\n  rewardPerPeriod: string\n  rewardPerToken: string\n  paidOut: string\n  minimumDeposit: string\n  maximumTotalStakingBalance: string\n  lockTime: string\n}\n\nexport type PoolUserInfo = {\n  __typename: string\n  id: string\n  poolId: number\n  account: string\n  stakingBalance: BigNumber\n  rewardDebt: BigNumber\n}\n\nexport type ContractPoolUserInfo = {\n  poolId: number\n  address: string\n  stakingBalance: string\n  rewardDebt: string\n}\n\nexport type PoolFilterValues = {\n  stakedOnly: boolean\n  showLive: boolean\n  sortBy: string\n  search: string\n}\n\nexport enum PoolSortType {\n  DEFAULT = 0,\n  APR = 1,\n  TOTAL_STAKED = 2\n}\n\nexport type PoolDialogState = {\n  type: PoolDialogType\n  open: boolean\n}\n\nexport enum PoolDialogType {\n  DEPOSIT = 0,\n  WITHDRAW = 1,\n  CLAIM = 2\n}\n\nexport enum GlobalEvent {\n  ConfirmTransactionDialog = 'ConfirmTransactionDialog',\n  ConnectWalletDialog = 'ConnectWalletDialog',\n  NetworkBlockHeightChanged = 'NetworkBlockHeightChanged',\n  PoolFilterValuesChanged = 'PoolFilterValuesChanged',\n  PoolDeposit = 'PoolDeposit',\n  PoolWithdraw = 'PoolWithdraw',\n  PoolUpdate = 'PoolUpdate'\n}\n\nexport type VmLog = {\n  event: string\n  topic: string\n  args: any\n}\n\nexport enum VmLogEvent {\n  PoolCreated = 'PoolCreated',\n  Deposit = 'Deposit',\n  Withdraw = 'Withdraw'\n}","import { CommonUtil } from './common.util';\n\nexport class LogEventModel {\n  banner?: string;\n  args?: any[];\n\n  public constructor(init?: Partial<LogEventModel>) {\n    Object.assign(this, init);\n  }\n}\n\nexport interface ILogger {\n  // Make sure level is selected e.g. 'Verbose' in Chrome\n  readonly debug: any;\n  readonly info: any;\n  readonly warn: any;\n  readonly error: any;\n}\n\nconst noop = (): any => undefined;\n\nexport class ConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return console.debug.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return console.info.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return console.warn.bind(console);\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return console.error.bind(console);\n    } else {\n      return noop;\n    }\n  }\n}\n\nexport class ExtendedConsoleLogger implements ILogger {\n\n  private get isEnabled(): boolean {\n    return Boolean(process.env.REACT_APP_IS_DEV);\n  }\n\n  private timestamp(type: string): string {\n    return `[${type} ${new Date().toLocaleTimeString()}]`;\n  }\n\n  private createLogEventModel(type: string, ...args: any[]): LogEventModel {\n    const mapFn = (e: any) => {\n      if (CommonUtil.isString(e)) {\n        return e;\n      } else if (e instanceof Error) {\n        return e.message;\n      }\n      return CommonUtil.toJsonString(e);\n    };\n    const result = new LogEventModel({\n      banner: this.timestamp(type),\n      args: args?.map(e => Array.isArray(e) ? e.map(e1 => mapFn(e1)) : mapFn(e))\n    });\n    return result;\n  }\n\n  get debug() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('DEBUG', args);\n        return Function.prototype.bind.call(console.debug, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get info() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('INFO', args);\n        return Function.prototype.bind.call(console.info, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get warn() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        const result = this.createLogEventModel('WARN', args);\n        return Function.prototype.bind.call(console.warn, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n\n  get error() {\n    if (this.isEnabled) {\n      return (...args: any[]) => {\n        if (args?.length > 0) {\n          if (!CommonUtil.isString(args[0])) {\n            args.push('(See console output for more information.)');\n          }\n        }\n        const result = this.createLogEventModel('ERROR', args);\n        return Function.prototype.bind.call(console.error, console, result.banner, ...args);\n      };\n    } else {\n      return noop;\n    }\n  }\n}\n\nconst logger = new ExtendedConsoleLogger();\n\nexport const getLogger = (): ILogger => {\n  return logger;\n}","import fs from 'fs';\n\nexport abstract class FileUtil {\n  abstract readFileAsync(path: string): Promise<any>;\n}\n\nexport class BrowserFileUtil extends FileUtil {\n  async readFileAsync(path: string): Promise<any> {\n    const response = await fetch(path);\n    return response.text();\n  }\n}\n\nexport class LocalFileUtil extends FileUtil {\n  public async readFileAsync(path: string): Promise<any> {\n    return Promise.resolve(fs.readFileSync(path, 'utf8'));\n  }\n}\n\nexport enum FileUtilType {\n  Browser = 0,\n  Local = 1\n}\n\nexport const getFileUtil = (type: FileUtilType = FileUtilType.Browser) => {\n  switch (type) {\n    case FileUtilType.Local:\n      return new LocalFileUtil();\n    default:\n      return new BrowserFileUtil();\n  }\n}","export default __webpack_public_path__ + \"static/media/bg2.36ac1f86.svg\";","export class CoinUtil {\n  private readonly _iconUrlMap: Map<string, string>;\n  private readonly _coinMarketCapMap: Map<string, string>;\n  private readonly _coingeckoMap: Map<string, string>;\n\n  constructor() {\n    this._iconUrlMap = new Map<string, string>([\n      [\"https://static.vite.net/token-profile-1257137467/icon/e6dec7dfe46cb7f1c65342f511f0197c.png\", \"./assets/coins/vite.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/5faa1fa2b952137081e36c51af2b493c.png\", \"./assets/coins/usdc.png\"],\n      [\"https://static.vite.net/token-profile-1257137467/icon/3c231a8309999ad226afa097488a6158.png\", \"./assets/coins/dai.png\"],\n      [\"localdai.png\", \"./assets/coins/dai.png\"],\n      [\"localvx.png\", \"./assets/coins/vx.png\"],\n      [\"localviva.png\", \"./assets/coins/viva.png\"],\n      [\"localvivabnb.png\", \"./assets/coins/vivabnb.png\"]\n    ]);\n    this._coinMarketCapMap = new Map<string, string>();\n    this._coingeckoMap = new Map<string, string>([\n      [\"PancakeSwap\",\"pancakeswap-token\"]\n    ]);\n  }\n\n  mapIconUrl(iconUrl?: Maybe<string>): string {\n    if (!iconUrl) {\n      return \"\";\n    }\n    const existing = this._iconUrlMap.get(iconUrl);\n    return existing ?? iconUrl;\n  }\n\n  mapCoinMarketCapName(name: string): string {\n    const existing = this._coinMarketCapMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n\n  mapCoingeckoName(name: string): string {\n    const existing = this._coingeckoMap.get(name);\n    return existing ?? name.replace(\" \", \"-\").toLowerCase();\n  }\n}\n\nconst util = new CoinUtil();\n\nexport const getCoinUtil = (): CoinUtil => {\n  return util;\n}","import BigNumber from \"bignumber.js\";\nimport CoinGecko from \"coingecko-api\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getLogger } from \"../util/logger\";\n\nconst logger = getLogger();\n\nexport class CoingeckoClient {\n  private readonly _client: any;\n  private readonly _coinUtil: CoinUtil;\n\n  constructor() {\n    this._client = new CoinGecko();\n    this._coinUtil = getCoinUtil();\n  }\n\n  async getTokenPriceUSDAsync(name: string): Promise<BigNumber> {\n    try {\n      const mappedName = this._coinUtil.mapCoingeckoName(name);\n      const params = { ids: mappedName };\n      const result = await this._client.simple.price(params);\n      const usdprice = result?.data[mappedName]?.usd;\n      if(usdprice === undefined){\n        return new BigNumber(0)\n      }\n      return new BigNumber(usdprice);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst client = new CoingeckoClient();\n\nexport const getCoingeckoClient = () => {\n  return client;\n}","import BigNumber from \"bignumber.js\";\nimport axios from 'axios';\n\ntype BaseResult<T> = {\n  code: number,\n  data: T\n}\n\nexport type TokenLinks = {\n  website: string\n}\n\nexport type TokenDetailResult = {\n  name: string\n  symbol: string\n  originalSymbol: string\n  tokenDecimals: number\n  urlIcon: string\n  links: TokenLinks\n}\n\nexport type TokenPriceResult = Array<TokenPriceEntry>;\n\nexport type TokenPriceEntry = {\n  tokenId: string\n  tokenSymbol: string\n  usdRate: number\n  cnyRate: number\n  rubRate: number\n  krwRate: number\n  tryRate: number\n  vndRate: number\n  eurRate: number\n  gbpRate: number\n  inrRate: number\n  btcRate: number\n}\n\n\nexport class VitexClient {\n  private readonly _baseUrl_v1: string;\n  private readonly _baseUrl_v2: string;\n  private readonly _baseUrl_v3: string;\n\n  constructor() {\n    this._baseUrl_v1 = \"https://vitex.vite.net\"\n    this._baseUrl_v2 = \"https://api.vitex.net\"\n    this._baseUrl_v3 = \"https://vite-api.thomiz.dev/crypto-info/tokens/\"\n  }\n\n  async getTokenDetailAsync(tokenId: string): Promise<Maybe<TokenDetailResult>> {\n    const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl_v1 + \"/api/v1/token/detail?tokenId=\" + tokenId);\n    //const result = await axios.get<BaseResult<TokenDetailResult>>(this._baseUrl_v3 + tokenId + \"/details\");\n    return result.data.data;\n  }\n\n  async getTokenPriceAsync(tokenId: string): Promise<TokenPriceResult> {\n    const result = await axios.get<BaseResult<TokenPriceResult>>(this._baseUrl_v2 + \"/api/v2/exchange-rate?tokenIds=\" + tokenId);\n    return result.data.data\n  }\n\n  async getTokenPriceUSDAsync(tokenId: string): Promise<BigNumber> {\n    try {\n      const result = await this.getTokenPriceAsync(tokenId)\n      return new BigNumber(result[0].usdRate);\n    } catch (error) {\n//      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }  \n\n}\n\nconst client = new VitexClient();\n\nexport const getVitexClient = () => {\n  return client;\n}\n","export class Ensure {\n\n  public static notNull(property: any, propertyName: string, message?: string) {\n    if (property === null || property === undefined) {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static notNullOrWhiteSpace(property: Maybe<string>, propertyName: string, message?: string) {\n    if (property === null || property === undefined || property?.trim() === '') {\n      if (message) {\n        throw new Error(message);\n      } else {\n        throw new Error('Unexpected null exception. ' + propertyName);\n      }\n    }\n  }\n\n  public static maxLength(property: Maybe<string>, propertyName: string, maxLength: number) {\n    if (property && property.length > maxLength) {\n      throw new Error(`${propertyName} exceeds the maximum length of ${maxLength}`);\n    }\n  }\n\n}\n","import moment from 'moment';\n\nexport class MomentUtil {\n  private readonly _locale: string;\n\n  constructor(locale?: Maybe<string>) {\n    if (locale) {\n      this._locale = locale;\n    } else {\n      this._locale = navigator.language;\n    }\n    moment.locale(this._locale);\n  }\n\n  public getLocale(): string {\n    return this._locale;\n  }\n\n  public get(): moment.Moment {\n    return moment();\n  }\n\n  public getDuration(seconds: number): moment.Duration {\n    return moment.duration(seconds, 'seconds');\n  }\n\n  public getFromUnix(date: number) {\n    return moment.unix(date);\n  }\n\n  public getFromMilliseconds(date: number) {\n    return moment(date, 'x');\n  }\n\n  public getLocal(date: any): moment.Moment {\n    return moment.utc(date).local();\n  }\n\n  public getLocalTime(date: any): string {\n    return this.getLocal(date).format('LTS');\n  }\n\n  public getLocalDate(date: any): string {\n    return this.getLocal(date).format('L');\n  }\n\n  public getLocalFormatted(date: any): string {\n    return this.getLocalTime(date) + ' ' + this.getLocalDate(date);\n  }\n\n  public getLocalReverseFormatted(date: any): string {\n    return this.getLocalDate(date) + ' ' + this.getLocalTime(date);\n  }\n\n  public isExpired(timestamp: number): boolean {\n    try {\n      if (timestamp >= 0) {\n        return moment.utc().unix() >= timestamp;\n      }\n      return false;\n    } catch (error) {\n      return false;\n    }\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { CoingeckoClient, getCoingeckoClient } from \"../clients/coingecko.client\";\nimport { getVitexClient, VitexClient } from \"../clients/vitex.client\";\nimport { CustomDefinedTokens, TypeNames, UnknownToken } from \"../common/constants\";\nimport { CoinUtil, getCoinUtil } from \"../util/coin.util\";\nimport { getEmitter, IGlobalEmitter } from \"../util/emitter.util\";\nimport { Ensure } from \"../util/ensure\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, Token } from \"../util/types\";\nimport { getWalletManager, WalletAccount, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport interface IDataSource {\n  initAsync(): Promise<void>;\n  dispose(): void;\n  getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n  getNetworkBlockHeightAsync(): Promise<BigNumber>;\n  getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n  getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n  getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n  getTokenAsync(_id: string): Promise<Token>;\n  getTotalPoolsAsync(): Promise<number>;\n  depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n  withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}\n\nexport abstract class BaseDataSource implements IDataSource {\n  protected readonly _emitter: IGlobalEmitter;\n  private readonly _walletManager: WalletManager;\n  private readonly _coingeckoClient: CoingeckoClient;\n  private readonly _vitexClient: VitexClient;\n  private readonly _coinUtil: CoinUtil;\n  private readonly _tokens: Map<string, Token>;\n  private _moment: MomentUtil = new MomentUtil();\n\n  constructor() {\n    this._emitter = getEmitter();\n    this._walletManager = getWalletManager();\n    this._coingeckoClient = getCoingeckoClient();\n    this._vitexClient = getVitexClient();\n    this._coinUtil = getCoinUtil();\n    this._tokens = new Map<string, Token>();\n  }\n\n  async initAsync(): Promise<void> {\n    logger.info(\"Init BaseDataSource\")();\n    this._moment = new MomentUtil();\n    await this.initAsyncProtected();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing BaseDataSource\")();\n    this._tokens.clear();\n    this.disposeProtected();\n  }\n\n  getAccount(): WalletAccount {\n    const account = this._walletManager.getActiveAccount();\n    Ensure.notNull(account, \"account\", \"Please connect your wallet first.\");\n    return account as WalletAccount;\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    try {\n      if (pool.endTimestamp >= 0 && (this._moment.isExpired(pool.endTimestamp) || pool.latestRewardBlock === pool.endBlock)) {\n        // pool is closed, should not display numeric APR.\n        return undefined;\n      }\n\n      // FIXME : decimal factor will likely break if power separation is too great.\n      const decimalFactor = new BigNumber(10).pow( pool.stakingToken.decimals - pool.rewardToken.decimals );\n      //const stakingTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.stakingToken.name);\n      //const rewardTokenPrice = await this._coingeckoClient.getTokenPriceUSDAsync(pool.rewardToken.name);\n\n      const stakingTokenPrice = await this.getTokenPriceUSDAsync(pool.stakingToken);\n      const rewardTokenPrice = await this.getTokenPriceUSDAsync(pool.rewardToken);\n\n      const totalTime = pool.endBlock.minus(pool.startBlock);\n      const secondsInYear = new BigNumber(365 * 24 * 60 * 60);\n      const toPercent = new BigNumber(100);\n\n      const apr = rewardTokenPrice.times(decimalFactor).times(pool.totalRewards).dividedBy(stakingTokenPrice.times(pool.totalStaked).times(totalTime)).times(secondsInYear).times(toPercent);\n      \n      return !apr.isFinite() || apr.isNaN() ? undefined : apr;\n    } catch (error) {\n      logger.error(error)();\n      return undefined;\n    }\n  }\n\n  async getTokenPriceUSDAsync(token : Token) : Promise<BigNumber>{\n    // COMMENTING OUT Coingecko option, not obviously needed?\n    // try {\n    //   const price = await this._coingeckoClient.getTokenPriceUSDAsync(token.name);\n    //   if ( price.toNumber() === Number(0)) {\n    //     throw(new Error(\"Coingecko price lookup failed. Trying ViteX\"));\n    //   }\n    //   return price;\n    // } catch {\n      try {\n        //return await this._vitexClient.getTokenPriceUSDAsync(token.id);\n        return this._vitexClient.getTokenPriceUSDAsync(token.id);\n      } catch {\n        return new BigNumber(0)\n      }\n    //}\n  }\n\n\n  async getEndTimestampAsync(endBlock: BigNumber): Promise<number> {\n    try {\n      if (!endBlock || endBlock.lte(0)) {\n        return -1;\n      }\n      const networkBlockHeight = await this.getNetworkBlockHeightAsync();\n      const remainingSeconds = endBlock.minus(networkBlockHeight);\n      if (remainingSeconds.lte(0)) {\n        return 0;\n      }\n      return this._moment.get().add(remainingSeconds.toNumber(), \"seconds\").unix();\n    } catch (error) {\n      logger.error(error)();\n    }\n    return 0;\n  }\n\n  async getTokenAsync(id: string): Promise<Token> {\n    try {\n      const existing = this._tokens.get(id);\n      if (existing) {\n        return existing;\n      }\n\n      const customToken = CustomDefinedTokens.get(id);\n      if (customToken) {\n        return customToken;\n      }\n\n      const result = await this._vitexClient.getTokenDetailAsync(id);\n      if (result) {\n        const token = {\n          __typename: \"Token\",\n          id,\n          name: result.name,\n          symbol: result.symbol,\n          originalSymbol: result.originalSymbol,\n          decimals: result.tokenDecimals,\n          iconUrl: result.urlIcon,\n          url: result.links.website\n          //url: \"https://coinmarketcap.com/currencies/\" + this._coinUtil.mapCoinMarketCapName(result.name)\n        }\n        this._tokens.set(id, token);\n        return token;\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n    const unknownToken = {\n      ...UnknownToken,\n      id\n    }\n    this._tokens.set(id, unknownToken);\n    return unknownToken;\n  }\n\n  protected async toPoolAsync(id: number, p: ContractPool): Promise<Pool> {\n    const stakingToken = await this.getTokenAsync(p.stakingTokenId);\n    const rewardToken = await this.getTokenAsync(p.rewardTokenId);\n    const endTimestamp = await this.getEndTimestampAsync(new BigNumber(p.endBlock));\n    const pool: Pool = {\n      __typename: TypeNames.Pool,\n      id,\n      stakingToken,\n      rewardToken,\n      totalStaked: new BigNumber(p.totalStakingBalance),\n      totalRewards: new BigNumber(p.totalRewardBalance),\n      startBlock: new BigNumber(p.startBlock),\n      endBlock: new BigNumber(p.endBlock),\n      endTimestamp,\n      latestRewardBlock: new BigNumber(p.latestRewardBlock),\n      rewardPerPeriod: new BigNumber(p.rewardPerPeriod),\n      rewardPerToken: new BigNumber(p.rewardPerToken),\n      paidOut: new BigNumber(p.paidOut),\n      minimumDeposit: new BigNumber(p.minimumDeposit),\n      maximumTotalStakingBalance: new BigNumber(p.maximumTotalStakingBalance),\n      lockTime: new BigNumber(p.lockTime),\n      fetchTimestamp: this._moment.get().unix()\n    };\n    return pool;\n  }\n\n  protected async toPoolUserInfoAsync(u: ContractPoolUserInfo): Promise<PoolUserInfo> {\n    return {\n      __typename: TypeNames.PoolUserInfo,\n      id: `${u.address}_${u.poolId}`,\n      poolId: u.poolId,\n      account: u.address,\n      stakingBalance: new BigNumber(u.stakingBalance),\n      rewardDebt: new BigNumber(u.rewardDebt)\n    }\n  }\n\n  protected abstract initAsyncProtected(): Promise<void>;\n\n  protected abstract disposeProtected(): void;\n\n  abstract getAccountBalanceAsync(_account: string): Promise<BigNumber>;\n\n  abstract getNetworkBlockHeightAsync(): Promise<BigNumber>;\n\n  abstract getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool>;\n\n  abstract getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]>;\n\n  abstract getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>>;\n\n  abstract getTotalPoolsAsync(): Promise<number>;\n\n  abstract depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean>;\n\n  abstract withdrawAsync(_id: number, _amount: string): Promise<boolean>;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\n\nconst logger = getLogger();\n\nexport class MockDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private _pools: Pool[];\n  private _users: PoolUserInfo[];\n  private _networkBlockHeight: BigNumber;\n  private _networkBlockHeightInterval?: NodeJS.Timeout;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._pools = [];\n    this._users = [];\n    this._networkBlockHeight = new BigNumber(0);\n    logger.info(\"MockDataSource loaded\")();\n  }\n\n  private initNetworkBlockHeight() {\n    this._networkBlockHeight = new BigNumber(0);\n    this._networkBlockHeightInterval = setInterval(() => {\n      this._networkBlockHeight = this._networkBlockHeight.plus(1);\n      // console.log(this._networkBlockHeight.toString())\n    }, 1000);\n  }\n\n  private async initPoolsAsync(): Promise<void> {\n    let pools = await this._fileUtil.readFileAsync(\"./assets/data/mock_pool_info.json\");\n    pools = JSON.parse(pools);\n    this._pools = [];\n    for (let index = 0; index < pools.length; index++) {\n      const p: ContractPool = pools[index];\n      const pool = await this.toPoolAsync(index, p);\n      pool.apr = await this.getAprAsync(pool);\n      this._pools.push(pool);\n    }\n  }\n\n  async getAprAsync(pool: Pool): Promise<Maybe<BigNumber>> {\n    switch (pool.id) {\n      case 0:\n        return new BigNumber(2.12345678)\n      case 1:\n        return new BigNumber(3.55555555)\n      default:\n        return super.getAprAsync(pool)\n    };\n  }\n\n  private async initPoolUsersAsync(): Promise<void> {\n    let users = await this._fileUtil.readFileAsync(\"./assets/data/mock_user_info.json\");\n    users = JSON.parse(users);\n    this._users = [];\n    for (let index = 0; index < users.length; index++) {\n      const u: ContractPoolUserInfo = users[index];\n      const info = await this.toPoolUserInfoAsync(u);\n      this._users.push(info);\n    }\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    logger.info(\"MockDataSource initAsyncProtected\")();\n    this.initNetworkBlockHeight();\n    await this.initPoolsAsync();\n    await this.initPoolUsersAsync();\n  }\n\n  protected disposeProtected(): void {\n    if (this._networkBlockHeightInterval) {\n      clearInterval(this._networkBlockHeightInterval);\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    return new BigNumber(0);\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    return this._networkBlockHeight;\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    await CommonUtil.timeout(CommonUtil.random(100, 500));\n    const pool = this._pools[_id];\n    if (!_account) {\n      return pool;\n    }\n    return {\n      ...pool,\n      userInfo: await this.getPoolUserInfoAsync(_id, _account)\n    }\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {\n    await CommonUtil.timeout(1000);\n    if (!_account) {\n      return this._pools;\n    }\n    const pools = [];\n    for (const p of this._pools) {\n      pools.push(await this.getPoolAsync(p.id, _account))\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    return this._users.find(e => e.poolId === _poolId && e.account.toLowerCase() === _account?.toLowerCase());\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    return this._pools.length;\n  }\n\n  private async _updatePoolAsync(pool: Pool): Promise<void> {\n    const blockNumber = await this.getNetworkBlockHeightAsync();\n    const latestBlock = blockNumber < pool.endBlock ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock <= pool.latestRewardBlock) {\n      return;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(0)) {\n      pool.latestRewardBlock = latestBlock;\n      return;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    let userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (userInfo) {\n      // dispense rewards\n      if (userInfo.stakingBalance.gt(0)) {\n        const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n        pool.paidOut = pool.paidOut.plus(pendingAmount);\n      }\n      // update balances & recompute rewardDebt\n      userInfo.stakingBalance = userInfo.stakingBalance.plus(amount);\n      userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n    } else {\n      userInfo = await this.toPoolUserInfoAsync({\n        poolId: _id,\n        address: account,\n        stakingBalance: amount.toString(),\n        rewardDebt: \"0\"\n      });\n      this._users.push(userInfo);\n    }\n    pool.totalStaked = pool.totalStaked.plus(amount);\n    this._emitter.emitPoolDeposit(_id, new BigNumber(_amount), account);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    await CommonUtil.timeout(1000);\n    const pool = this._pools[_id];\n    await this._updatePoolAsync(pool);\n\n    const amount = new BigNumber(_amount);\n    const account = this.getAccount().address;\n    const userInfo = await this.getPoolUserInfoAsync(_id, account);\n    if (!userInfo) {\n      throw new Error(\"Withdraw not possible\")\n    }\n    if (userInfo.stakingBalance.lte(0) || amount.gt(userInfo.stakingBalance)) {\n      throw new Error(\"Insufficient balance\")\n    }\n\n    // dispense rewards\n    const pendingAmount = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(userInfo.rewardDebt);\n    pool.paidOut = pool.paidOut.plus(pendingAmount);\n\n    // update balances & recompute rewardDebt\n    userInfo.stakingBalance = userInfo.stakingBalance.minus(amount);\n    pool.totalStaked = pool.totalStaked.minus(amount);\n    userInfo.rewardDebt = userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR);\n\n    this._emitter.emitPoolWithdraw(_id, new BigNumber(_amount), account);\n    return true;\n  }\n}\n\nconst ds = new MockDataSource();\n\nexport const getMockDataSource = () => {\n  return ds;\n}","export class CachedFunctionCall<T> {\n  private readonly _duration: number;\n  private readonly _callbackFn: () => Promise<T>;\n  private _currentValue?: Maybe<T>;\n  private _lastExecution: number;\n\n  constructor(duration: number, callbackFn: () => Promise<T>) {\n    this._duration = duration;\n    this._callbackFn = callbackFn;\n    this._lastExecution = new Date(0).getTime();\n  }\n\n  private isExpired(): boolean {\n    return new Date().getTime() >= this._lastExecution + this._duration;\n  }\n\n  async getAsync(): Promise<T> {\n    if (!this._currentValue || this.isExpired()) {\n      this._currentValue = await this._callbackFn();\n      this._lastExecution = new Date().getTime();\n    }\n    return this._currentValue;\n  }\n}","import BigNumber from \"bignumber.js\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\nimport { Networks } from \"./constants\";\n\nconst logger = getLogger();\n\nexport class NetworkManager {\n  private _networkHeight: BigNumber;\n  private _network?: Maybe<Network>;\n  private _setNetworkCallback?: (network?: Maybe<Network>) => void;\n\n  constructor() {\n    this._networkHeight = new BigNumber(0);\n  }\n\n  set networkHeight(height: BigNumber) {\n    this._networkHeight = height;\n  }\n\n  get networkHeight(): BigNumber {\n    return this._networkHeight;\n  }\n\n  set onSetNetworkCallback(cb: (network?: Maybe<Network>) => void) {\n    this._setNetworkCallback = cb;\n  }\n\n  getNetwork(): Maybe<Network> {\n    return this._network;\n  }\n\n  setNetwork(network?: Maybe<Network>): void {\n    this._network = network;\n    if (this._setNetworkCallback) {\n      this._setNetworkCallback(this._network);\n    }\n  }\n\n  getNetworks(): Network[] {\n    try {\n      const ids = process.env.REACT_APP_NETWORKS?.split(\",\").map(e => Number(e));\n      return Networks.filter(e => ids?.includes(e.id))\n    } catch (error) {\n      logger.error(error)\n    }\n    return Networks;\n  }\n}\n\nconst manager = new NetworkManager();\n\nexport const getNetworkManager = () => {\n  return manager;\n}","import BigNumber from \"bignumber.js\";\nimport { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { CommonConstants, Networks } from \"../common/constants\";\nimport { CachedFunctionCall } from \"../util/cache\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { BrowserFileUtil, FileUtil } from \"../util/file.util\";\nimport { getLogger } from \"../util/logger\";\nimport { Contract, ContractPool, ContractPoolUserInfo, Pool, PoolUserInfo, VmLog, VmLogEvent } from \"../util/types\";\nimport { BaseDataSource } from \"./base.datasource\";\nimport { getNetworkManager } from \"../common/network\";\n\n\nconst logger = getLogger();\n\nexport class ViteDataSource extends BaseDataSource {\n  private readonly _fileUtil: FileUtil;\n  private readonly _client: ViteClient;\n  private readonly _offchainMethods: Map<string, string> = new Map<string, string>();\n  private readonly _cachedNetworkBlockHeight: CachedFunctionCall<number>;\n  private _contract?: Contract;\n  private _listener: any;\n\n  constructor(fileUtil: FileUtil = new BrowserFileUtil()) {\n    super();\n    this._fileUtil = fileUtil;\n    this._client = getViteClient();\n    this._cachedNetworkBlockHeight = new CachedFunctionCall(500, async () => {\n      // prevent function from being called more than once every 500 milliseconds\n      return await this._client.requestAsync(\"ledger_getSnapshotChainHeight\")\n    });\n    logger.info(\"ViteDataSource loaded\")();\n  }\n\n  protected async initAsyncProtected(): Promise<void> {\n    \n\n    const networkManager = getNetworkManager();\n    const currentNetwork = networkManager.getNetwork();\n    // to allow for different mainnet and testnet address/contracts \n    if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.4') ){\n      logger.info('MAINNET v0.4 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v04.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v04;\n    } else if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.5') ){\n      logger.info('MAINNET v0.5 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v05.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v05;\n    } else if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.3') ){\n      logger.info('MAINNET v0.3 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v03.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v03;\n    } else if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.2') ){\n      logger.info('MAINNET v0.2 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v02.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v02;\n    } else if( currentNetwork === Networks.find(network => network.name === 'MAINNET v0.1') ){\n      logger.info('MAINNET v0.1 ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_v01.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_v01;\n    } else if( currentNetwork === Networks.find(network => network.name === 'TESTNET') ){\n      logger.info('TESTNET ADDRESS CHOSEN.')()\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_old.json');\n      this._contract = JSON.parse(contract) as Contract;\n      this._contract.address = CommonConstants.POOLS_CONTRACT_ADDRESS_TESTNET;\n    } else {\n      // dumb hack to add contract here to avoid not defined TS errors.\n      const contract = await this._fileUtil.readFileAsync('./assets/contracts/vite_staking_pools_old.json');\n      this._contract = JSON.parse(contract) as Contract;\n      logger.info('Could not set contract address.')()\n    }\n\n    logger.info(`Contract ${this._contract?.contractName} loaded`)();\n    this._listener = await this._client.createAddressListenerAsync(this._contract.address);\n    this._listener.on((results: any[]) => {\n      if (!this._contract?.abi) {\n        logger.info('Could not decode vmlog because contract abi is not defined.')();\n      } else {\n        for (let index = 0; index < results.length; index++) {\n          const result = results[index];\n          const vmLog = this._client.decodeVmLog(result.vmlog, this._contract.abi);\n          logger.info(vmLog ?? result)();\n          if (vmLog) {\n            this.handleVmLogAsync(vmLog);\n          }\n        }\n      }\n    });\n  }\n\n  protected disposeProtected(): void {\n    this.removeAddressListener();\n    this._offchainMethods.clear();\n  }\n\n  private removeAddressListener(): void {\n    if (this._listener) {\n      this._client.removeListener(this._listener);\n    }\n  }\n\n  private get contract(): Contract {\n    if (this._contract?.address === undefined) {\n      throw new Error(\"Contract is not defined.\");\n    } else {\n      return this._contract;\n    }\n  }\n\n  async getAccountBalanceAsync(_account: string): Promise<BigNumber> {\n    try {\n      if (CommonUtil.isNullOrWhitespace(_account)) {\n        return new BigNumber(0);\n      }\n      const result = await this._client.requestAsync(\"ledger_getAccountInfoByAddress\", _account);\n      if (!result?.balanceInfoMap) {\n        return new BigNumber(0);\n      }\n      return new BigNumber(result.balanceInfoMap[CommonConstants.VITE_TOKEN_ID].balance).div(new BigNumber(10).pow(18));\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getNetworkBlockHeightAsync(): Promise<BigNumber> {\n    try {\n      const result = await this._cachedNetworkBlockHeight.getAsync();\n      return new BigNumber(result);\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n\n  async getPoolAsync(_id: number, _account?: Maybe<string>): Promise<Pool> {\n    logger.info('P')();\n    let result1 = [];\n    if (this.contract.version === \"0.4.3\") {\n      result1 = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), this.contract.offChain, [_id]);    \n    } else {\n      result1 = await this._client.queryContractAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolInfo\"), [_id])\n    }\n\n    var result2 = [];\n    try {\n      if (this.contract.version === \"0.4.3\") {\n        result2 = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getExtraPoolInfo\"), this.contract.offChain, [_id]);\n      } else {\n        result2 = await this._client.queryContractAsync(this.contract.address, this.getOffchainMethodAbi(\"getExtraPoolInfo\"), [_id]);\n      }\n    } catch {\n      // compatability for pool versions <0.4\n      result2 = [\n        {name: 'minimumDeposit', value: '0'},\n        {name: 'maximumTotalStakingBalance', value: '0'},\n        {name: 'lockTime', value: '0'}\n      ];\n    }\n    const result = result1.concat(result2);\n    const p = this.objectFromEntries(result) as ContractPool;\n    const pool = await this.toPoolAsync(_id, p);\n    pool.apr = await this.getAprAsync(pool);\n    pool.userInfo = await this.getPoolUserInfoAsync(_id, _account);\n    return pool;\n  }\n\n  async getPoolsAsync(_account?: Maybe<string>): Promise<Pool[]> {    \n    const amount = await this.getTotalPoolsAsync();\n    const pools = [];\n\n    var result = [];\n    if (this.contract.version === \"0.4.3\") {\n      result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getAllPoolInfo\"), this.contract.offChain, []);    \n    } else {\n      result = await this._client.queryContractAsync(this.contract.address, this.getOffchainMethodAbi(\"getAllPoolInfo\"), []);\n    }\n\n    var result2 = [];\n    try {\n      if (this.contract.version === \"0.4.3\") {\n        result2 = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getAllExtraPoolInfo\"), this.contract.offChain, []);\n      } else {\n        result2 = await this._client.queryContractAsync(this.contract.address, this.getOffchainMethodAbi(\"getAllExtraPoolInfo\"), []);\n      }\n    } catch {\n      // for old contract versions, need to create false data, all zeroed\n      const arr = []\n      for( let index = 0; index<amount; index++){\n        arr.push('0') // minimumDeposit\n        arr.push('0') // maximumTotalStakingBalance\n        arr.push('0') // lockTime\n      }\n      result2.push({name: \"packedIntegers\", value: arr})\n    }\n    \n    const stakingTokenIds : string[] = result.find( (item:any) => item.name === \"stakingTokenIds\" ).value\n    const rewardTokenIds : string[] = result.find( (item:any) => item.name === \"rewardTokenIds\" ).value\n    const packedIntegers : string[] = result.find( (item:any) => item.name === \"packedIntegers\" ).value\n    const packedIntegers2 : string[] = result2.find( (item:any) => item.name === \"packedIntegers\" ).value\n    \n    // console.log(stakingTokenIds, rewardTokenIds, packedIntegers, packedIntegers2)\n\n    // unpack from packed getter\n    for (let index = 0; index < amount; index++) {\n      const p : ContractPool = {\n        stakingTokenId: stakingTokenIds[index],\n        rewardTokenId: rewardTokenIds[index],\n        totalStakingBalance: packedIntegers[index*8 + 0],\n        totalRewardBalance: packedIntegers[index*8 + 1],\n        startBlock: packedIntegers[index*8 + 2],\n        endBlock: packedIntegers[index*8 + 3],\n        latestRewardBlock: packedIntegers[index*8 + 4],\n        rewardPerPeriod: packedIntegers[index*8 + 5],\n        rewardPerToken: packedIntegers[index*8 + 6],\n        paidOut: packedIntegers[index*8 + 7],\n        minimumDeposit: packedIntegers2[index*3 + 0],\n        maximumTotalStakingBalance: packedIntegers2[index*3 + 1],\n        lockTime: packedIntegers2[index*3 + 2]\n      }\n\n        // create pool objects\n        try {\n          const pool = await this.toPoolAsync(index, p);\n          pools.push(pool)\n        } catch(error) {\n          logger.error(error)();\n        }\n    }    \n\n    // add supplementary data to pools (apr/user info), fetch in parallel\n    try{\n      await Promise.all(\n        pools.map(async (pool) => {\n          const index = pool.id\n          pool.apr = await this.getAprAsync(pool);\n\n          // TODO: potentially can make the next one a single API call? But would pull out of async loop.\n          pool.userInfo = await this.getPoolUserInfoAsync(index, _account);        \n        })\n      )\n    } catch(error){\n      logger.error(error)();\n    }\n    return pools;\n  }\n\n  async getPoolUserInfoAsync(_poolId: number, _account?: Maybe<string>): Promise<Maybe<PoolUserInfo>> {\n    if (!_account || CommonUtil.isNullOrWhitespace(_account)) {\n      return undefined;\n    }\n    var result = [];\n    if (this.contract.version === \"0.4.3\") {\n      result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), this.contract.offChain, [_poolId, _account]);\n    } else {\n      result = await this._client.queryContractAsync(this.contract.address, this.getOffchainMethodAbi(\"getUserInfo\"), [_poolId, _account]);\n    }\n    const u = this.objectFromEntries(result) as ContractPoolUserInfo;\n    const info = await this.toPoolUserInfoAsync(u);\n    return info;\n  }\n\n  async getTotalPoolsAsync(): Promise<number> {\n    var result = [];\n    if (this.contract.version === \"0.4.3\") {\n      result = await this._client.callOffChainMethodAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), this.contract.offChain, []);\n    } else {\n      result = await this._client.queryContractAsync(this.contract.address, this.getOffchainMethodAbi(\"getPoolCount\"), []);\n    }\n    return Number(result[0].value);\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"deposit\", this.contract.abi, [_id], _tokenId, _amount, this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const account = this.getAccount();\n    const result = await this._client.callContractAsync(account, \"withdraw\", this.contract.abi, [_id, _amount], undefined, \"0\", this.contract.address);\n    await this.handleResponseAsync(account.address, result.height);\n    return true;\n  }\n\n  private getOffchainMethodAbi(name: string): any {\n    let result: Maybe<any>\n    if (this._offchainMethods.has(name)) {\n      result = this._offchainMethods.get(name)\n    } else {\n      if (this.contract.version === \"0.4.3\") {\n        result = this.contract.abi.find(e => e.type === \"offchain\" && e.name === name)\n        if (!result) {\n          result = this.contract.abi.find(e => e.type === \"function\" && e.name === name)\n        }\n      } else {\n        // 0.8.0\n        result = this.contract.abi.find(e => e.type === \"function\" && e.name === name && [\"view\", \"pure\"].includes(e.stateMutability))\n      }\n      \n      if (result) {\n        this._offchainMethods.set(name, result)\n      }\n    }\n    if (result) {\n      return result\n    } else {\n      throw new Error(`The offchain method '${name}' does not exist.'`)\n    }\n  }\n\n  private handleResponseAsync = async (address: string, height: string) => new Promise<void>((resolve, reject) => {\n    this._client.waitForAccountBlockAsync(address, height).then((result: any) => {\n      if (result?.status === 0) {\n        resolve()\n      } else {\n        reject(result?.statusTxt ?? \"Something went wrong.\")\n      }\n    })\n  })\n\n  private async handleVmLogAsync(vmlog: VmLog): Promise<void> {\n    try {\n      if (vmlog.event === VmLogEvent.Deposit && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolDeposit(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else if (vmlog.event === VmLogEvent.Withdraw && vmlog.args.addr && vmlog.args.pid && vmlog.args.amount) {\n        this._emitter.emitPoolWithdraw(Number(vmlog.args.pid), new BigNumber(vmlog.args.amount), vmlog.args.addr);\n      } else {\n        logger.info('Unknown vmlog event.', vmlog)();\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  private objectFromEntries = (entries: any) => {\n    return Object.fromEntries(\n      entries.map((entry: any) => {\n        return [entry.name, entry.value];\n      })\n    );\n  }\n}\n\nconst ds = new ViteDataSource();\n\nexport const getViteDataSource = () => {\n  return ds;\n}","import { getViteClient, ViteClient } from \"../clients/vite.client\";\nimport { getMockDataSource, getViteDataSource, IDataSource } from \"../datasources\";\nimport { getLogger } from \"../util/logger\";\nimport { Network } from \"../util/types\";\n\nconst logger = getLogger();\n\nexport class CommonContext {\n  private readonly _vite: ViteClient;\n  private _datasource: IDataSource;\n\n  constructor() {\n    this._vite = getViteClient();\n    this._datasource = getMockDataSource();\n  }\n\n  async initAsync(network: Network): Promise<void> {\n    await this.initViteClientAsync(network);\n    switch (network.id) {\n      case 3:\n        this._datasource = getMockDataSource();\n        break;\n      default:\n        this._datasource = getViteDataSource();\n        break;\n    }\n    await this._datasource.initAsync();\n  }\n\n  dispose(): void {\n    logger.info(\"Disposing CommonContext\")();\n    this._datasource.dispose();\n    this._vite.dispose();\n  }\n\n  get datasource(): IDataSource {\n    return this._datasource;\n  }\n\n  private async initViteClientAsync(network: Network): Promise<void> {\n    try {\n      await this._vite.initAsync(network);\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n}\n\nconst context = new CommonContext();\n\nexport const getCommonContext = () => {\n  return context;\n}","import { gql } from \"@apollo/client\";\nimport { ApolloContext } from \"../clients/apollo.client\";\n\nexport const DEPOSIT_MUTATION = gql`\nmutation Deposit($id: ID!, $tokenId: String!, $amount: String!) {\n  deposit(id: $id, tokenId: $tokenId, amount: $amount) @client\n}\n`;\n\nexport const WITHDRAW_MUTATION = gql`\nmutation Withdraw($id: ID!, $amount: String!) {\n  withdraw(id: $id, amount: $amount) @client\n}\n`;\n\nexport const PoolMutations = {\n  async deposit(parent: any, { id, tokenId, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.depositAsync(Number(id), tokenId, amount);\n  },\n  async withdraw(parent: any, { id, amount }: any, context: ApolloContext): Promise<boolean> {\n    return context.client.datasource.withdrawAsync(Number(id), amount);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_ACCOUNT_BALANCE_QUERY = gql`\n  query GetAccountBalance($account: String) {\n    accountBalance(account: $account) @client\n  }\n`;\n\nexport const AccountQueries = {\n  async accountBalance(parent: any, { account }: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getAccountBalanceAsync(account);\n  }\n}","import { gql } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { ApolloContext } from '../clients/apollo.client';\n\nexport const GET_NETWORK_BLOCK_HEIGHT_QUERY = gql`\n  query GetNetworkBlockHeight {\n    networkBlockHeight @client\n  }\n`;\n\nexport const NetworkQueries = {\n  async networkBlockHeight(parent: any, params: any, context: ApolloContext): Promise<BigNumber> {\n    return await context.client.datasource.getNetworkBlockHeightAsync();\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Token } from '../util/types';\n\nexport const TOKEN_FIELDS = gql`\n  fragment TokenFields on Token {\n    id\n    name\n    symbol\n    originalSymbol\n    decimals\n    iconUrl\n    url\n  }\n`;\n\nexport const GET_TOKEN_QUERY = gql`\n  ${TOKEN_FIELDS}\n  query GetToken($id: ID!) {\n    token(id: $id) @client {\n      ...TokenFields\n    }\n  }\n`;\n\nexport const TokenQueries = {\n  async token(parent: any, { id }: any, context: ApolloContext): Promise<Token> {\n    return context.client.datasource.getTokenAsync(id);\n  }\n}","import { gql } from '@apollo/client';\nimport { ApolloContext } from '../clients/apollo.client';\nimport { Pool, PoolUserInfo } from '../util/types';\nimport { TOKEN_FIELDS } from './token';\n\nexport const POOL_FIELDS = gql`\n  fragment PoolFields on Pool {\n    id\n    stakingToken {\n      ...TokenFields\n    }\n    rewardToken {\n      ...TokenFields\n    }\n    apr\n    totalStaked\n    totalRewards\n    startBlock\n    endBlock\n    endTimestamp\n    latestRewardBlock\n    rewardPerPeriod\n    rewardPerToken\n    paidOut\n    userInfo {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const POOL_USER_INFO_FIELDS = gql`\n  fragment PoolUserInfoFields on PoolUserInfo {\n    id\n    poolId\n    account\n    stakingBalance\n    rewardDebt\n  }\n`;\n\nexport const GET_POOL_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPool($id: ID!, $account: String) {\n    pool(id: $id, account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_POOLS_QUERY = gql`\n  ${TOKEN_FIELDS}\n  ${POOL_USER_INFO_FIELDS}\n  ${POOL_FIELDS}\n  query GetPools($account: String) {\n    pools(account: $account) @client {\n      ...PoolFields\n    }\n  }\n`;\n\nexport const GET_TOTAL_POOLS_QUERY = gql`\n  query GetTotalPools {\n    totalPools @client\n  }\n`;\n\nexport const GET_POOL_USER_INFO_QUERY = gql`\n  ${POOL_USER_INFO_FIELDS}\n  query GetPoolUserInfo($poolId: Int!, $account: String) {\n    poolUserInfo(poolId: $poolId, account: $account) @client {\n      ...PoolUserInfoFields\n    }\n  }\n`;\n\nexport const PoolQueries = {\n  async pool(parent: any, { id, account }: any, context: ApolloContext): Promise<Pool> {\n    return context.client.datasource.getPoolAsync(Number(id), account);\n  },\n  async pools(parent: any, { account }: any, context: ApolloContext): Promise<Pool[]> {\n    return context.client.datasource.getPoolsAsync(account);\n  },\n  async totalPools(parent: any, params: any, context: ApolloContext): Promise<number> {\n    return await context.client.datasource.getTotalPoolsAsync();\n  },\n  async poolUserInfo(parent: any, { poolId, account }: any, context: ApolloContext): Promise<Maybe<PoolUserInfo>> {\n    return context.client.datasource.getPoolUserInfoAsync(Number(poolId), account);\n  }\n}","import { ApolloClient, InMemoryCache, NormalizedCacheObject } from '@apollo/client';\nimport BigNumber from 'bignumber.js';\nimport { GraphQLScalarType } from 'graphql';\nimport { getCommonContext } from '../contexts/common';\nimport { IDataSource } from '../datasources';\nimport { PoolMutations } from '../mutations';\nimport { NetworkQueries, PoolQueries, TokenQueries } from '../queries';\nimport { AccountQueries } from '../queries/account';\n\nexport type ApolloContext = {\n  cache: InMemoryCache,\n  client: ApolloClientWrapper,\n  clientAwareness: any,\n  getCacheKey: (obj: any) => string | undefined\n}\n\nexport class ApolloClientWrapper extends ApolloClient<NormalizedCacheObject> {\n  get datasource(): IDataSource {\n    return getCommonContext().datasource;\n  }\n}\n\nconst cache: InMemoryCache = new InMemoryCache({\n  typePolicies: {\n    Query: {\n      fields: {\n      }\n    }\n  }\n});\n\nconst bigNumberScalar = new GraphQLScalarType({\n  name: 'BigNumber',\n  description: 'BigNumber custom scalar type',\n  serialize(value: BigNumber) {\n    return value.toString();\n  },\n  parseValue(value: string) {\n    return new BigNumber(value);\n  }\n});\n\nconst resolvers: any = {\n  BigNumber: bigNumberScalar,\n  Query: {\n    ...AccountQueries,\n    ...NetworkQueries,\n    ...PoolQueries,\n    ...TokenQueries\n  },\n  Mutation: {\n    ...PoolMutations\n  }\n};\n\n// https://www.apollographql.com/docs/react/networking/authentication/#header\nconst client = new ApolloClientWrapper({\n  // link: authLink.concat(httpLink),\n  cache: cache,\n  resolvers,\n  headers: {\n    'client-name': process.env.REACT_APP_NAME || 'client',\n    'client-version': process.env.REACT_APP_VERSION || '0',\n  },\n})\n\nexport const getApolloClient = () => {\n  return client;\n}","import * as React from 'react';\nimport { styled } from '@mui/material/styles';\nimport Tooltip, { TooltipProps, tooltipClasses } from '@mui/material/Tooltip';\n\nexport const LightTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.white,\n    color: 'rgba(0, 0, 0, 0.87)',\n    boxShadow: theme.shadows[1],\n    fontSize: 11,\n  },\n}));\n\nexport const BootstrapTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} arrow classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.arrow}`]: {\n    color: theme.palette.common.black,\n  },\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: theme.palette.common.black,\n  },\n}));\n\nexport const HtmlTooltip = styled(({ className, ...props }: TooltipProps) => (\n  <Tooltip {...props} classes={{ popper: className }} />\n))(({ theme }) => ({\n  [`& .${tooltipClasses.tooltip}`]: {\n    backgroundColor: '#f5f5f9',\n    color: 'rgba(0, 0, 0, 0.87)',\n    maxWidth: 220,\n    fontSize: theme.typography.pxToRem(12),\n    border: '1px solid #dadde9',\n  },\n}));","import CropSquareIcon from '@mui/icons-material/CropSquare';\nimport { Box, Chip, Grid, Typography } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\n\nexport const Footer: React.FC = () => {\n  const [networkBlockHeight, setNetworkBlockHeight] = useState(new BigNumber(0))\n  const [rotated, setRotated] = useState(false)\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (height: BigNumber) => {\n      const heightString = height.toString();\n      let heightRef = height;\n      if (heightString.length > 1) {\n        heightRef = new BigNumber(heightString.substr(heightString.length - 1, heightString.length))\n      }\n      setRotated(heightRef.mod(2).eq(0));\n      setNetworkBlockHeight(height);\n    }\n    emitter.on(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.NetworkBlockHeightChanged, handleEvent)\n    };\n  }, [emitter]);\n\n  return (\n    <Box sx={{ py: \"10px\", px: \"24px\" }}>\n      <Grid container direction=\"row\" justifyContent=\"flex-end\" alignItems=\"center\" spacing={1}>\n        <Grid item>\n          <BootstrapTooltip title=\"Network block height\" placement=\"top\" arrow>\n            <Typography variant=\"caption\" sx={{ verticalAlign: \"middle\", display: \"inline-flex\" }}>\n              <CropSquareIcon sx={{\n                color: \"gray\",\n                mr: \"2px\",\n                transform: rotated ? \"rotate(45deg)\" : \"rotate(0deg)\",\n                fontSize: \"17px\"\n              }} />\n              {networkBlockHeight.toString()}\n            </Typography>\n          </BootstrapTooltip>\n        </Grid>\n        <Grid item>\n          <BootstrapTooltip title=\"Version\" placement=\"top\" arrow>\n            <Chip label={'v' + process.env.REACT_APP_VERSION} variant=\"outlined\" size=\"small\" />\n          </BootstrapTooltip>\n        </Grid>\n      </Grid>\n    </Box>\n  )\n}\n","import React from 'react';\nimport { AppBar, styled, Toolbar, Typography } from '@mui/material';\nimport { CommonConstants } from '../../../../common/constants';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`,\n);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`,\n);\n\nexport const HeaderLoading: React.FC = (props: any) => {\n  return (\n    <Root>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* <img src={\"./logo_white.png\"} alt=\"logo\" width=\"30\" /> */}\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n        </Toolbar>\n      </AppBar>\n    </Root>\n  )\n}","import { Container, styled } from '@mui/material';\nimport * as React from 'react';\n\nconst MainScrollStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  flex-grow: 1;\n  align-items: center;\n  padding-bottom: 15px;\n  padding-top: 30px;\n  overflow: auto;\n  overflow-x: hidden;\n`,\n);\n\nconst MainScrollInner = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`,\n);\n\nexport const MainScroll: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return (\n    <MainScrollStyled {...restProps}>\n      <Container maxWidth=\"lg\">\n        <MainScrollInner>{children}</MainScrollInner>\n      </Container>\n    </MainScrollStyled>\n  )\n}\n","import { styled } from '@mui/material';\nimport React from 'react';\n\nconst MainWrapperStyled = styled('div')(\n  ({ theme }) => `\n  display: flex;\n  flex-direction: column;\n  height: 100vh;\n`,\n);\n\nexport const MainWrapper: React.FC = props => {\n  const { children, ...restProps } = props\n\n  return <MainWrapperStyled {...restProps}>{children}</MainWrapperStyled>\n}\n","import React, { useState } from 'react';\nimport { getNetworkManager } from '../common/network';\nimport { Network } from '../util/types';\nimport { getWalletManager, SessionWallet, WebWallet } from '../wallet';\n\nexport interface IWeb3Context {\n  setError: (error: Error) => void,\n  error?: Maybe<Error>,\n  wallet?: Maybe<WebWallet | SessionWallet>\n  network?: Maybe<Network>\n}\n\nconst Web3Context = React.createContext<Maybe<IWeb3Context>>(undefined)\n\nexport const useWeb3Context = () => {\n  const context = React.useContext(Web3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\nexport const Web3Provider: React.FC<Props> = (props: Props) => {\n  const [error, setError] = useState<Maybe<Error>>(null)\n  const [wallet, setWallet] = useState<Maybe<WebWallet | SessionWallet>>(null)\n  const [network, setNetwork] = useState<Maybe<Network>>(null)\n\n  const walletManager = getWalletManager()\n  walletManager.onSetWalletCallback = setWallet\n\n  const networkManager = getNetworkManager()\n  networkManager.onSetNetworkCallback = setNetwork\n\n  const context: IWeb3Context = {\n    setError,\n    error,\n    wallet,\n    network\n  }\n\n  return (\n    <Web3Context.Provider value={context}>{props.children}</Web3Context.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useState } from 'react';\nimport { Networks } from '../common/constants';\nimport { getNetworkManager } from '../common/network';\nimport { MainLoading } from '../features/main/components/loading';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\nimport { getWalletManager } from '../wallet';\nimport { getCommonContext } from './common';\nimport { useWeb3Context } from './web3';\n\nconst logger = getLogger()\n\nexport interface IConnectedWeb3Context {\n  account?: string\n  network?: Maybe<Network>\n  logout: () => void\n}\n\nconst ConnectedWeb3Context = React.createContext<Maybe<IConnectedWeb3Context>>(undefined)\n\n/**\n * This hook can only be used by components under the `ConnectedWeb3` component. Otherwise it will throw.\n */\nexport const useConnectedWeb3Context = () => {\n  const context = React.useContext(ConnectedWeb3Context)\n\n  if (!context) {\n    throw new Error('Component rendered outside the provider tree')\n  }\n\n  return context\n}\n\ninterface Props {\n  children?: React.ReactNode\n}\n\n/**\n * Component used to render components that depend on Web3 being available. These components can then\n * `useConnectedWeb3Context` safely to get web3 stuff without having to null check it.\n */\nexport const ConnectedWeb3: React.FC<Props> = (props: Props) => {\n  const [connection, setConnection] = useState<IConnectedWeb3Context | null>(null)\n  const web3Context = useWeb3Context()\n  const commonContext = getCommonContext()\n\n  const { wallet, network } = web3Context\n\n  useEffect(() => {\n    if (!wallet) {\n      const walletManager = getWalletManager()\n      walletManager.initWallet()\n    }\n  }, [wallet])\n\n  useEffect(() => {\n    if (!network) {\n      const networkManager = getNetworkManager()\n      const networkId = Number(process.env.REACT_APP_DEFAULT_NETWORK ?? \"2\");\n      networkManager.setNetwork(Networks.find(e => e.id === networkId))\n      logger.info(\"Network:\", networkManager.getNetwork())()\n    }\n  }, [network])\n\n  const logout = useCallback(() => {\n    const walletManager = getWalletManager()\n    walletManager.removeWallet()\n    window.location.reload()\n  }, [])\n\n  useEffect(() => {\n    const value = {\n      account: wallet?.active?.address,\n      network,\n      logout\n    }\n\n    logger.info('ConnectedWeb3.account', wallet?.active?.address)()\n\n    const initAsync = async () => {\n      if (network) {\n        logger.info('Init ConnectedWeb3')()\n        try {\n          setConnection(null)\n          await commonContext.initAsync(network)\n          setConnection(value)\n        } catch (error) {\n          logger.error(error)();\n        }\n      }\n    }\n    initAsync()\n    return () => {\n      commonContext.dispose()\n    }\n  }, [wallet, network, logout, commonContext])\n\n  if (!connection) {\n    return MainLoading()\n  }\n\n  const value = {\n    ...connection\n  }\n\n  return (\n    <ConnectedWeb3Context.Provider value={value}>{props.children}</ConnectedWeb3Context.Provider>\n  )\n}","\nimport { Typography } from '@mui/material';\nimport { Footer } from '../../../layout/components/footer';\nimport { HeaderLoading } from '../../../layout/components/header-loading';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\n\nexport const MainLoading = () => {\n\n  return (\n    <MainWrapper>\n      <HeaderLoading />\n      <MainScroll>\n        <Typography>Loading...</Typography>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { CommonUtil } from './common.util';\n\nexport abstract class FormatUtil {\n  static formatMessage(data: any): string {\n    const defaultMessage = \"Something went wrong.\"\n    if (data) {\n      console.log(data)\n      let message: string\n      if (!CommonUtil.isString(data)) {\n        if (data.message) {\n          message = data.message\n        }\n        else if (data.error?.message) {\n          message = data.error.message\n        } else if (data.graphQLErrors) {\n          if (data.graphQLErrors.length > 0) {\n            message = data.graphQLErrors[0].message\n          } else {\n            message = defaultMessage\n          }\n        } else {\n          message = JSON.stringify(data)\n          if (message === \"{}\") {\n            message = defaultMessage\n          }\n        }\n      } else {\n        message = data\n      }\n      if (message.length > 128) {\n        return message.substr(0, 128) + \"...\"\n      }\n      return message\n    }\n    return defaultMessage\n  }\n}","import { ProviderContext } from \"notistack\";\nimport { FormatUtil } from \"./format.util\";\n\nexport abstract class SnackbarUtil {\n  static snackbar: ProviderContext;\n  static enqueueError(error: any): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(FormatUtil.formatMessage(error));\n  }\n  static enqueueMessage(message: string): void {\n    SnackbarUtil.snackbar.enqueueSnackbar(message);\n  }\n}","import React, { useEffect, useRef } from 'react';\nimport { qrcode, modes, ecLevel } from 'qrcode.es';\n\ninterface Props {\n  text?: string\n}\n\nexport const QrCode: React.FC<Props> = (props: Props) => {\n  const elementRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const defaultOpt = {\n      size: 240,\n      ecLevel: ecLevel.HIGH,\n      minVersion: 4,\n      background: '#fff',\n      mode: modes.DRAW_WITH_IMAGE_BOX,\n      radius: 0,\n      image: process.env.PUBLIC_URL + '/icon.png',\n      mSize: 0.3\n    };\n\n    if (props.text && elementRef.current) {\n      elementRef.current.innerHTML = ''\n      const q = new qrcode(elementRef.current);\n      q.generate(props.text, defaultOpt).then(() => {\n        console.log('QR code generated')\n      });\n    }\n  }, [props.text])\n\n  return (\n    <div ref={elementRef}></div>\n  );\n}\n","import { Dialog, DialogContent, DialogContentText, DialogTitle } from '@mui/material';\nimport { Box } from '@mui/system';\nimport React, { useEffect } from 'react';\nimport { getViteClient } from '../../../../clients/vite.client';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\nimport { QrCode } from '../qrcode';\n\ninterface Props {\n  open: boolean;\n  setOpen: React.Dispatch<React.SetStateAction<boolean>>;\n  onClose: () => void;\n}\n\nexport const LoginDialog: React.FC<Props> = (props: Props) => {\n  const { onClose, open, setOpen } = props;\n  const viteClient = getViteClient();\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConnectWalletDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConnectWalletDialog, handleEvent)\n    };\n  }, [emitter, setOpen]);\n\n  const handleClose = () => {\n    onClose();\n  };\n\n  if (!viteClient.connector) {\n    return (\n      <>\n      </>\n    )\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={open} maxWidth=\"xs\">\n      <DialogTitle>Connect Wallet</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Scan the QR code via Vite Wallet App\n        </DialogContentText>\n        <Box sx={{ mt: 2, textAlign: \"center\" }}>\n          <QrCode text={viteClient.connector?.uri}></QrCode>\n        </Box>\n      </DialogContent>\n    </Dialog>\n  )\n}\n","import { FormControl, InputLabel, MenuItem, Select, SelectChangeEvent, styled } from '@mui/material';\nimport React, { useState } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { Network } from '../../../../util/types';\n\nconst NetworksFormControl = styled(FormControl)(\n  ({ theme }) => ({\n    margin: theme.spacing(1),\n    '& .MuiSelect-root': {\n      color: theme.palette.common.white\n    },\n    '& .MuiSvgIcon-root': {\n      color: theme.palette.common.white\n    }\n  }));\n\nexport const NetworkList: React.FC = () => {\n  const networkManager = getNetworkManager()\n  const networks = networkManager.getNetworks()\n  const [network, setNetwork] = useState<Maybe<Network>>(networkManager.getNetwork())\n\n  const handleChange = (event: SelectChangeEvent) => {\n    const selectedNetwork = networks.find(e => e.id.toString() === event.target.value)\n    if (selectedNetwork) {\n      setNetwork(selectedNetwork)\n      networkManager.setNetwork(selectedNetwork)\n    }\n  }\n\n  return (\n    networks.length > 0 ? (\n      <NetworksFormControl variant=\"outlined\" size=\"small\">\n        <InputLabel id=\"select-network-label\"></InputLabel>\n        <Select\n          labelId=\"select-network-label\"\n          id=\"select-network-label\"\n          value={network?.id.toString()}\n          onChange={handleChange}\n        >\n          {networks.map(e => {\n            return (\n              <MenuItem key={e.id.toString()} value={e.id.toString()}>{e.name}</MenuItem>\n            )\n          })}\n        </Select>\n      </NetworksFormControl>\n    ) : (\n      <></>\n    )\n  );\n}","import AccountCircleIcon from '@mui/icons-material/AccountCircle';\nimport { AppBar, Button, Chip, styled, Toolbar, tooltipClasses, Typography } from '@mui/material';\nimport React from 'react';\nimport { CommonConstants } from '../../../../common/constants';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { BootstrapTooltip } from '../../../common/components/tooltip';\nimport { LoginDialog } from '../../../main/components/login';\nimport { NetworkList } from '../../../main/components/network-list';\n\nconst Root = styled('div')(\n  ({ theme }) => `\n  flex-grow: 1;\n`);\n\nconst TitleTypography = styled(Typography)(\n  ({ theme }) => `\n  flex-grow: 1;\n  margin-left: 10px !important;\n`);\n\nexport const Header: React.FC = (props: any) => {\n  const context = useConnectedWeb3Context();\n  const [loginOpen, setLoginOpen] = React.useState(false);\n\n  const handleClickLogin = () => {\n    setLoginOpen(true);\n  };\n\n  const handleClickLogout = () => {\n    context.logout();\n  };\n\n  const handleLoginClose = () => {\n    setLoginOpen(false);\n  };\n\n  const truncateAddress = (address?: string) => {\n    return CommonUtil.truncateStringInTheMiddle(address, 10, 5)\n  }\n\n  return (\n    <Root>\n      <AppBar position=\"static\" color=\"primary\">\n        <Toolbar>\n          <a href=\"https://vivafi.org\"><img src={\"./vivalogo_white.svg\"} alt=\"logo\" width=\"64\" /></a>\n          <TitleTypography variant=\"h6\">\n            {CommonConstants.APP_NAME}\n          </TitleTypography>\n          <NetworkList></NetworkList>\n          {context.account ? (\n            <>\n              <BootstrapTooltip sx={{ [`& .${tooltipClasses.tooltip}`]: { maxWidth: \"none\" } }} title={context.account} placement=\"bottom\" arrow>\n                <Chip sx={{ color: \"white\", '& .MuiChip-icon': { color: \"white\" } }} icon={<AccountCircleIcon />} label={truncateAddress(context.account)} variant=\"outlined\" />\n              </BootstrapTooltip >\n              <Button color=\"inherit\" onClick={handleClickLogout}>\n                Logout\n              </Button>\n            </>\n          ) : (\n            <>\n              <Button color=\"inherit\" onClick={handleClickLogin}>\n                Login\n              </Button>\n              <LoginDialog open={loginOpen} setOpen={setLoginOpen} onClose={handleLoginClose}></LoginDialog>\n            </>\n          )}\n        </Toolbar>\n      </AppBar>\n    </Root >\n  )\n}","import React from 'react';\nimport { Box, Paper, Typography } from '@mui/material';\nimport { CommonUtil } from '../../../../util/common.util';\n\ninterface Props {\n  message: string\n  type: 'default' | 'warning'\n  error?: any\n  color?: string\n  backgroundColor?: string\n}\n\nexport const Alert: React.FC<Props> = (props: Props) => {\n  let color = '#000000';\n  let backgroundColor = 'rgba(255, 255, 255, 0.5)';\n\n  switch (props.type) {\n    case 'warning':\n      color = '#611a15';\n      backgroundColor = 'rgba(255, 0, 0, 0.1)';\n      break;\n    default:\n      break;\n  }\n\n  if (props.error) {\n    console.log(CommonUtil.toJsonString(props.error));\n  }\n\n  return (\n    <Paper>\n      <Box sx={{\n        color: props.color ?? color,\n        backgroundColor: props.backgroundColor ?? backgroundColor,\n        padding: '15px',\n        textAlign: 'center'\n      }}>\n        <Typography>{props.message}</Typography>\n      </Box>\n    </Paper>\n  );\n}\n","import { Checkbox, FormControl, FormControlLabel, FormGroup, Grid, InputLabel, MenuItem, Select, SelectChangeEvent, Stack, Switch, TextField, Typography } from \"@mui/material\";\nimport { useState } from \"react\";\nimport { DefaultPoolFilterValues, PoolSortTypes } from \"../../../../common/constants\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { PoolFilterValues } from \"../../../../util/types\";\n\nexport const PoolFilter: React.FC = () => {\n  const [values, setValues] = useState<PoolFilterValues>(DefaultPoolFilterValues);\n  const emitter = getEmitter();\n\n  const emitEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n    emitter.emitPoolFilterValuesChanged(oldValues, newValues);\n  }\n\n  const handleSortByChange = (event: SelectChangeEvent) => {\n    const newValues = { ...values, sortBy: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.value };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  const handleCheckedChange = (prop: keyof PoolFilterValues) => (event: React.ChangeEvent<HTMLInputElement>) => {\n    const newValues = { ...values, [prop]: event.target.checked };\n    setValues(newValues);\n    emitEvent(values, newValues);\n  };\n\n  return (\n    <Grid container justifyContent=\"center\" alignItems=\"center\" sx={{ mb: 2 }}>\n      <Grid item xs={12} md={10}>\n        <Grid container>\n          <Grid item xs sx={{ mr: 2 }}>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControlLabel control={<Checkbox\n                  checked={values.stakedOnly}\n                  onChange={handleCheckedChange('stakedOnly')} />} label=\"Staked only\" />\n                <Stack direction=\"row\" alignItems=\"center\" >\n                  <Typography>Ended</Typography>\n                  <Switch checked={values.showLive} onChange={handleCheckedChange('showLive')} />\n                  <Typography>Live</Typography>\n                </Stack>\n              </Stack>\n            </FormGroup>\n          </Grid>\n          <Grid item>\n            <FormGroup>\n              <Stack direction=\"row\" alignItems=\"center\" spacing={2}>\n                <FormControl size=\"small\" sx={{ minWidth: \"120px\" }}>\n                  <InputLabel id=\"sortby-select-label\">Sort by</InputLabel>\n                  <Select\n                    labelId=\"sortby-select-label\"\n                    id=\"sortby-select\"\n                    value={values.sortBy}\n                    label=\"Sort by\"\n                    onChange={handleSortByChange}\n                  >\n                    {PoolSortTypes.map(e => (\n                      <MenuItem key={e.type} value={e.type}>{e.name}&nbsp;</MenuItem>\n                    ))}\n                  </Select>\n                </FormControl>\n                <TextField\n                  id=\"search\"\n                  value={values.search}\n                  label=\"Search\"\n                  variant=\"outlined\"\n                  size=\"small\"\n                  autoComplete=\"off\"\n                  onChange={handleChange('search')}\n                />\n              </Stack>\n            </FormGroup>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Grid>\n  );\n}\n","import { MomentUtil } from \"../util/moment.util\";\n\nexport class MomentFactory {\n  private readonly _map: Map<string, MomentUtil>\n\n  constructor() {\n    this._map = new Map<string, MomentUtil>();\n  }\n\n  create(locale?: Maybe<string>): MomentUtil {\n    const _locale = locale ?? navigator.language;\n    let util = this._map.get(_locale);\n    if (!util) {\n      util = new MomentUtil(_locale);\n      this._map.set(_locale, util);\n    }\n    return util;\n  }\n}\n\nconst factory = new MomentFactory();\n\nexport const getMomentFactory = (): MomentFactory => {\n  return factory;\n}","import { orderBy, partition } from \"lodash\";\nimport { PoolSortTypes } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories/moment.factory\";\nimport { Pool, PoolFilterValues, PoolSortType } from \"./types\";\n\nexport abstract class FilterUtil {\n  static filterPools(filter: PoolFilterValues, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools) {\n      return pools;\n    }\n    const moment = getMomentFactory().create();\n    const [closedPools, openPools] = partition(pools, (pool) => pool.endTimestamp >= 0 && moment.get().unix() >= pool.endTimestamp);\n    let filtered: Pool[] = openPools;\n    if (filter.showLive) {\n      if (filter.stakedOnly) {\n        filtered = openPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = openPools;\n      }\n    } else {\n      if (filter.stakedOnly) {\n        filtered = closedPools.filter(e => !!e.userInfo && e.userInfo.stakingBalance.gt(0));\n      } else {\n        filtered = closedPools;\n      }\n    }\n    const sorted = FilterUtil.sortPools(filter.sortBy, filtered);\n    return FilterUtil.searchPools(filter.search, sorted);\n  }\n\n  static sortPools(sortBy: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !sortBy) {\n      return pools;\n    }\n    switch (sortBy) {\n      case PoolSortTypes[PoolSortType.APR].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.apr?.toNumber() ?? 0,\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.TOTAL_STAKED].type:\n        return orderBy(\n          pools,\n          (pool: Pool) => pool.totalStaked.toNumber(),\n          'desc',\n        )\n      case PoolSortTypes[PoolSortType.DEFAULT].type:\n      default:\n        return pools;\n    }\n  }\n\n  static searchPools(term: string, pools?: Maybe<Pool[]>): Maybe<Pool[]> {\n    if (!pools || !term) {\n      return pools;\n    }\n    const lowerCaseTerm = term.toLowerCase();\n    return pools.filter((pool: Pool) =>\n      pool.rewardToken.originalSymbol.toLowerCase().includes(lowerCaseTerm) || pool.stakingToken.originalSymbol.toLowerCase().includes(lowerCaseTerm)\n    );\n  }\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { CommonConstants } from \"../common/constants\";\nimport { getMomentFactory } from \"../factories\";\nimport { DEPOSIT_MUTATION, WITHDRAW_MUTATION } from \"../mutations\";\nimport { Deposit, DepositVariables } from \"../mutations/__generated__/Deposit\";\nimport { Withdraw, WithdrawVariables } from \"../mutations/__generated__/Withdraw\";\nimport { GET_POOL_QUERY, GET_POOL_USER_INFO_QUERY } from \"../queries\";\nimport { GetPool, GetPoolVariables } from \"../queries/__generated__/GetPool\";\nimport { GetPoolUserInfo, GetPoolUserInfoVariables } from \"../queries/__generated__/GetPoolUserInfo\";\nimport { getLogger } from \"../util/logger\";\nimport { MomentUtil } from \"../util/moment.util\";\nimport { Pool } from \"../util/types\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class PoolService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n  private readonly _moment: MomentUtil;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n    this._moment = getMomentFactory().create();\n  }\n\n  async getAsync(_id: number, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<Maybe<Pool>> {\n    try {\n      const poolQuery = await this._apollo.query<GetPool, GetPoolVariables>({\n        query: GET_POOL_QUERY,\n        variables: {\n          id: _id.toString()\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const userInfoQuery = await this._apollo.query<GetPoolUserInfo, GetPoolUserInfoVariables>({\n        query: GET_POOL_USER_INFO_QUERY,\n        variables: {\n          poolId: _id,\n          account: this._walletManager.getActiveAccount()?.address\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const pool = poolQuery.data.pool as unknown as Pool;\n      return {\n        ...pool,\n        userInfo: userInfoQuery.data.poolUserInfo,\n        fetchTimestamp: this._moment.get().unix()\n      }\n    } catch (error) {\n      logger.error(error)();\n    }\n  }\n\n  async depositAsync(_id: number, _tokenId: string, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Deposit, DepositVariables>({\n      mutation: DEPOSIT_MUTATION,\n      variables: {\n        id: _id.toString(),\n        tokenId: _tokenId,\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.deposit ?? false);\n  }\n\n  async withdrawAsync(_id: number, _amount: string): Promise<boolean> {\n    const result = await this._apollo.mutate<Withdraw, WithdrawVariables>({\n      mutation: WITHDRAW_MUTATION,\n      variables: {\n        id: _id.toString(),\n        amount: _amount\n      }\n    });\n    return Boolean(result.data?.withdraw ?? false);\n  }\n\n  updateRewardPerToken(pool: Maybe<Pool>, blockNumber: BigNumber): boolean {\n    if (!pool?.userInfo) {\n      return false;\n    }\n\n    const latestBlock = blockNumber.lt(pool.endBlock) ? blockNumber : pool.endBlock;\n\n    // rewardPerToken is global, so we only want to update once per timestamp/block.\n    // latestRewardBlock initially set to startBlock, so no updates before that.\n    if (latestBlock.lte(pool.latestRewardBlock)) {\n      return false;\n    }\n\n    // if staking balance is 0 over a period, the rewardPerToken should not increase.\n    if (pool.totalStaked.eq(new BigNumber(0))) {\n      pool.latestRewardBlock = latestBlock;\n      return true;\n    }\n\n    // increase rewardPerToken by reward amount over period since previous reward block.\n    const period = latestBlock.minus(pool.latestRewardBlock);\n    const latestReward = pool.rewardPerPeriod.times(period).times(CommonConstants.REWARD_FACTOR).div(pool.totalStaked);\n    pool.rewardPerToken = pool.rewardPerToken.plus(latestReward);\n\n    pool.latestRewardBlock = latestBlock;\n    return true;\n  }\n}\n\nconst service = new PoolService();\n\nexport const getPoolService = () => {\n  return service;\n}","import BigNumber from \"bignumber.js\";\nimport { CommonConstants } from \"../common/constants\";\nimport { Pool } from \"./types\";\n\nexport abstract class ViteUtil {\n  static calculateRewardTokens(pool: Maybe<Pool>): BigNumber {\n    if (!pool?.userInfo) {\n      return new BigNumber(0);\n    }\n    return (pool.userInfo.stakingBalance.times(pool.rewardPerToken).div(CommonConstants.REWARD_FACTOR).minus(pool.userInfo.rewardDebt));\n  }\n\n  // need converty if statement and return statement to use bignumber syntax probably\n  static calculateNetRewardTokens(pool: Maybe<Pool>, height: BigNumber): BigNumber {\n    if(!pool || height.lt(pool.startBlock)) {\n      return new BigNumber(0);\n    }\n    if( height.gte(pool.endBlock)){\n      return new BigNumber(pool.totalRewards);\n    }\n    return height.minus(pool.startBlock).div(pool.endBlock.minus(pool.startBlock)).times(pool.totalRewards);\n  }\n\n  static calculateTotalRewardTokens(pool: Maybe<Pool>, height: BigNumber): BigNumber {\n    if(!pool || height.lt(pool.startBlock)) {\n      return new BigNumber(0);\n    }\n    if( height.gte(pool.endBlock)){\n      return new BigNumber(pool.totalRewards);\n    }\n    return pool.totalRewards;\n  }\n\n  static formatBigNumber(bn: BigNumber, tokenDecimals: number, decimals: number): string {\n    return bn.div(new BigNumber(10).pow(tokenDecimals)).decimalPlaces(decimals, BigNumber.ROUND_DOWN).toFormat();\n  }\n}","import { LoadingButton } from '@mui/lab';\nimport React from 'react';\n\ninterface Props {\n  children: React.ReactNode\n  size?: 'small' | 'medium' | 'large'\n  variant?: 'text' | 'outlined' | 'contained'\n  color?: 'inherit' | 'primary' | 'secondary' | 'success' | 'error' | 'info' | 'warning',\n  fullWidth?: boolean\n  autoFocus?: boolean\n  disabled?: boolean\n  callbackFn: () => Promise<void>\n}\n\nexport const ClickOnceButton: React.FC<Props> = (props: Props) => {\n  const [isDisabled, setIsDisabled] = React.useState(false)\n\n  const handleClick = async () => {\n    setIsDisabled(true)\n    try {\n      await props.callbackFn()\n    } catch (error) {\n      console.log(error)\n    }\n    setIsDisabled(false)\n  }\n\n  return (\n    <LoadingButton\n      loading={isDisabled}\n      size={props.size ?? \"small\"}\n      variant={props.variant ?? \"contained\"}\n      color={props.color ?? \"primary\"}\n      fullWidth={props.fullWidth}\n      onClick={handleClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </LoadingButton>\n  );\n}\n","import { Skeleton, Typography, Tooltip } from \"@mui/material\";\nimport HelpIcon from '@mui/icons-material/Help';\nimport BigNumber from \"bignumber.js\";\nimport React, { useEffect, useMemo, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getMomentFactory } from \"../../../../factories\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  pool: Maybe<Pool>\n}\n\nexport const PoolCountdown: React.FC<Props> = (props: Props) => {\n  const [hasStarted, setHasStarted] = useState<boolean>(false);\n  const [remainingBlocks, setRemainingBlocks] = useState<BigNumber>(new BigNumber(0));\n  const [countdown, setCountdown] = useState<string>(\"\");\n  const moment = useMemo(() => getMomentFactory().create(), []);\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (props.pool?.endBlock) {\n        let remainingBlocks = new BigNumber(0);\n        if (height.lte(props.pool.startBlock)) {\n          setHasStarted(false);\n          remainingBlocks = props.pool.startBlock.minus(height);\n        } else {\n          setHasStarted(true);\n          remainingBlocks = props.pool.endBlock.minus(height);\n        }\n        if (remainingBlocks.gte(0)) {\n          setRemainingBlocks(remainingBlocks);\n          const duration = moment.getDuration(remainingBlocks.toNumber());\n          if (duration.months() > 0 ){\n            setCountdown(duration.months() + \" months \" + duration.days() + \" days \")\n          } else if (duration.days() > 0) {\n            setCountdown(duration.days() + \" days \" + duration.hours() + \" hours\")\n          } else if (duration.hours() > 0) {\n            setCountdown(duration.hours() + \" hours \" + duration.minutes() + \" minutes\")\n          } else if (duration.minutes() > 0) {\n            setCountdown(duration.minutes() + \" minutes \" + duration.seconds() + \" seconds\")\n          } else {\n            setCountdown(duration.seconds() + \" seconds\")\n          }\n        } else {\n          setRemainingBlocks(new BigNumber(0));\n          setCountdown(\"\");\n        }\n      }\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, moment, networkManager]);\n\n  return (\n    <>\n      <Typography variant=\"body2\" color=\"text.secondary\">\n        {hasStarted ? 'Ends in' : 'Starts in'} &nbsp;<Tooltip title=\"Based on current funds. The pool creator may extend the duration by depositing additional rewards\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n      </Typography>\n      {!props.pool ? (\n        <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n      ) : (\n        <>\n          {remainingBlocks.gt(0) ? (\n            <Typography variant=\"subtitle1\">\n              {remainingBlocks.toString()} Blocks\n              <Typography variant=\"body2\" color=\"text.secondary\" display=\"inline\" sx={{ ml: 1 }}>\n                {countdown}\n              </Typography>\n            </Typography>\n          ) : (\n            <Typography variant=\"subtitle1\">-</Typography>\n          )}\n        </>\n      )}\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport { BigNumber } from 'bignumber.js';\nimport React, { useEffect, useState } from 'react';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDepositDialog: React.FC<Props> = (props: Props) => {\n  const [amount, setAmount] = useState<string>(\"\");\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(parseInt(amount) < parseInt(ViteUtil.formatBigNumber(props.pool.minimumDeposit, props.pool.stakingToken.decimals, 1).replace(/,/g,'')) || CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(\"\")\n    }\n  }, [props.state])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.depositAsync(props.pool.id, props.pool.stakingToken.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Stake</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Earn {props.pool.rewardToken.originalSymbol} by staking {props.pool.stakingToken.originalSymbol}.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n        <DialogContentText>\n        <br/>\n        Note: { props.pool.minimumDeposit.gt(0) ? (<span>Minimum Stake is {ViteUtil.formatBigNumber(props.pool.minimumDeposit, props.pool.rewardToken.decimals, 1)}.</span>) : null } Pending rewards will be automatically claimed.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}","import { ApolloClient, FetchPolicy, NormalizedCacheObject } from \"@apollo/client\";\nimport BigNumber from \"bignumber.js\";\nimport { getApolloClient } from \"../clients/apollo.client\";\nimport { GET_ACCOUNT_BALANCE_QUERY } from \"../queries\";\nimport { GetAccountBalance, GetAccountBalanceVariables } from \"../queries/__generated__/GetAccountBalance\";\nimport { CommonUtil } from \"../util/common.util\";\nimport { getLogger } from \"../util/logger\";\nimport { getWalletManager, WalletManager } from \"../wallet\";\n\nconst logger = getLogger();\n\nexport class AccountService {\n  private readonly _apollo: ApolloClient<NormalizedCacheObject>;\n  private readonly _walletManager: WalletManager;\n\n  constructor() {\n    this._apollo = getApolloClient();\n    this._walletManager = getWalletManager();\n  }\n\n  async getBalanceAsync(_account?: Maybe<string>, _fetchPolicy: FetchPolicy = \"network-only\"): Promise<BigNumber> {\n    try {\n      const account = _account ?? this._walletManager.getActiveAccount()?.address;\n      if (!account || CommonUtil.isNullOrWhitespace(account)) {\n        return new BigNumber(0);\n      }\n      const poolQuery = await this._apollo.query<GetAccountBalance, GetAccountBalanceVariables>({\n        query: GET_ACCOUNT_BALANCE_QUERY,\n        variables: {\n          account\n        },\n        fetchPolicy: _fetchPolicy\n      });\n      const balance = poolQuery.data.accountBalance as unknown as BigNumber;\n      return balance;\n    } catch (error) {\n      logger.error(error)();\n      return new BigNumber(0);\n    }\n  }\n}\n\nconst service = new AccountService();\n\nexport const getAccountService = () => {\n  return service;\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, FormControl, Input, InputAdornment, InputLabel } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { getAccountService } from '../../../../services/account.service';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { CommonUtil } from '../../../../util/common.util';\nimport { getLogger } from '../../../../util/logger';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState } from '../../../../util/types';\nimport { ViteUtil } from '../../../../util/vite.util';\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\n\nconst logger = getLogger();\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolWithdrawDialog: React.FC<Props> = (props: Props) => {\n  const getStakedAmount = useCallback(() => {\n    if (props.pool.userInfo?.stakingBalance.gt(0)) {\n      return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, 18).replace(/,/g, '')\n    }\n    return \"\"\n  }, [props.pool])\n\n  const [amount, setAmount] = useState<string>(getStakedAmount());\n  const [disabled, setDisabled] = useState<boolean>(false);\n  const accountService = getAccountService();\n  const poolService = getPoolService();\n\n  const changeAmount = (amount: string) => {\n    setAmount(amount);\n    setDisabled(CommonUtil.isNullOrWhitespace(amount) || new BigNumber(amount).lte(0));\n  }\n\n  useEffect(() => {\n    if (props.state.open) {\n      changeAmount(getStakedAmount())\n    }\n  }, [props.state, getStakedAmount])\n\n  useEffect(() => {\n    async function getBalanceAsync() {\n      const balance = await accountService.getBalanceAsync();\n      logger.info(\"Account balance:\", balance.toString())();\n    }\n    if (props.state.open) {\n      getBalanceAsync();\n    }\n  }, [props.state, accountService])\n\n  const handleClose = () => {\n    props.setState({\n      ...props.state,\n      open: false\n    })\n  };\n\n  const handleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    changeAmount(event.target.value);\n  };\n\n  const handleConfirmAsync = async () => {\n    try {\n      const _amount = new BigNumber(amount).times(new BigNumber(10).pow(props.pool.stakingToken.decimals));\n      await poolService.withdrawAsync(props.pool.id, _amount.toString());\n      handleClose();\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <Dialog onClose={handleClose} open={props.state.open} maxWidth=\"xs\" fullWidth>\n      <DialogTitle>Withdraw</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Enter the {props.pool.stakingToken.originalSymbol} amount to withdraw.\n        </DialogContentText>\n        <FormControl fullWidth sx={{ mt: 2 }} variant=\"standard\" >\n          <InputLabel htmlFor=\"contribute-amount\">Amount</InputLabel>\n          <Input\n            id=\"contribute-amount\"\n            value={amount}\n            onChange={handleChange}\n            type=\"number\"\n            autoFocus\n            startAdornment={<InputAdornment position=\"start\">${props.pool.stakingToken.symbol}</InputAdornment>}\n          />\n        </FormControl>\n        <DialogContentText>\n        <br/>  \n        Note: Pending rewards will be automatically claimed.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose}>Cancel</Button>\n        <ClickOnceButton size=\"medium\" color=\"primary\" callbackFn={handleConfirmAsync} disabled={disabled}>\n          Confirm\n        </ClickOnceButton>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import * as React from 'react';\nimport { Pool, PoolDialogState, PoolDialogType } from '../../../../util/types';\nimport { PoolDepositDialog } from '../dialog-deposit';\nimport { PoolWithdrawDialog } from '../dialog-withdraw';\n\ninterface Props {\n  pool: Pool\n  state: PoolDialogState\n  setState: React.Dispatch<React.SetStateAction<PoolDialogState>>\n}\n\nexport const PoolDialog: React.FC<Props> = (props: Props) => {\n  switch (props.state.type) {\n    case PoolDialogType.WITHDRAW:\n      return <PoolWithdrawDialog pool={props.pool} state={props.state} setState={props.setState}></PoolWithdrawDialog>\n    case PoolDialogType.DEPOSIT:\n      return <PoolDepositDialog pool={props.pool} state={props.state} setState={props.setState}></PoolDepositDialog>\n    default:\n      return <></>\n  }\n}\n","import BigNumber from \"bignumber.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from \"../../../../common/network\";\nimport { getPoolService } from \"../../../../services/pool.service\";\nimport { Pool } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\n\ninterface Props {\n  pool: Maybe<Pool>\n  account?: Maybe<string>\n  decimals: number\n  setCanClaim?: React.Dispatch<React.SetStateAction<boolean>>\n}\n\nexport const Rewards: React.FC<Props> = (props: Props) => {\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const [rewardTokens, setRewardTokens] = useState<BigNumber>(new BigNumber(0));\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n\n  useEffect(() => {\n    setPool(props.pool);\n  }, [props.pool]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    if (pool) {\n      const newRewardTokens = ViteUtil.calculateRewardTokens(pool);\n      setRewardTokens(newRewardTokens);\n      if (props.setCanClaim) {\n        props.setCanClaim(!!props.pool && !!props.account && newRewardTokens.gt(0));\n      }\n    } else {\n      setRewardTokens(new BigNumber(0));\n      if (props.setCanClaim) {\n        props.setCanClaim(false);\n      }\n    }\n  }, [pool, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      const height = networkManager.networkHeight;\n      if (pool) {\n        const updated = poolService.updateRewardPerToken(pool, height);\n        if (updated) {\n          const newPool: Pool = {\n            ...pool\n          }\n          setPool(newPool);\n        }\n      }\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, poolService, networkManager]);\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(rewardTokens, pool.rewardToken.decimals, decimals);\n  }\n\n  return (\n    <>\n      {showRewardTokens(props.decimals)}\n    </>\n  );\n}","import { Avatar, Badge, Grid, Skeleton, styled, Typography } from \"@mui/material\";\nimport React from \"react\";\nimport { getCoinUtil } from \"../../../../util/coin.util\";\nimport { Pool } from \"../../../../util/types\";\n\ninterface Props {\n  loading: boolean\n  pool: Maybe<Pool>\n}\n\nexport const Tokens: React.FC<Props> = (props: Props) => {\n  const BigCoin = styled(Avatar)(({ theme }) => ({\n    width: 50,\n    height: 50,\n    backgroundColor: \"white\",\n    border: \"1px solid black\"\n  }));\n  const SmallCoin = styled(Avatar)(({ theme }) => ({\n    width: 30,\n    height: 30,\n    backgroundColor: \"white\",\n    border: `1px solid ${theme.palette.grey[600]}`\n  }));\n  const coinUtil = getCoinUtil();\n\n  return (\n    <Grid container alignItems=\"center\" spacing={2}>\n      <Grid item>\n        <Badge\n          overlap=\"circular\"\n          anchorOrigin={{ vertical: \"bottom\", horizontal: \"right\" }}\n          badgeContent={\n            <SmallCoin alt={props.pool?.stakingToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.stakingToken.iconUrl)} />\n          }\n        >\n          <BigCoin alt={props.pool?.rewardToken.originalSymbol} src={coinUtil.mapIconUrl(props.pool?.rewardToken.iconUrl)} />\n        </Badge>\n      </Grid>\n      <Grid item>\n        {props.loading ? (\n          <>\n            <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n            <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n          </>\n        ) : (\n          <>\n            <Typography variant=\"subtitle1\">\n              Earn {props.pool?.rewardToken.originalSymbol}\n            </Typography>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              Stake {props.pool?.stakingToken.originalSymbol}\n            </Typography>\n          </>\n        )}\n      </Grid>\n    </Grid >\n  );\n}","import ExpandMoreIcon from '@mui/icons-material/ExpandMore';\nimport OpenInNewIcon from '@mui/icons-material/OpenInNew';\nimport HelpIcon from '@mui/icons-material/Help';\nimport { Accordion, AccordionDetails, AccordionSummary, Box, Button, Grid, Link, Paper, Skeleton, styled, Tooltip, Typography, Alert } from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { getNetworkManager } from '../../../../common/network';\nimport { getPoolService } from '../../../../services/pool.service';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { getLogger } from \"../../../../util/logger\";\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Pool, PoolDialogState, PoolDialogType } from \"../../../../util/types\";\nimport { ViteUtil } from \"../../../../util/vite.util\";\nimport { ClickOnceButton } from '../../../common/components/click-once-button';\nimport { PoolCountdown } from \"../countdown\";\nimport { PoolDialog } from \"../dialog\";\nimport { Rewards } from '../rewards';\n//import { NetRewards } from '../netrewards';\nimport { Tokens } from \"../tokens\";\nimport BigNumber from 'bignumber.js';\nimport { ProgressBar } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\n\nconst logger = getLogger()\n\nconst TransparentPaper = styled(Paper)(\n  ({ theme }) => ({\n    padding: theme.spacing(2),\n    paddingTop: theme.spacing(1),\n    backgroundColor: \"transparent\"\n  }));\n\ninterface Props {\n  account?: Maybe<string>\n  pool?: Maybe<Pool>\n}\n\nexport const PoolListItem: React.FC<Props> = (props: Props) => {\n  const [dialogState, setDialogState] = useState<PoolDialogState>({\n    type: PoolDialogType.DEPOSIT,\n    open: false\n  });\n  const [canStake, setCanStake] = useState<boolean>(false);\n  const [canClaim, setCanClaim] = useState<boolean>(false);\n  const [canWithdraw, setCanWithdraw] = useState<boolean>(false);\n  const [pool, setPool] = useState<Maybe<Pool>>(props.pool);\n  const emitter = getEmitter();\n  const poolService = getPoolService();\n  const networkManager = getNetworkManager();\n  const network = networkManager.getNetwork();\n  const [newRewards, setNewRewards] = useState<BigNumber>(new BigNumber(0));\n  const [lock, setLock] = useState<Number>(0);  \n\n\n  useEffect(() => {\n    if (props.pool) {\n      logger.info(`Pool loaded: ${props.pool?.id}`)();\n      setCanWithdraw(!!props.pool && !!props.account && (props.pool.userInfo?.stakingBalance.gt(0) ?? false));\n    } else {\n      setCanWithdraw(false);\n    }\n\n    if (props.pool?.lockTime !== undefined) {\n      let lockTime = props.pool.lockTime.toNumber();\n      if (lockTime > 0) {\n        if (props.pool.id === 20 && network?.name === \"MAINNET v0.4\") {\n          setLock(0);\n        } else {\n          lockTime = lockTime / 60 / 60 / 24;\n          if (lockTime < 1) {\n            setLock(0);\n          } else {\n            setLock(lockTime);\n          }\n        }\n      } else {\n        setLock(0);\n      }\n    } else {\n      setLock(0);\n    }\n  }, [props.pool, props.account, network?.name]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n      //setCanStake(false); // quick fix to prevent more staking.\n      const tempnetwork = networkManager.getNetwork();\n\tsetCanStake(!!props.pool && !!props.account && !!tempnetwork && (tempnetwork.name !== \"MAINNET v0.2\") && !((tempnetwork.name === \"MAINNET v0.4\") && (props.pool.id === 85)) );\n    }, 500);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [props.pool, props.account, networkManager]);\n\n  useEffect(() => {\n    if (props.pool) {\n      const height = networkManager.networkHeight;\n      const newRewards = ViteUtil.calculateNetRewardTokens(pool, height);\n      setNewRewards(newRewards);\n    } else {\n      setNewRewards(new BigNumber(0));\n    }\n  }, [pool, networkManager, props]);\n\n  useEffect(() => {\n    let interval = setInterval(() => {\n\n      if (props.pool) {\n        const height = networkManager.networkHeight;\n        const newRewards = ViteUtil.calculateNetRewardTokens(pool, height);\n        setNewRewards(newRewards);\n      } else {\n        setNewRewards(new BigNumber(0));\n      }\n\n    }, 3000);\n    return () => {\n      clearInterval(interval);\n    }\n  }, [pool, networkManager]);\n\n  \n\n  const showApr = (): Maybe<string> => {\n    if (!props.pool || !props.pool.apr) {\n      return \"-\";\n    }\n    if (props.pool.apr.eq(new BigNumber(0))){\n      return \"-\";\n    }\n    return props.pool.apr.toFormat(2) + '%';\n  }\n\n  const showTotalStaked = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalStaked, props.pool.stakingToken.decimals, 2);\n  }\n\n  const showTotalRewards = (): string => {\n    if (!props.pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.totalRewards, props.pool.rewardToken.decimals, 2);\n  }\n\n  const showTotalInt = () => {\n    var str =showTotalRewards();\n    str = str.replace(/,/g, \"\");\n    return parseFloat(str);\n  }\n\n  const showRewardTokens = (decimals: number): string => {\n    if (!pool) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(newRewards, pool.rewardToken.decimals, decimals);\n  }\n\n  const showNetInt = (decimals: number) => {\n    var str = showRewardTokens(decimals);\n    str = str.replace(/,/g, \"\");\n    return parseFloat(str);\n  }\n\n  const showPercentage = (decimals: number) => {\n    return Math.round(10*100*showNetInt(decimals) / showTotalInt())/10;\n  }\n\n  const showStaked = (decimals: number): string => {\n    if (!props.pool?.userInfo) {\n      return \"0\";\n    }\n    return ViteUtil.formatBigNumber(props.pool.userInfo.stakingBalance, props.pool.stakingToken.decimals, decimals);\n  }\n\n  const handleConnectWallet = () => {\n    emitter.emitConnectWalletDialog(true);\n  }\n\n  const handleClickDeposit = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.DEPOSIT,\n      open: true\n    })\n  }\n\n  const handleClickWithdraw = () => {\n    setDialogState({\n      ...dialogState,\n      type: PoolDialogType.WITHDRAW,\n      open: true\n    })\n  }\n\n  const handleClickClaimAsync = async () => {\n    try {\n      if (props.pool) {\n        await poolService.withdrawAsync(props.pool.id, \"0\");\n      }\n    } catch (error) {\n      SnackbarUtil.enqueueError(error);\n    }\n  }\n\n  return (\n    <>\n      <Accordion defaultExpanded>\n        <AccordionSummary sx={{ backgroundColor: \"rgba(217, 217, 217, 0.1)\" }} expandIcon={<ExpandMoreIcon />}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item>\n              <Tokens loading={!props.pool} pool={props.pool}></Tokens>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item xs container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item>\n                  {!props.pool ? (\n                    <>\n                      <Skeleton animation=\"wave\" height={25} width=\"90px\" />\n                      <Skeleton animation=\"wave\" height={25} width=\"70px\" />\n                    </>\n                  ) : (\n                    <>\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Total {props.pool?.rewardToken.originalSymbol} earned&nbsp;<Tooltip title=\"Total earned by all users since pool start\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n                      </Typography>\n                      <Typography variant=\"subtitle1\">\n                        {showRewardTokens(3)} / {showTotalRewards()}\n            \n                      </Typography>\n                      <ProgressBar variant=\"success\" now={showPercentage(4)} />\n                      <Typography variant=\"body2\" color=\"text.secondary\">            \n                        {showPercentage(2)}% earned    \n                      </Typography>\n                    </>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    APR&nbsp;<Tooltip title=\"Annual Percentage Rate - APR is only shown for coins with a known value\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"60px\" />\n                  ) : (\n                    <Typography variant=\"subtitle1\">\n                      {props.pool.apr ? (\n                        <>\n                          {showApr()}\n                        </>\n                      ) : (\n                        <>\n                          -\n                        </>\n                      )}\n                    </Typography>\n                  )}\n                </Grid>\n                <Grid item>\n                  <Typography variant=\"body2\" color=\"text.secondary\">\n                    Total {props.pool?.stakingToken.originalSymbol} staked&nbsp;<Tooltip title=\"Total staked by all users\" placement=\"top\"><HelpIcon fontSize=\"small\"></HelpIcon></Tooltip>\n                  </Typography>\n                  {!props.pool ? (\n                    <Skeleton animation=\"wave\" height={25} width=\"120px\" />\n                  ) : (\n                    <div>\n                    <Typography variant=\"subtitle1\">\n                      {showTotalStaked()}\n                    </Typography>\n                    \n                    </div>\n                  \n                  )}\n                </Grid>\n                <Grid item>\n                  <PoolCountdown pool={props.pool} />\n                </Grid>\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionSummary>\n        { network?.name === \"MAINNET v0.2\" ? (<Alert severity=\"error\">For the safety of your assets, unstake from these pools and use v0.3 pools.</Alert>) : null }\n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 3 ? (<Alert severity=\"warning\">This pool is broken and wont provide rewards, <strong>UNSTAKE</strong> and use the other EARN BTC pool! See Discord for more info.</Alert>) : null }\n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 8 ? (<Alert severity=\"success\">Use this <strong>NEW</strong> pool for BTC rewards!</Alert>) : null }\n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 20 ? (<Alert severity=\"info\">This is a <strong>LOCKED</strong> pool. Deposits are locked for <strong>24 hours</strong> after depositing.</Alert>) : null }\n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 29 ? (<Alert severity=\"info\">This pool has a deposit <strong>MINIMUM</strong> of 1 million Viva.</Alert>) : null }           \n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 30 ? (<Alert severity=\"info\">This pool has a deposit <strong>MINIMUM</strong> of 500,000 Viva.</Alert>) : null }   \n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 59 ? (<Alert severity=\"info\">This pool has a deposit <strong>MINIMUM</strong> of 2,000 Viva.</Alert>) : null } \n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 65 ? (<Alert severity=\"info\">This pool has a deposit <strong>MINIMUM</strong> of 2,000 Viva.</Alert>) : null }   \n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 66 ? (<Alert severity=\"info\">This pool has a deposit <strong>MINIMUM</strong> of 1,000,000 ViCat.</Alert>) : null }   \n        \n        { network?.name === \"MAINNET v0.4\" && props?.pool?.id === 105 ? (<Alert severity=\"info\">This pool has a deposit <strong>MAXIMUM</strong> of 12,000,000,000,000 CENT.</Alert>) : null }\n        \n        { lock > 0 ? (<Alert severity=\"info\">This is a <strong>LOCKED</strong> pool. Deposits and rewards cannot be withdrawn until the the pool ends <strong>(max {lock} days)</strong>.</Alert>) : null }\n        \n        <AccordionDetails sx={{ backgroundColor: \"rgba(217, 217, 217, 0.3)\", pt: 2 }}>\n          <Grid container justifyContent=\"center\" alignItems=\"center\" spacing={2}>\n            <Grid item sx={{ mr: 4 }}>\n              <Link underline=\"none\" href={props.pool?.rewardToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.rewardToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n              <Link underline=\"none\" href={props.pool?.stakingToken.url ?? \"#\"} target=\"_blank\" sx={{ cursor: \"pointer\", display: \"flex\", alignItems: \"center\" }}>\n                View {props.pool?.stakingToken.originalSymbol}&nbsp;<OpenInNewIcon fontSize=\"small\"></OpenInNewIcon>\n              </Link>\n            </Grid>\n            <Grid item xs container alignItems=\"center\">\n              <Grid item container justifyContent=\"space-evenly\" direction=\"row\" spacing={2}>\n                <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                  <TransparentPaper variant=\"outlined\">\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      {props.pool?.rewardToken.originalSymbol} earned since last claim\n                    </Typography>\n                    <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      {!props.pool ? (\n                        <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                      ) : (\n                        <Typography sx={{ width: \"100%\" }} noWrap>\n                          <Rewards pool={props.pool} decimals={18} account={props.account} setCanClaim={setCanClaim}></Rewards>\n                        </Typography>\n                      )}\n                      <Box sx={{ ml: 2 }} >\n                        <ClickOnceButton variant=\"contained\" size=\"large\" callbackFn={handleClickClaimAsync} disabled={!canClaim}>\n                          Claim\n                        </ClickOnceButton>\n                      </Box>\n                    </Box>\n                  </TransparentPaper>\n                </Grid>\n                {!props.account ? (\n                  <Grid item xs={12} md={6} lg={5}>\n                    <TransparentPaper variant=\"outlined\">\n                      <Typography variant=\"body2\" color=\"text.secondary\">\n                        Start staking\n                      </Typography>\n                      <Button variant=\"contained\" size=\"large\" fullWidth disabled={!props.pool} onClick={handleConnectWallet}>Connect wallet</Button>\n                    </TransparentPaper>\n                  </Grid>\n                ) : (\n                  <>\n                    <Grid item xs={12} md={6} lg={5} zeroMinWidth>\n                      <TransparentPaper variant=\"outlined\">\n                        <Typography variant=\"body2\" color=\"text.secondary\">\n                        {props.pool?.stakingToken.originalSymbol} Staked\n                        </Typography>\n                        <Box sx={{ display: \"flex\", alignItems: \"center\" }}>\n                          {!props.pool ? (\n                            <Skeleton animation=\"wave\" height={30} width=\"100%\" />\n                          ) : (\n                            <Typography sx={{ width: \"100%\" }} noWrap>\n                              {showStaked(18)}\n                            </Typography>\n                          )}\n                          <Tooltip\n                          title=\"+ automatically claim pending rewards\"\n                          placement=\"bottom\">\n                          <Button variant=\"contained\" size=\"large\" sx={{ ml: 2 }} onClick={handleClickWithdraw} disabled={!canWithdraw}>\n                            Withdraw\n                          </Button>\n                          </Tooltip>\n                        </Box>\n                      </TransparentPaper>\n                    </Grid>\n                    <Grid item xs={12} md sx={{ display: \"flex\", alignItems: \"center\" }}>\n                      <Tooltip\n                          title=\"+ automatically claim pending rewards\"\n                          placement=\"bottom\">\n                      <Button variant=\"contained\" size=\"large\" fullWidth onClick={handleClickDeposit} disabled={!canStake}>\n                        Stake\n                      </Button>\n                      </Tooltip>\n                    </Grid>\n                  </>\n                )}\n              </Grid>\n            </Grid>\n          </Grid>\n        </AccordionDetails>\n      </Accordion>\n      {props.pool && (\n        <PoolDialog pool={props.pool} state={dialogState} setState={setDialogState}></PoolDialog>\n      )}\n    </>\n  );\n}\n","import { Grid } from \"@mui/material\";\nimport BigNumber from \"bignumber.js\";\nimport { useEffect, useState } from \"react\";\nimport { DefaultPoolFilterValues } from \"../../../../common/constants\";\nimport { getCommonContext } from \"../../../../contexts/common\";\nimport { getEmitter } from \"../../../../util/emitter.util\";\nimport { FilterUtil } from \"../../../../util/filter.util\";\nimport { getLogger } from \"../../../../util/logger\";\nimport { GlobalEvent, Pool, PoolFilterValues } from \"../../../../util/types\";\nimport { Alert } from \"../../../common/components/alert\";\nimport { PoolListItem } from \"../list-item\";\n\nconst logger = getLogger()\n\ninterface Props {\n  account?: Maybe<string>\n  pools?: Maybe<Pool[]>\n}\n\nexport const PoolList: React.FC<Props> = (props: Props) => {\n  const [isLoading, setIsLoading] = useState<boolean>(true)\n  const [allPools, setAllPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [pools, setPools] = useState<Maybe<Pool[]>>(props.pools)\n  const [filter, setFilter] = useState<PoolFilterValues>(DefaultPoolFilterValues)\n  const emitter = getEmitter()\n  const commonContext = getCommonContext()\n\n  useEffect(() => {\n    if (props.pools) {\n      setIsLoading(false)\n    } else {\n      setIsLoading(true)\n    }\n    setAllPools(props.pools)\n  }, [props.pools])\n\n  useEffect(() => {\n    setPools(FilterUtil.filterPools(filter, allPools))\n  }, [allPools, filter])\n\n  useEffect(() => {\n    const handleEvent = (oldValues: PoolFilterValues, newValues: PoolFilterValues) => {\n      setFilter(newValues)\n    }\n    emitter.on(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolFilterValuesChanged)()\n      emitter.off(GlobalEvent.PoolFilterValuesChanged, handleEvent)\n    };\n  }, [emitter])\n\n  useEffect(() => {\n    const replacePool = (pool: Pool) => {\n      if (allPools && pool) {\n        const index = allPools.findIndex(e => e.id === pool.id)\n        if (index >= 0) {\n          // Replace existing\n          const updatedPools = [...allPools]\n          updatedPools[index] = {\n            ...pool\n          }\n          setAllPools(updatedPools)\n        } else {\n          // Prepend to existing pools\n          setAllPools([pool, ...allPools])\n        }\n      }\n    }\n    const handlePoolEvent = async (id: number, amount: BigNumber, account: string) => {\n      const pool = await commonContext.datasource.getPoolAsync(id, props.account)\n      replacePool(pool)\n    }\n    emitter.on(GlobalEvent.PoolDeposit, handlePoolEvent)\n    emitter.on(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    return () => {\n      logger.info('emitter.off', GlobalEvent.PoolDeposit)()\n      emitter.off(GlobalEvent.PoolDeposit, handlePoolEvent)\n      emitter.off(GlobalEvent.PoolWithdraw, handlePoolEvent)\n    };\n  }, [emitter, allPools, commonContext, props.account])\n\n  if (!isLoading && pools && pools.length <= 0) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message=\"No pools found.\" type=\"default\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <Grid container direction=\"row\" justifyContent=\"center\" alignItems=\"center\" spacing={3}>\n      {isLoading ? (\n        <>\n          {[0, 1, 2].map((index: number) => (\n            <Grid item key={index} xs={12} md={10}>\n              <PoolListItem></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      ) : (\n        <>\n          {pools?.map((p: Pool) => (\n            <Grid item key={p.id} xs={12} md={10}>\n              <PoolListItem account={props.account} pool={p}></PoolListItem>\n            </Grid>\n          ))}\n        </>\n      )}\n    </Grid>\n  );\n}\n","import React from 'react';\nimport {Button, styled, Typography, Alert } from '@mui/material';\n\nconst HeroContent = styled('div')({\n  background: 'url(\"./watermelon.jpeg\") left center',\n  boxShadow: '0px 0px 20px #AAA',\n  borderRadius: '4px',\n  height: 240,\n  width: '100%',\n  padding: 40,\n  margin: 0\n});\n\nexport const Hero = () => {\n  return (\n    <>\n      { <Alert severity=\"success\">Welcome to our v0.5 pools!</Alert> }\n      <HeroContent>\n          <Typography variant=\"h4\" align=\"left\" color=\"textSecondary\" paragraph>\n            Juicy Rewards!\n          </Typography>\n          <Typography align=\"left\" fontSize=\"large\" color=\"textSecondary\" maxWidth=\"sm\" paragraph>\n            Stake in Viva pools to earn rewards! No fees, instant staking! <br/>\n            A healthy way to earn with your crypto.\n          </Typography>\n      </HeroContent>\n    </>\n  );\n}\n","import { useQuery } from '@apollo/client';\nimport { Container, Grid } from '@mui/material';\nimport React from 'react';\nimport { useConnectedWeb3Context } from '../../../../contexts/connectedWeb3';\nimport { GET_POOLS_QUERY } from '../../../../queries';\nimport { GetPools, GetPoolsVariables } from '../../../../queries/__generated__/GetPools';\nimport { Pool } from '../../../../util/types';\nimport { Alert } from '../../../common/components/alert';\nimport { PoolFilter } from '../filter';\nimport { PoolList } from '../list';\nimport { Hero } from '../hero'\n\nexport const Pools: React.FC = () => {\n  const context = useConnectedWeb3Context();\n  const poolQuery = useQuery<GetPools, GetPoolsVariables>(GET_POOLS_QUERY, {\n    variables: {\n      account: context.account\n    },\n    fetchPolicy: 'network-only'\n  });\n\n  const error = poolQuery.error\n\n  if (error) {\n    return (\n      <Grid item key=\"1\" xs={12} md={6}>\n        <Alert message={error.message} type=\"warning\"></Alert>\n      </Grid>\n    );\n  }\n\n  return (\n    <>\n    <Hero></Hero>\n    <Container sx={{ pt: 6, pb: 6 }} maxWidth=\"lg\">\n      \n      <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\n        \n        <PoolFilter></PoolFilter>\n        <PoolList account={context.account} pools={poolQuery.data?.pools as Maybe<Pool[]>}></PoolList>\n      </Grid>\n    </Container>\n    </>\n  );\n}","import { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@mui/material';\nimport { TransitionProps } from '@mui/material/transitions';\nimport React, { useEffect, useState } from 'react';\nimport { getEmitter } from '../../../../util/emitter.util';\nimport { GlobalEvent } from '../../../../util/types';\n\nconst Transition = React.forwardRef(function Transition(\n  props: TransitionProps & { children?: React.ReactElement<any, any> },\n  ref: React.Ref<unknown>,\n) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nexport const ConfirmTransactionDialog: React.FC = () => {\n  const [open, setOpen] = useState(false);\n  const emitter = getEmitter();\n\n  useEffect(() => {\n    const handleEvent = (open: boolean) => {\n      setOpen(open)\n    }\n    emitter.on(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    return () => {\n      emitter.off(GlobalEvent.ConfirmTransactionDialog, handleEvent)\n    };\n  }, [emitter, setOpen])\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <Dialog\n      open={open}\n      TransitionComponent={Transition}\n      keepMounted\n      onClose={handleClose}\n      style={{ zIndex: 9999 }}\n    >\n      <DialogTitle>ViteConnect</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Please confirm transaction on VITE Wallet App\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={handleClose} color=\"primary\">\n          Close\n        </Button>\n      </DialogActions>\n    </Dialog>\n  )\n}\n","import { useQuery } from '@apollo/client';\nimport { useEffect } from 'react';\nimport { getNetworkManager } from '../../../../common/network';\nimport { GET_NETWORK_BLOCK_HEIGHT_QUERY } from '../../../../queries';\nimport { GetNetworkBlockHeight } from '../../../../queries/__generated__/GetNetworkBlockHeight';\nimport { getEmitter } from '../../../../util/emitter.util';\n\nexport const Network: React.FC = () => {\n  const networkManager = getNetworkManager();\n  const emitter = getEmitter();\n  const query = useQuery<GetNetworkBlockHeight>(GET_NETWORK_BLOCK_HEIGHT_QUERY, {\n    fetchPolicy: 'network-only'\n  });\n\n  useEffect(() => {\n    let interval = setInterval(async () => {\n      await query.refetch();\n      if (query.data?.networkBlockHeight) {\n        const height = query.data.networkBlockHeight;\n        emitter.emitNetworkBlockHeightChanged(height);\n        networkManager.networkHeight = height;\n      }\n    }, 1000)\n    return () => {\n      clearInterval(interval);\n    }\n  })\n\n  return (\n    <>\n    </>\n  )\n}\n","import * as React from 'react';\nimport Button from '@mui/material/Button';\nimport Dialog from '@mui/material/Dialog';\nimport Alert from '@mui/material/Alert';\nimport DialogActions from '@mui/material/DialogActions';\nimport DialogContent from '@mui/material/DialogContent';\nimport DialogContentText from '@mui/material/DialogContentText';\nimport DialogTitle from '@mui/material/DialogTitle';\n\nexport const WarningDialog: React.FC = () => {\n  const [open, setOpen] = React.useState(true);\n\n  const handleClick = () => {\n    setOpen(false);\n  }\n\n  const handleClose = (event:Object, reason:String) => {\n    if (reason !== 'backdropClick') {\n      setOpen(false);\n    }\n  };\n\n\n  \n  return (\n    <>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">\n          {\"Disclaimer\"}\n        </DialogTitle>\n        <DialogContent>\n          <Alert severity=\"info\">Welcome to Viva! Please read the following before using Viva.</Alert>\n          <br/>\n          <DialogContentText id=\"alert-dialog-description\">\n          Viva is an open source decentralized application operating on the Vite blockchain. As with all early-stage products there are risks associated with using the protocol and users assume the full responsibility for these risks. You should not deposit any money you are not comfortable losing. You also agree that you are following any local or federal laws for the country you reside in.\n          <br/><br/>\n          THE VIVA PROTOCOL AND ACCESS TO THE PROTOCOL IS PROVIDED \"AS IS\", AT YOUR OWN RISK, AND WITHOUT WARRANTIES OF ANY KIND.\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button href=\"https://vivafi.org\">Disagree</Button>\n          <Button onClick={handleClick} autoFocus>\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}","import { useSnackbar } from 'notistack';\nimport React from 'react';\nimport { SnackbarUtil } from '../../../../util/snackbar.util';\nimport { Footer } from '../../../layout/components/footer';\nimport { Header } from '../../../layout/components/header';\nimport { MainScroll } from '../../../layout/components/main-scroll';\nimport { MainWrapper } from '../../../layout/components/main-wrapper';\nimport { Pools } from '../../../pool/components/main';\nimport { ConfirmTransactionDialog } from '../dialog-transaction';\nimport { Network } from '../network';\nimport { WarningDialog } from '../dialog-warning';\n\nexport const Main: React.FC = (props: any) => {\n  SnackbarUtil.snackbar = useSnackbar();\n  return (\n    <MainWrapper>\n      <WarningDialog />\n      <Header />\n      <Network />\n      <MainScroll>\n        <Pools></Pools>\n        <ConfirmTransactionDialog></ConfirmTransactionDialog>\n      </MainScroll>\n      <Footer />\n    </MainWrapper>\n  )\n}\n","import { ApolloProvider } from '@apollo/client';\nimport { styled } from '@mui/material';\nimport BigNumber from 'bignumber.js';\nimport { SnackbarProvider } from 'notistack';\nimport React from 'react';\nimport BackgroundSVG from './bg2.svg';\nimport { getApolloClient } from './clients/apollo.client';\nimport { ConnectedWeb3 } from './contexts/connectedWeb3';\nimport { Web3Provider } from './contexts/web3';\nimport { Main } from './features/main/components/main';\n\nconst Background = styled('div')(`\n  width: 100%;\n  background-repeat: no-repeat;\n  background-position: center;\n  background-size: cover;\n  background-image: url('${BackgroundSVG}');\n`\n);\n\nconst App: React.FC = () => {\n  const apolloClient = React.useMemo(() => getApolloClient(), [])\n  // Almost never return exponential notation\n  BigNumber.config({ EXPONENTIAL_AT: 1e+9 })\n  return (\n    <Background>\n      <SnackbarProvider maxSnack={3}>\n        <ApolloProvider client={apolloClient}>\n          <Web3Provider>\n            <ConnectedWeb3>\n              <Main />\n            </ConnectedWeb3>\n          </Web3Provider>\n        </ApolloProvider>\n      </SnackbarProvider>\n    </Background>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createTheme } from '@mui/material/styles';\nimport { red } from '@mui/material/colors';\n\n\n\n\n// A custom theme for this app\n// https://github.com/mui-org/material-ui/tree/master/examples/create-react-app-with-typescript\nconst theme = createTheme({\n\n  typography: {\n    fontFamily: ['Lato', 'Arial'].join(','),\n    h6: { fontFamily: ['Montserrat'].join(',') }\n  },\n  palette: {\n    primary: {\n      main: '#248C66',\n    },\n    secondary: {\n      main: '#4BD1A0',\n    },\n    error: {\n      main: red.A400,\n    },\n  },\n});\n\n\n\nexport default theme;","import * as React from 'react';\nimport ReactDOM from 'react-dom';\nimport CssBaseline from '@mui/material/CssBaseline';\nimport { ThemeProvider } from '@mui/material/styles';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport theme from './theme';\n\nReactDOM.render(\n  <ThemeProvider theme={theme}>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </ThemeProvider>,\n  document.querySelector('#root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","export abstract class CommonUtil {\n  static isString(value: any): boolean {\n    return typeof value === 'string' || value instanceof String;\n  }\n\n  static isNullOrWhitespace(value?: Maybe<string>): boolean {\n    if (!CommonUtil.isString(value)) {\n      return true;\n    } else {\n      return value === null || value === undefined || value.trim() === '';\n    }\n  }\n\n  static isNullOrDefault(value?: string, defaultValue?: string): boolean {\n    return CommonUtil.isNullOrWhitespace(value) || value === defaultValue\n  }\n\n  static timeout(ms: number): Promise<void> {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n  }\n\n  static truncateString = (str: Maybe<string>, maxLength: number) => {\n    if (str) {\n      if (maxLength < str.length) {\n        return `${str.substr(0, maxLength)}...`\n      }\n    }\n    return str\n  }\n\n  static truncateStringInTheMiddle = (str: Maybe<string>, strPositionStart: number, strPositionEnd: number) => {\n    if (str) {\n      const minTruncatedLength = strPositionStart + strPositionEnd\n      if (minTruncatedLength < str.length) {\n        return `${str.substr(0, strPositionStart)}...${str.substr(str.length - strPositionEnd, str.length)}`\n      }\n    }\n    return str\n  }\n\n  static toJsonString(data: any): string {\n    return JSON.stringify(data, null, 2);\n  }\n\n  static async imageUrlToBlob(url: string): Promise<Blob> {\n    return (await fetch(url)).blob();\n  }\n\n  static random(min: number, max: number) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n  }\n\n  static equals(lh: any, rh: any): boolean {\n    // The ORDER of the properties IS IMPORTANT\n    return JSON.stringify(lh) === JSON.stringify(rh);\n  }\n}","import BigNumber from 'bignumber.js';\nimport EventEmitter from 'events';\nimport { GlobalEvent, Pool, PoolFilterValues } from './types';\n\nexport interface IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void\n  emitConnectWalletDialog(open: boolean): void\n  emitNetworkBlockHeightChanged(height: BigNumber): void\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void\n  emitPoolUpdate(pool: Pool): void\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class GlobalEmitter extends EventEmitter implements IGlobalEmitter {\n  emitConfirmTransactionDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConfirmTransactionDialog, open)\n  }\n  emitConnectWalletDialog(open: boolean): void {\n    this.emit(GlobalEvent.ConnectWalletDialog, open)\n  }\n  emitNetworkBlockHeightChanged(height: BigNumber): void {\n    this.emit(GlobalEvent.NetworkBlockHeightChanged, height)\n  }\n  emitPoolFilterValuesChanged(oldValues: PoolFilterValues, newValues: PoolFilterValues): void {\n    this.emit(GlobalEvent.PoolFilterValuesChanged, oldValues, newValues)\n  }\n  emitPoolDeposit(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolDeposit, id, amount, account)\n  }\n  emitPoolWithdraw(id: number, amount: BigNumber, account: string): void {\n    this.emit(GlobalEvent.PoolWithdraw, id, amount, account)\n  }\n  emitPoolUpdate(pool: Pool): void {\n    this.emit(GlobalEvent.PoolUpdate, pool)\n  }\n}\n\nconst emitter = new GlobalEmitter();\n\nexport const getEmitter = (): IGlobalEmitter => {\n  return emitter;\n}\n","export enum WalletType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class Wallet<T> {\n  private readonly _type: WalletType\n\n  active?: T\n  accounts: T[] = []\n\n  constructor(type: WalletType, init?: Partial<Wallet<T>>) {\n    this._type = type\n    this.baseInitinit(init)\n  }\n\n  static fromJS(data: any): Maybe<WebWallet | SessionWallet> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWallet(data)\n      case WalletType.Session:\n        return new SessionWallet(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletType {\n    return this._type\n  }\n\n  protected abstract createAccount(data: any): T\n\n  private baseInitinit(data?: any): void {\n    if (data) {\n      this.active = data.active ? this.createAccount(data.active) : undefined\n      if (data.accounts && Array.isArray(data.accounts)) {\n        data.accounts.forEach((account: any) => {\n          this.accounts.push(this.createAccount(account))\n        })\n      }\n    }\n    if (!this.accounts) {\n      this.accounts = []\n    }\n  }\n}\n\nexport class WebWallet extends Wallet<WebWalletAccount> {\n  mnemonic!: string\n\n  constructor(init?: Partial<WebWallet>) {\n    super(WalletType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.mnemonic = data.mnemonic\n    }\n  }\n\n  protected createAccount(data: any): WebWalletAccount {\n    return new WebWalletAccount(data)\n  }\n}\n\nexport class SessionWallet extends Wallet<SessionWalletAccount> {\n  session!: string\n  timestamp!: number\n\n  constructor(init?: Partial<SessionWallet>) {\n    super(WalletType.Session, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.session = data.session\n      this.timestamp = data.timestamp\n    }\n  }\n\n  protected createAccount(data: any): SessionWalletAccount {\n    return new SessionWalletAccount(data)\n  }\n}\n\nexport enum WalletAccountType {\n  Web = 'Web',\n  Session = 'Session'\n}\n\nexport abstract class WalletAccount {\n  private readonly _type: WalletAccountType\n\n  id!: string\n  address!: string\n\n  constructor(type: WalletAccountType, init?: Partial<WalletAccount>) {\n    this._type = type\n    this.baseInit(init)\n  }\n\n  static fromJS(data: any): Maybe<WalletAccount> {\n    data = typeof data === 'object' ? data : {}\n    switch (data._type) {\n      case WalletType.Web:\n        return new WebWalletAccount(data)\n      case WalletType.Session:\n        return new SessionWalletAccount(data)\n      default:\n        break\n    }\n    return undefined\n  }\n\n  get type(): WalletAccountType {\n    return this._type\n  }\n\n  private baseInit(data?: any): void {\n    if (data) {\n      this.id = data.id\n      this.address = data.address\n    }\n  }\n}\n\nexport class WebWalletAccount extends WalletAccount {\n  privateKey!: string\n\n  constructor(init?: Partial<WebWalletAccount>) {\n    super(WalletAccountType.Web, init)\n    this.init(init)\n  }\n\n  init(data?: any): void {\n    if (data) {\n      this.privateKey = data.privateKey\n    }\n  }\n}\n\nexport class SessionWalletAccount extends WalletAccount {\n  constructor(init?: Partial<SessionWalletAccount>) {\n    super(WalletAccountType.Session, init)\n  }\n}","import Connector from '@vite/connector';\nimport { WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { SessionWallet, SessionWalletAccount } from './types';\n\nconst logger = getLogger()\n\nexport interface IWalletConnector {\n  readonly uri: string\n  sendTransactionAsync(...args: any): Promise<any>\n  signMessageAsync(...args: any): Promise<any>\n  killSessionAsync(): Promise<void>\n  on(event: string | symbol, listener: (...args: any[]) => void): this\n  off(event: string | symbol, listener: (...args: any[]) => void): this\n}\n\nexport class WalletConnector extends Connector implements IWalletConnector {\n  private readonly _walletManager: WalletManager;\n\n  constructor(walletManager: WalletManager, opts: any, meta?: any) {\n    super(opts, meta);\n    this._walletManager = walletManager;\n    this.on('connect', (err: any, payload: any) => {\n      logger.info('WalletConnector.connect', err, payload)()\n      const { accounts } = payload.params[0];\n      this.saveSession(accounts);\n    });\n    this.on('disconnect', (err: any, payload: any) => {\n      logger.info('WalletConnector.disconnect', err, payload)()\n      this.stopBizHeartBeat()\n      this._walletManager.removeWallet()\n    });\n    this.on('session_update', (err: any, payload: any) => {\n      logger.info('WalletConnector.session_update', err, payload)()\n      const session = payload[0];\n      if (session && session.accounts) {\n        this.saveSession(session.accounts);\n      }\n    });\n  }\n\n  get uri(): string {\n    return super.uri\n  }\n\n  on(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.on(event, listener)\n  }\n\n  off(event: string | symbol, listener: (...args: any[]) => void): this {\n    return super.off(event, listener)\n  }\n\n  saveSession(accounts: string[]): void {\n    if (!accounts || !accounts[0]) {\n      throw new Error('address is null');\n    }\n    const sessionAccounts: SessionWalletAccount[] = []\n    for (let index = 0; index < accounts.length; index++) {\n      const address = accounts[index];\n      sessionAccounts.push(new SessionWalletAccount({\n        id: index.toString(),\n        address: address\n      }))\n    }\n    const wallet = new SessionWallet({\n      active: sessionAccounts[0],\n      accounts: sessionAccounts,\n      session: this.session,\n      timestamp: new Date().getTime()\n    })\n    this._walletManager.setWallet(wallet)\n  }\n\n  updateSession(): void {\n    const existing = this._walletManager.getWallet()\n    if (existing && existing instanceof SessionWallet) {\n      existing.timestamp = new Date().getTime()\n      this._walletManager.updateWalletStore(existing)\n    }\n  }\n\n  async createSession(): Promise<string> {\n    await super.createSession();\n    return this.uri;\n  }\n\n  async sendTransactionAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signAndSendTx', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async signMessageAsync(...args: any): Promise<any> {\n    return new Promise((res, rej) => {\n      this.on('disconnect', () => {\n        rej(\"Request aborted due to disconnect.\");\n      });\n\n      this.sendCustomRequest({ method: 'vite_signMessage', params: args }).then((r: any) => {\n        this.updateSession();\n        res(r);\n      }).catch((e: any) => {\n        rej(e);\n      });\n    });\n  }\n\n  async killSessionAsync(): Promise<any> {\n    await super.killSession();\n  }\n}","import { IWalletConnector, WalletConnector, WalletManager } from '.';\nimport { getLogger } from '../util/logger';\nimport { Network } from '../util/types';\n\nconst logger = getLogger()\n\nexport class WalletConnectorFactory {\n  private readonly _walletManager: WalletManager\n\n  constructor(walletManager: WalletManager) {\n    this._walletManager = walletManager\n  }\n\n  create(network: Network): IWalletConnector {\n    const session = this._walletManager.getValidSession()\n    const account = this._walletManager.getActiveAccount()\n    const opts = {\n      bridge: network.connectorUrl,\n      session\n    }\n    const meta = account ? { lastAccount: account.address } : undefined\n    const connector = new WalletConnector(this._walletManager, opts, meta)\n\n    if (!session) {\n      connector.createSession().then(() => logger.info('IWalletConnector connected', connector.uri)())\n    }\n\n    return connector\n  }\n}","import { SessionWallet, Wallet, WebWallet } from '.';\nimport { CommonConstants } from '../common/constants';\nimport { getLogger } from '../util/logger';\nimport { WalletType } from './types';\n\nconst logger = getLogger()\n\nexport class WalletStore {\n\n  private readonly _webWalletKey = CommonConstants.WEB_WALLET_STORAGE_SPACE;\n  private readonly _sessionWalletKey = CommonConstants.SESSION_WALLET_STORAGE_SPACE\n\n  clear(): void {\n    localStorage.removeItem(this._webWalletKey);\n    sessionStorage.removeItem(this._sessionWalletKey);\n  }\n\n  getItem(): Maybe<WebWallet | SessionWallet> {\n    let data;\n\n    try {\n      data = localStorage.getItem(this._webWalletKey);\n      if (!data) {\n        data = sessionStorage.getItem(this._sessionWalletKey);\n      }\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n\n    if (!data) {\n      return undefined;\n    }\n\n    try {\n      return Wallet.fromJS(JSON.parse(data));\n    } catch (err) {\n      logger.error(err)();\n      return undefined;\n    }\n  }\n\n  setItem(data: WebWallet | SessionWallet): void {\n    const saveData = JSON.stringify(data);\n\n    try {\n      switch (data.type) {\n        case WalletType.Web:\n          localStorage.setItem(this._webWalletKey, saveData);\n          break;\n        case WalletType.Session:\n          sessionStorage.setItem(this._sessionWalletKey, saveData);\n          break;\n        default:\n          throw new Error(`Wallet type '${data.type}' is not supported.`)\n      }\n    } catch (err) {\n      logger.error(err)();\n    }\n  }\n}","import { wallet } from '@vite/vitejs';\nimport { SessionWallet, WalletAccount, WebWallet, WebWalletAccount } from '.';\nimport { getLogger } from '../util/logger';\nimport { WalletStore } from './store';\n\nconst logger = getLogger()\n\nexport class WalletManager {\n  private readonly _store: WalletStore;\n  private _wallet?: WebWallet | SessionWallet;\n  private _mnemonicDeriveIndex = 0;\n  private _setWalletCallback?: (wallet?: WebWallet | SessionWallet | undefined) => void;\n\n  constructor() {\n    this._store = new WalletStore();\n  }\n\n  initWallet(): void {\n    const wallet = this._store.getItem();\n    if (wallet) {\n      this._wallet = wallet;\n      this._mnemonicDeriveIndex = wallet.accounts.length;\n      this.updateWallet();\n    }\n  }\n\n  set onSetWalletCallback(cb: (wallet?: WebWallet | SessionWallet | undefined) => void) {\n    this._setWalletCallback = cb;\n  }\n\n  getWallet(): Maybe<WebWallet | SessionWallet> {\n    return this._wallet;\n  }\n\n  setWallet(wallet?: WebWallet | SessionWallet): void {\n    this._wallet = wallet;\n    this.updateWalletStore(wallet)\n    this.updateWallet()\n  }\n\n  updateWallet(): void {\n    if (this._setWalletCallback) {\n      this._setWalletCallback(this._wallet);\n    }\n  }\n\n  updateWalletStore(wallet?: WebWallet | SessionWallet): void {\n    if (wallet) {\n      this._store.setItem(wallet);\n    }\n  }\n\n  createWebWallet(mnemonic: string): Maybe<WebWallet> {\n    if (!this.validateMnemonic(mnemonic)) {\n      return undefined;\n    }\n    this.resetWallet();\n    const account = this.createWebWalletAccount(mnemonic, 0);\n    const wallet = new WebWallet({\n      active: account,\n      mnemonic,\n      accounts: [\n        account\n      ]\n    });\n    this.setWallet(wallet);\n    return wallet;\n  }\n\n  removeWallet(): void {\n    this.resetWallet();\n    this.updateWallet();\n  }\n\n  getAccountByAddress(address: string): Maybe<WalletAccount> {\n    return this._wallet?.accounts?.find(e => e.address === address)\n  }\n\n  addAccount(): Maybe<WalletAccount> {\n    if (this._wallet instanceof WebWallet) {\n      const account = this.createWebWalletAccount(this._wallet.mnemonic);\n      this._wallet.accounts.push(account);\n      this.setActiveAccount(account);\n      return account;\n    }\n    return undefined\n  }\n\n  getActiveAccount(): Maybe<WalletAccount> {\n    return this._wallet?.active\n  }\n\n  setActiveAccount(account: WalletAccount): boolean {\n    if (this._wallet) {\n      this._wallet.active = account;\n      this._store.setItem(this._wallet);\n      this.updateWallet();\n      return true;\n    }\n    return false;\n  }\n\n  getAccounts(): WalletAccount[] {\n    if (this._wallet) {\n      return this._wallet.accounts;\n    }\n    return [];\n  }\n\n  getValidSession(): Maybe<string> {\n    const wallet = this._store.getItem();\n    if (wallet && wallet instanceof SessionWallet) {\n      if (new Date().getTime() - wallet.timestamp < 1000 * 60 * 10) {\n        return wallet.session;\n      } else {\n        logger.info('Found expired session.', wallet)();\n      }\n    }\n    return undefined;\n  }\n\n  private resetWallet(): void {\n    this._wallet = undefined;\n    this._mnemonicDeriveIndex = 0;\n    this._store.clear();\n  }\n\n  private createWebWalletAccount(mnemonic: string, index = this._mnemonicDeriveIndex): WebWalletAccount {\n    const { privateKey } = wallet.deriveAddress({\n      mnemonics: mnemonic,\n      index\n    });\n    let account = new WebWalletAccount({\n      id: index.toString(),\n      privateKey,\n      address: wallet.createAddressByPrivateKey(privateKey).address\n    });\n    this._mnemonicDeriveIndex = index + 1;\n    return account;\n  }\n\n  private validateMnemonic(mnemonic: Maybe<string>): Boolean {\n    if (mnemonic) {\n      return wallet.validateMnemonics(mnemonic);\n    }\n    return false;\n  }\n}\n\nconst manager = new WalletManager();\n\nexport const getWalletManager = () => {\n  return manager;\n}"],"sourceRoot":""}